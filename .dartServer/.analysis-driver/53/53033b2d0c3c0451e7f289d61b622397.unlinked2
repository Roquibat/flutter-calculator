ÄÇtypeadaptcopyWithlerppadded
shrinkWrapgetAdaptation_createAdaptationMap
brightnessapplyElevationOverlayColorcupertinoOverrideTheme
extensions	extensionadaptationMapinputDecorationThemematerialTapTargetSizepageTransitionsThemeplatformscrollbarThemesplashFactoryuseMaterial3visualDensitybottomAppBarColor_bottomAppBarColorcanvasColor	cardColorcolorSchemedialogBackgroundColordisabledColordividerColor
focusColorhighlightColor	hintColor
hoverColorindicatorColorprimaryColorprimaryColorDarkprimaryColorLightscaffoldBackgroundColorsecondaryHeaderColorshadowColorsplashColorunselectedWidgetColor	iconThemeprimaryIconThemeprimaryTextTheme	textTheme
typographyactionIconThemeappBarTheme
badgeThemebannerThemebottomAppBarThemebottomNavigationBarThemebottomSheetThemebuttonBarThemebuttonTheme	cardThemecheckboxTheme	chipThemedataTableThemedatePickerThemedialogThemedividerThemedrawerThemedropdownMenuThemeelevatedButtonThemeexpansionTileThemefilledButtonThemefloatingActionButtonThemeiconButtonThemelistTileThememenuBarThememenuButtonTheme	menuThemenavigationBarThemenavigationDrawerThemenavigationRailThemeoutlinedButtonThemepopupMenuThemeprogressIndicatorTheme
radioThemesearchBarThemesearchViewThemesegmentedButtonThemesliderThemesnackBarThemeswitchThemetabBarThemetextButtonThemetextSelectionThemetimePickerThemetoggleButtonsThemetooltipTheme
errorColor_errorColorbackgroundColor_backgroundColortoggleableActiveColor_toggleableActiveColor_localizedThemeDataCacheSize_localizedThemeDataCachelocalizeestimateBrightnessForColor_lerpThemeExtensions_themeExtensionIterableToMap==hashCodedebugFillProperties_materialTheme_cupertinoOverrideThemeprimaryContrastingColorresolveFrom	baseThemelocalTextGeometry_cache_maximumSizeputIfAbsentminimumDensitymaximumDensitystandardcomfortablecompactadaptivePlatformDensitydefaultDensityForPlatform
horizontalverticalbaseSizeAdjustmenteffectiveConstraintstoStringShort
AdaptationThemeExtension_kLightThemeHighlightColor_kLightThemeSplashColor_kDarkThemeHighlightColor_kDarkThemeSplashColorMaterialTapTargetSize	ThemeDataMaterialBasedCupertinoThemeData_IdentityThemeDataCacheKey
_FifoCacheVisualDensity_colorSchemeLightM3_colorSchemeDarkM3Å©Color
lerpDoubleInteractiveInkFeatureFactory
BrightnessSwitchadaptiveTypeSwitchThemeDataadaptationsObjectdoublematerialTapTargetSizeFloatingActionButtonMaterialButtonOutlinedButton
TextButtonElevatedButton
IconButtonshowTimePickerSnackBarChipRawChip	InputChip
ChoiceChip
FilterChip
ActionChipRadioCheckboxThemeMaterialAppofBuildContextBuilderColorScheme	immutableDiagnosticablecolorSchemeSeedfromSeedcopyWithprimarySwatch	TextStylelightdarkfromIterableboolNoDefaultCupertinoThemeDatadynamicInputDecorationThemePageTransitionsThemeTargetPlatformScrollbarThemeDataMaterialColorStringListIconThemeData	TextTheme
TypographyActionIconThemeDataAppBarThemeBadgeThemeDataMaterialBannerThemeDataBottomAppBarThemeBottomNavigationBarThemeDataBottomSheetThemeDataButtonBarThemeDataButtonThemeData	CardThemeCheckboxThemeDataChipThemeDataDataTableThemeDataDatePickerThemeDataDialogThemeDividerThemeDataDrawerThemeDataDropdownMenuThemeDataElevatedButtonThemeDataExpansionTileThemeDataFilledButtonThemeDataFloatingActionButtonThemeDataIconButtonThemeDataListTileThemeDataMenuBarThemeDataMenuButtonThemeDataMenuThemeDataNavigationBarThemeDataNavigationDrawerThemeDataNavigationRailThemeDataOutlinedButtonThemeDataPopupMenuThemeDataProgressIndicatorThemeDataRadioThemeDataSearchBarThemeDataSearchViewThemeDataSegmentedButtonThemeDataSliderThemeDataSnackBarThemeDataTabBarThemeTextButtonThemeDataTextSelectionThemeDataTimePickerThemeDataToggleButtonsThemeDataTooltipThemeData
Deprecated	noDefaultdefaultTargetPlatformandroidfuchsiaiOSpaddedlinuxmacOSwindows
shrinkWrapdefaultDensityForPlatformkIsWeb
InkSparklesplashFactory	InkRipple	InkSplash
brightness	seedColorsurfaceprimary	onSurface	onPrimary
backgroundoutlineerrorColorsbluegreyblack
tealAccent	secondarywhitewithOpacity
fromSwatchaccentColor	cardColorbackgroundColor
errorColorredwhite70black54white60colorSchemebuttonColordisabledColor
focusColor
hoverColorhighlightColorsplashColorwhite38black38material2021platformmaterial2014
fontFamilyapplyfontFamilyFallbackpackagemergecolorkDefaultIconLightColorkDefaultIconDarkColorrawadaptationMapapplyElevationOverlayColorcupertinoOverrideTheme
extensionsinputDecorationThemepageTransitionsThemescrollbarThemeuseMaterial3visualDensitycanvasColordialogBackgroundColordividerColor	hintColorindicatorColorprimaryColorprimaryColorDarkprimaryColorLightscaffoldBackgroundColorsecondaryHeaderColorshadowColorunselectedWidgetColor	iconThemeprimaryTextTheme	textTheme
typographyprimaryIconThemeactionIconThemeappBarTheme
badgeThemebannerThemebottomAppBarThemebottomNavigationBarThemebottomSheetThemebuttonBarThemebuttonTheme	cardThemecheckboxTheme	chipThemedataTableThemedatePickerThemedialogThemedividerThemedrawerThemedropdownMenuThemeelevatedButtonThemeexpansionTileThemefilledButtonThemefloatingActionButtonThemeiconButtonThemelistTileThememenuBarThememenuButtonTheme	menuThemenavigationBarThemenavigationDrawerThemenavigationRailThemeoutlinedButtonThemepopupMenuThemeprogressIndicatorTheme
radioThemesearchBarThemesearchViewThemesegmentedButtonThemesliderThemesnackBarThemeswitchThemetabBarThemetextButtonThemetextSelectionThemetimePickerThemetoggleButtonsThemetooltipThemetoggleableActiveColorbottomAppBarColorlocalizeMap
adaptationtypeMaterialsurfaceTintColor	elevationElevationOverlayapplyOverlayCupertinoThemeDataCupertinoThemenewInputDecorationInputDecorator	TextFieldTextFormFieldapplyDefaultsMaterialPageRoutebuildTransitionsPageTransitionsBuilder"debugDefaultTargetPlatformOverride	ScrollbarInkWellInkResponseBadgeBottomAppBarBottomSheetFilledButtontonalextendedfilledfilledTonaloutlinedSegmentedButtonToggleButtonsCardCheckboxListTileshowDatePickershowDateRangePickerDatePickerDialogDateRangePickerDialogInputDatePickerFormFieldAlertDialogDialog
fullscreenDividerVerticalDividerListTile
MenuAnchorDropdownMenuMenuBarNavigationBarBottomNavigationBarNavigationDrawerDrawerNavigationRailCircularProgressIndicatorLinearProgressIndicatorRadioListTile	SearchBarSearchAnchorSliderRangeSliderSwitchListTileTabBarTimePickerDialogAppBarSliverAppBarmediumlargeMaterialScrollBehaviorminimumDensitymaximumDensitystandardPopupMenuDivider	DataTable
BorderSidecreateBorderSideScaffoldPaginatedDataTableBackButtonIconCloseButtonIconDrawerButtonIconEndDrawerButtonIconMaterialBanner	ButtonBarDropdownButton	ChipThemeExpansionTile	MenuStyleSubmenuButtonMenuItemButtonProgressIndicatorSliderThemeTooltipTooltipThemeintinheritputIfAbsentcomputeLuminancemapidMapEntry
extensionAlerp
addEntriesentrieswherecontainsKeyentrykeyunmodifiable	identicaloverrideruntimeType	mapEqualskeysvalueshashAllvoidDiagnosticPropertiesBuilderdebugFillPropertiesfallbackaddIterablePropertydefaultValuelevelDiagnosticLeveldebugDiagnosticsPropertyEnumPropertyColorProperty_materialThemeprimaryContrastingColorbarBackgroundColorapplyThemeToAllCupertinoTextThemeDataresolveFromidentityHashCode	baseThemelocalTextGeometrylengthremovefirstRawMaterialButton
horizontalverticalOffsetBoxConstraintsdebugAssertIsValidminWidthclampDoubledxmaxWidth	minHeightdy	maxHeighthashDoublePropertytoStringShortdebugFormatDoubleprimaryContaineronPrimaryContaineronSecondarysecondaryContaineronSecondaryContainertertiary
onTertiarytertiaryContaineronTertiaryContaineronErrorerrorContaineronErrorContaineronBackgroundsurfaceVariantonSurfaceVariantoutlineVariantshadowscriminverseSurfaceonInverseSurfaceinversePrimarysurfaceTintDiagnosticableCupertinoThemeDataèÎúº URº≈%€‹ à«à÷
Brightness à†package:flutter/services.dart@Ä∂ÄÃColor
lerpDouble Ä¶  dart:ui  Ä–  package:flutter/cupertino.dart  Ä˘  package:flutter/foundation.dart  Å$  action_buttons.dart  ÅB  action_icons_theme.dart  Åd  app_bar_theme.dart  ÅÅ  badge_theme.dart  Åú  banner_theme.dart  Å∏  bottom_app_bar_theme.dart  Å‹   bottom_navigation_bar_theme.dart  Ç  bottom_sheet_theme.dart  Ç)  button_bar_theme.dart  ÇI  button_theme.dart  Çe  card_theme.dart  Ç  checkbox_theme.dart  Çù  chip_theme.dart  Ç∑  color_scheme.dart  Ç”  colors.dart  ÇÈ  constants.dart  É  data_table_theme.dart  É"  date_picker_theme.dart  ÉC  dialog_theme.dart  É_  divider_theme.dart  É|  drawer_theme.dart  Éò  dropdown_menu_theme.dart  Éª  elevated_button_theme.dart  É‡  expansion_tile_theme.dart  Ñ  filled_button_theme.dart  Ñ'  !floating_action_button_theme.dart  ÑS  icon_button_theme.dart  Ñt  ink_ripple.dart  Ñé  ink_sparkle.dart  Ñ©  ink_splash.dartÑŸÑ˙InteractiveInkFeatureFactory Ñ√  ink_well.dart  Ñ˝  input_decorator.dart  Ö  list_tile.dart  Ö5  list_tile_theme.dart  ÖT  menu_bar_theme.dart  Ör  menu_button_theme.dart  Öì  menu_theme.dart  Ö≠  navigation_bar_theme.dart  Ö—  navigation_drawer_theme.dart  Ö¯  navigation_rail_theme.dart  Ü  outlined_button_theme.dart  ÜB  page_transitions_theme.dart  Üh  popup_menu_theme.dart  Üà  progress_indicator_theme.dart  Ü∞  radio_theme.dart  ÜÀ  scrollbar_theme.dart  ÜÍ  search_bar_theme.dart  á
  search_view_theme.dart  á+  segmented_button_theme.dart  áQ  slider_theme.dart  ám  snack_bar_theme.dart  áå  switch_theme.dart  á®  tab_bar_theme.dart  á≈  text_button_theme.dart  áÊ  text_selection_theme.dart  à
  text_theme.dart  à$  time_picker_theme.dart  àE  toggle_buttons_theme.dart  ài  tooltip_theme.dart  àÜ  typography.dart    	dart:core¿ › ¿Nä© <ÄÜÄ§Ä•ÄŒÄœÄ¯Å"Å#ÅAÅcÅÄÅõÅ∑Å€ÇÇ(ÇHÇdÇ~ÇúÇ∂Ç“ÇËÉÉ!ÉBÉ^É{ÉóÉ∫ÉﬂÑÑ&ÑRÑsÑçÑ®Ñ¬Ñ¸ÖÖ4ÖSÖqÖíÖ¨Ö–Ö˜ÜÜAÜgÜáÜØÜ ÜÈá	á*áPáláãáßáƒáÂà	à#àDàhàÖàüà†àÿàŸàÒâââfâjâ•âªâ⁄ââÒää$ä%äuä¡ä«ãã`ã±ååYåØåµåÀççiçπçÊçÏé3éEéÅéÉéÑéÃé–èèè`è∞êêêê/êêóêõêËê¯ë5ëdë~ëëõë≥ë¥ë˜í(íHíIíäíêí≥í˚í˝í˛ìLìõìÏî=îmî©î™î˜ïGïjï£ï§ïñ0ñkñ£ñ§ñÔñÛó?ó]óaóãóèó€óÙòò"ò;òPòÇòïò§ò∂ò òﬂòÙô	ôô*ô=ôZôïôõôËö+öBöLöMöóö¨ö∫öºöΩõõ5õ9õÜõ“úúúiú∫ùù4ù8ùáù‘ûûhûπüü9ü=üQüïü‹†"†i†¨†‡†‰°1°A°E°u°™°´°∂°‹¢¢!¢p¢æ£
££[£•£§>§é§√§…••_•´•·•Á¶-¶}¶À¶˝ßßQßyßß»®®®X®§®…®œ®ﬂ®Â©0©n©Õ™)™?™è™›´+´O´P´m´ú´¬´˚¨.¨^¨ê¨¿¨ﬁ≠≠7≠O≠q≠~≠ÕÆÆTÆpÆàÆûÆºÆÿÆ˙ØØ-ØDØ_ØuØåØßØ¿Ø›Ø˚∞∞A∞b∞z∞í∞¥∞‘∞Ï±±'±E±j±ã±•±¡±Ÿ≤≤!≤A≤k≤ï≤—≤˝≥%≥G≥a≥á≥•≥Õ≥˜¥¥9¥[¥â¥ª¥ÎµµWµÅµßµÀµı∂∂C∂y∂´∂›∑∑=∑]∑Ö∑Ø∑„∏∏+∏M∏k∏ï∏≈∏ÔππCπyπäπ◊∫∫y∫µ∫ª∫›∫ÓªªQªWªnªª¨ªÁªÌº	ººHºÉºâºßºÆºÀΩΩ=ΩiΩ§ΩÃΩ‰ææ*æIæâæ™æÀæÓø3ø9øtøßø¿ @¿ @Y¿ @|¿ @«¿ @Ë¿ @È¿ @ˆ¿ A¿ Ah¿ A≠¿ A¯¿ B¿ B¿ BT¿ Bí¿ Bœ¿ C5¿ Cu¿ C®¿ CÕ¿ D6¿ D>¿ Dá¿ Dà¿ Dﬂ¿ E;¿ Eù¿ Eû¿ EÍ¿ F¿ FD¿ F~¿ FØ¿ Fÿ¿ G¿ G6¿ Gn¿ Gû¿ G∆¿ H
¿ H¿ H:¿ H]¿ Hû¿ Hˇ¿ IK¿ Ië¿ I‰¿ JV¿ J≥¿ K¿ K2¿ Ku¿ K¢¿ Kﬂ¿ L0¿ Lu¿ LÆ¿ L⁄¿ L˛¿ MI¿ Me¿ MÆ¿ M—¿ M¯¿ Mˇ¿ NG¿ Nó¿ NÂ¿ O.¿ Oì¿ Oﬁ¿ P/¿ Pl¿ Pë¿ P±¿ Pˆ¿ Q¿ Q8¿ QV¿ Q|¿ Qú¿ Q–¿ Q◊¿ R¿ Ro¿ Ræ¿ Rø¿ Rﬂ¿ Rˇ¿ SM¿ SÇ¿ S—¿ T.¿ TL¿ Tï¿ TÏ¿ TÚ¿ U¿ Uq¿ Uÿ¿ Uﬁ¿ U˘¿ V<¿ Vç¿ Vì¿ V∆¿ W¿ WÖ¿ X¿ X¿ X¿ XE¿ Xp¿ X•¿ X⁄¿ Y!¿ YX¿ Yã¿ Y∞¿ Y·¿ Z
¿ Z=¿ Zr¿ Zõ¿ Z ¿ Z˜¿ [0¿ [m¿ [®¿ [·¿ \*¿ \_¿ \ê¿ \ø¿ \Ù¿ ]¿ ]X¿ ]ô¿ ]÷¿ ^¿ ^F¿ ^â¿ ^¥¿ ^Á¿ _¿ _[¿ _à¿ _π¿ _Ê¿ `¿ `D¿ `¿ `¥¿ `Ô¿ a¿ a¿ aU¿ az¿ aƒ¿ b9¿ b:¿ bT¿ b¶¿ bˆ¿ cF¿ cl¿ cm¿ cå¿ cƒ¿ d¿ d8¿ dt¿ d¶¿ d⁄¿ e¿ e&¿ eL¿ ep¿ eí¿ e∂¿ e≈¿ eÂ¿ f¿ f!¿ fU¿ fy¿ fõ¿ fπ¿ fﬂ¿ f˚¿ g¿ g?¿ ga¿ gã¿ g∑¿ gÔ¿ h!¿ hA¿ ha¿ hï¿ h∑¿ h”¿ h˝¿ i¿ i7¿ ia¿ i{¿ i£¿ i√¿ i·¿ j¿ j-¿ jg¿ jë¿ j∑¿ j◊¿ jÛ¿ k¿ k3¿ kY¿ kÅ¿ k°¿ k√¿ k„¿ l¿ l?¿ lm¿ lô¿ l’¿ l˝¿ m!¿ mC¿ mk¿ má¿ mµ¿ mÈ¿ n¿ nI¿ no¿ n•¿ n√¿ nÈ¿ o¿ oC¿ oc¿ oá¿ oß¿ o«¿ oÔ¿ p¿ pE¿ ps¿ pï¿ pÕ¿ q¿ q¿ qG¿ qs¿ qz¿ q~¿ q¿ qÀ¿ r¿ r>¿ rD¿ rÖ¿ rÀ¿ rÍ¿ s¿ sR¿ s†¿ sÓ¿ t¿ t¿ t0¿ tQ¿ t¿ t©¿ t«¿ tÔ¿ u¿ u@¿ u\¿ u~¿ uü¿ uø¿ u‡¿ uÌ¿ v<¿ vp¿ v®¿ v«¿ v‰¿ w¿ w,¿ wM¿ wm¿ wã¿ w≠¿ w ¿ wË¿ x
¿ x*¿ xN¿ xs¿ xû¿ x∆¿ xÂ¿ y¿ y-¿ yM¿ yj¿ yé¿ y≤¿ yœ¿ yÌ¿ z¿ z(¿ zG¿ ze¿ zÑ¿ z©¿ z’¿ z˘¿ {¿ {:¿ {W¿ {x¿ {ï¿ {∑¿ {⁄¿ {˘¿ |¿ |8¿ |]¿ |Ñ¿ |™¿ |œ¿ |¸¿ }¿ }@¿ }`¿ }É¿ }†¿ }∆¿ }Ô¿ ~¿ ~=¿ ~_¿ ~â¿ ~ß¿ ~…¿ ~Ï¿ ¿ 3¿ T¿ s¿ í¿ µ¿ €¿ ˛¿ Ä$¿ ÄD¿ Äz¿ Äã¿ Äÿ¿ Å¿ Åz¿ Å∂¿ Åº¿ Åﬁ¿ ÅÔ¿ Ç¿ ÇR¿ ÇX¿ Ço¿ ÇÄ¿ Ç≠¿ ÇË¿ ÇÓ¿ É
¿ É¿ ÉI¿ ÉÑ¿ Éä¿ É®¿ É©¿ É‚¿ Ñ-¿ Ñd¿ ÑÖ¿ Ñ∞¿ Ñﬂ¿ Ö¿ ÖG¿ Öj¿ Öí¿ Öì¿ Ö·¿ Ü¿ Ü¿ ÜR¿ Üû¿ ÜË¿ á.¿ á4¿ á¿ áŒ¿ à
¿ à¿ à&¿ àq¿ àï¿ àõ¿ à©¿ àº¿ â¿ âM¿ âU¿ â_¿ âq¿ âw¿ â©¿ â‡¿ â˚¿ ä!¿ ä;¿ äS¿ äZ¿ äù¿ äû¿ äÛ¿ ãM¿ ã≠¿ ãÆ¿ ãƒ¿ ã‰¿ å¿ å7¿ åb¿ åô¿ å«¿ åÌ¿ ç*¿ çY¿ çé¿ çª¿ ç‡¿ ç¸¿ é&¿ éH¿ éO¿ éS¿ éT¿ éq¿ éw¿ é≈¿ è¿ èQ¿ ès¿ èì¿ èò¿ èô¿ èµ¿ èª¿ ê	¿ êW¿ êî¿ êµ¿ ê’¿ ê⁄¿ ê€¿ ë¿ ë¿ ë^¿ ëd¿ ë≤¿ í ¿ í¿ íU¿ íj¿ íÕ¿ íŒ¿ ì¿ ì¿ ìl¿ ì∑¿ ì∏¿ î ¿ ît¿ î≥¿ î◊¿ îﬁ¿ î¯¿ î¸¿ î˝¿ ï!¿ ï'¿ ïo¿ ï≥¿ ïÊ¿ ñ¿ ñ¿ ñl¿ ñ∏¿ ó¿ ó&¿ ó'¿ óB¿ óC¿ óë¿ ó≤¿ ó∏¿ ò¿ òQ¿ òù¿ ò´¿ ò±¿ ò˝¿ ôL¿ ôí¿ ô›¿ ö¿ ö ¿ öW¿ öô¿ öÊ¿ õ1¿ õb¿ õh¿ õ¢¿ õ®¿ õÚ¿ ú:¿ ú¿ úÆ¿ ú¥¿ úƒ¿ ú ¿ ù¿ ù0¿ ù¿ ù∞¿ û¿ û)¿ ûR¿ ûS¿ ûû¿ ûº¿ û¬¿ ü¿ üV¿ ü§¿ üÍ¿ ü¿ †B¿ †ç¿ † ¿ †À¿ †Ù¿ †˙¿ °Q¿ °Ñ¿ °ä¿ °π¿ °ø¿ °’¿ ¢'¿ ¢A¿ ¢G¿ ¢ñ¿ ¢®¿ ¢Æ¿ ¢æ¿ ¢ƒ¿ £¿ £M¿ £N¿ £î¿ £ö¿ £ﬂ¿ £Â¿ §¿ §D¿ §E¿ §ñ¿ §ÿ¿ §ﬁ¿ •¿ •G¿ •H¿ •ñ¿ •…¿ •œ¿ •˙¿ ¶-¿ ¶.¿ ¶n¿ ¶t¿ ¶ƒ¿ ß¿ ß¿ ßS¿ ßT¿ ßò¿ ßû¿ ßÏ¿ ®:¿ ®`¿ ®ì¿ ®î¿ ®‘¿ ®⁄¿ ©)¿ ©w¿ ©ä¿ ©ê¿ ©‡¿ ™)¿ ™x¿ ™¬¿ ´¿ ´F¿ ´ñ¿ ´Á¿ ¨ ¿ ¨&¿ ¨u¿ ¨¬¿ ≠¿ ≠]¿ ≠Æ¿ ≠‚¿ Æ¿ Æ¿ Æ`¿ ÆÅ¿ ÆÇ¿ Æ“¿ Æ˝¿ Æ˛¿ ØA¿ ØZ¿ Ø`¿ Øp¿ Øv¿ Øº¿ ∞¿ ∞5¿ ∞Ü¿ ∞¨¿ ∞‡¿ ∞·¿ ±,¿ ±2¿ ±w¿ ±∫¿ ±Ã¿ ±“¿ ≤¿ ≤\¿ ≤™¿ ≤‹¿ ≤‚¿ ≤Ù¿ ≤˙¿ ≥H¿ ≥Ü¿ ≥”¿ ¥¿ ¥¿ ¥Ü¿ ¥å¿ ¥Ë¿ µD¿ µ†¿ µ¸¿ ∂X¿ ∂^¿ ∂ú¿ ∂·¿ ∂Á¿ ∑5¿ ∑Ö¿ ∑Ø¿ ∑µ¿ ∑œ¿ ∑’¿ ∏¿ ∏
¿ ∏¿ ∏X¿ ∏Ä¿ ∏µ¿ ∏ª¿ ∏–¿ ∏Í¿ π¿ π:¿ πL¿ πø¿ ∫¿ ∫}¿ ∫ ¿ ∫‚¿ ª¿ ª&¿ ªg¿ ª∏¿ ª–¿ ºY¿ ºè¿ ºø¿ º€¿ Ω¿ Ω`¿ Ω•¿ Ω—¿ æ'¿ æX¿ æá¿ æß¿ æ—¿ æ˛¿ ø+¿ øq¿ øÆ¿ ¿¿ ¿¿ ¿Y¿ ¿ê¿ ¿ƒ¿ ¿ ¿ ¿⁄¿ ¿‡¿ ¡¿ ¡:¿ ¡;¿ ¡å¿ ¡í¿ ¡Õ¿ ¬¿ ¬a¿ ¬Æ¿ ¬ˇ¿ √8¿ √>¿ √ä¿ √€¿ ƒ*¿ ƒy¿ ƒ»¿ ≈¿ ≈¿ ≈c¿ ≈≤¿ ≈ﬁ¿ ≈‰¿ ∆.¿ ∆u¿ ∆¬¿ ∆»¿ «¿ «U¿ «[¿ «™¿ «ˆ¿ »L¿ »{¿ »ê¿ »µ¿ »∂¿ »¡¿ »¬¿ »Ò¿ …¿ …0¿ …k¿ …q¿ …ß¿ … ¿ …À¿  ¿  #¿  $¿  _¿  x¿  y¿  ≤¿  ∏¿ À	¿ ÀZ¿ À™¿ ÀÚ¿ Ã¿ Ã9¿ Ã:¿ Ãk¿ Ãê¿ Ãë¿ Ã÷¿ Õ¿ Õ5¿ ÕR¿ ÕS¿ Õî¿ Õ€¿ Õ·¿ Œ,¿ ŒN¿ Œj¿ Œk¿ Œµ¿ Œœ¿ Œ–¿ œ¿ œ@¿ œ^¿ œ_¿ œ°¿ œª¿ œ‘¿ œ’¿ –¿ –/¿ –I¿ –J¿ –Ü¿ –§¿ –•¿ –ı¿ –˚¿ —G¿ —è¿ —›¿ “¿ “.¿ “/¿ “]¿ “}¿ “~¿ “≠¿ “Œ¿ “œ¿ ”¿ ”h¿ ”è¿ ”ê¿ ”Ê¿ ‘¿ ‘z¿ ‘∏¿ ‘‹¿ ‘›¿ ’(¿ ’.¿ ’T¿ ’Z¿ ’ß¿ ’ı¿ ÷A¿ ÷é¿ ÷∑¿ ÷“¿ ÷”¿ ÷Ù¿ ÷˙¿ ◊
¿ ◊P¿ ◊k¿ ◊l¿ ◊≠¿ ◊¯¿ ÿ¿ ÿ¿ ÿ<¿ ÿ=¿ ÿÅ¿ ÿ¢¿ ÿ£¿ ÿﬁ¿ Ÿ¿ Ÿ¿ ŸA¿ Ÿe¿ Ÿf¿ ŸÆ¿ ŸÀ¿ ŸÃ¿ ⁄¿ ⁄!¿ ⁄X¿ ⁄w¿ ⁄x¿ ⁄é¿ ⁄è¿ ⁄€¿ €¿ €=¿ €>¿ €å¿ €™¿ €À¿ €Ã¿ ‹¿ ‹$¿ ‹%¿ ‹s¿ ‹†¿ ‹°¿ ‹Ù¿ ›!¿ ›"¿ ›s¿ ›Ç¿ ›¡¿ ›¬¿ ﬁ¿ ﬁB¿ ﬁC¿ ﬁì¿ ﬁæ¿ ﬁø¿ ﬂ¿ ﬂ'¿ ﬂL¿ ﬂM¿ ﬂÄ¿ ﬂÜ¿ ﬂº¿ ﬂŸ¿ ﬂ⁄¿ ‡)¿ ‡R¿ ‡S¿ ‡á¿ ‡ç¿ ‡√¿ ‡‰¿ ‡Â¿ ·,¿ ·;¿ ·f¿ ·g¿ ·µ¿ ·ƒ¿ ·Ò¿ ·Ú¿ ‚'¿ ‚H¿ ‚I¿ ‚ò¿ ‚∑¿ ‚ﬁ¿ ‚ﬂ¿ „,¿ „Q¿ „R¿ „•¿ „÷¿ „◊¿ ‰¿ ‰4¿ ‰i¿ ‰j¿ ‰≥¿ ‰Ê¿ ‰Á¿ Â+¿ ÂB¿ Âs¿ Ât¿ Â∑¿ Â’¿ Ê¿ Ê¿ Ê[¿ Êp¿ Êù¿ Êû¿ Ê‚¿ Á¿ Á¿ Á]¿ Áú¿ Á√¿ Áƒ¿ Ë¿ Ë^¿ Ëã¿ Ëå¿ Ë›¿ È¿ È?¿ È@¿ Èê¿ È¨¿ Èﬂ¿ È‡¿ Í0¿ ÍO¿ Íà¿ Íâ¿ Íÿ¿ Î¿ Î6¿ Î7¿ Î{¿ Îî¿ Î…¿ Î ¿ Ï¿ Ï*¿ ÏU¿ ÏV¿ ÏÆ¿ ÏÈ¿ ÏÍ¿ Ì6¿ ÌY¿ ÌZ¿ Ì™¿ Ì’¿ Ì÷¿ ÓA¿ Ón¿ Óo¿ Ó≈¿ Ó¸¿ Ó˝¿ Ô2¿ Ô8¿ Ôp¿ Ôï¿ Ôñ¿ ÔÏ¿ ¿ ¿ c¿ à¿ â¿ ‹¿ ˝¿ ˛¿ ÒB¿ ÒW¿ ÒÑ¿ ÒÖ¿ Ò’¿ Ú¿ Ú	¿ ÚY¿ ÚÜ¿ Úá¿ ÚÀ¿ Ú˛¿ Úˇ¿ ÛB¿ ÛH¿ ÛÅ¿ Û®¿ Û©¿ Û›¿ Ûﬁ¿ Ù)¿ Ùd¿ Ùs¿ Ùô¿ Ù“¿ Ù÷¿ Ù˛¿ ı¿ ı¿ ıU¿ ıÅ¿ ıê¿ ıª¿ ıÙ¿ ı¯¿ ˆ*¿ ˆK¿ ˆL¿ ˆõ¿ ˆƒ¿ ˆ”¿ ˜¿ ˜Z¿ ˜º¿ ˜ˆ¿ ˜˙¿ ¯8¿ ¯_¿ ¯`¿ ¯ª¿ ¯¡¿ ¯ˇ¿ ˘¿ ˘f¿ ˘¥¿ ˙¿ ˙&¿ ˙'¿ ˙D¿ ˙s¿ ˙ô¿ ˙“¿ ˚¿ ˚5¿ ˚g¿ ˚ó¿ ˚µ¿ ˚›¿ ¸¿ ¸0¿ ¸=¿ ¸å¿ ¸¿¿ ¸¯¿ ˝¿ ˝,¿ ˝B¿ ˝`¿ ˝Ç¿ ˝ú¿ ˝µ¿ ˝Ã¿ ˝Á¿ ˝˝¿ ˛¿ ˛/¿ ˛H¿ ˛e¿ ˛É¿ ˛ß¿ ˛»¿ ˛‡¿ ˛¯¿ ˇ¿ ˇ:¿ ˇX¿ ˇ}¿ ˇû¿ ˇ∏¿ ˇ‘¿ ˇÏ¿ ¿ 4¿ T¿ ~¿ ®¿ ‰¿¿8¿Z¿t¿ö¿∏¿‡¿
¿(¿L¿n¿ú¿Œ¿˛¿,¿j¿î¿∫¿ﬁ¿¿&¿V¿å¿æ¿¿¿P¿p¿ò¿¬¿ˆ¿¿>¿`¿~¿®¿ÿ¿¿2¿V¿å¿ù¿Í¿(¿å¿»¿Œ¿¿	¿	)¿	d¿	j¿	Å¿	í¿	ø¿	˙¿
 ¿
¿
-¿
[¿
ñ¿
ú¿
∫¿
À¿¿Q¿ñ¿ÿ¿¿¿2¿9¿{¿ï¿Á¿7¿á¿≠¿Æ¿Õ¿+¿å¿·¿F¿ï¿Á¿6¿a¿û¿ÿ¿)¿E¿|¿∂¿≈¿˘¿'¿~¿–¿
¿A¿r¿Ø¿›¿¿K¿Ç¿≈¿¿c¿≤¿Ê¿¿l¿é¿º¿ˇ¿B¿p¿°¿ª¿˚¿/¿`¿î¿⁄¿5¿x¿µ¿È¿¿Q¿¿º¿¸¿0¿g¿õ¿·¿-¿v¿º¿¿Z¿î¿À¿¿9¿Ç¿‘¿ ¿l¿©¿˛¿ /¿ l¿ ¨¿ ˚¿!/¿!i¿!ù¿!—¿"¿"Z¿"ö¿"„¿#¿#R¿#†¿#Õ¿$	¿$K¿$R¿$V¿$W¿$ß¿$ı¿%B¿%}¿%≤¿%≥¿%Ù¿&P¿&ß¿&®¿&ı¿'+¿'1¿'Å¿'“¿("¿(V¿(¶¿(Ó¿):¿)ã¿)Ÿ¿*(¿*y¿*Ä¿*Œ¿*ﬂ¿*Ê¿+4¿+^¿+_¿+ê¿+–¿+€¿+˛¿,O¿,í¿,ù¿,¶¿,≠¿,±¿,≤¿,ˆ¿-¿-¿-e¿-ñ¿-‘¿.¿.¿.Q¿.§¿.ˆ¿/G¿/y¿/Ω¿/·¿01¿0P¿0V¿0r¿0v¿0w¿0¨¿0≤¿0Ê¿0Ï¿1¿1x¿1â¿2¿2Q¿2Ø¿2π¿2Ÿ¿3¿3M¿3¿3Ä¿3ö¿3û¿3ü¿3Ó¿4M¿4–¿50¿5l¿5¸¿6¿6¿6	¿68¿6>¿6a¿6ü¿6∫¿6 ¿6–¿6Í¿7<¿7å¿7‹¿8¿8¿8"¿8d¿8Ã¿9(¿9Y¿9Ø¿:¿:^¿:ë¿:Á¿;)¿;h¿;∂¿;≈¿<¿<A¿<á¿<Ê¿=-¿=q¿=Ø¿=˘¿>4¿>r¿>º¿? ¿?P¿?£¿@¿@d¿@•¿@Ê¿AE¿Ag¿A©¿B ¿BS¿Bë¿B”¿BÌ¿CG¿Cç¿C”¿D%¿DÉ¿E¿E`¿E∑¿EÛ¿F1¿FÉ¿F∆¿G¿Gv¿Gº¿H
¿HU¿H∑¿I"¿Iâ¿IÏ¿Jo¿J ¿K¿Kl¿K«¿L
¿Lq¿L‰¿MO¿M∫¿N¿Nà¿NŒ¿O%¿OÄ¿OÓ¿P8¿Pä¿P‘¿Q¿Qu¿Q‹¿R6¿Rù¿RÏ¿S$¿SÇ¿Sø¿T¿T]¿Td¿Th¿Ti¿Tu¿Tò¿Tƒ¿Tÿ¿Tﬁ¿Tˇ¿US¿U•¿U˜¿V¿V ¿VA¿Vz¿Vƒ¿W¿W9¿Ww¿W∑¿Wı¿X¿XM¿X}¿X´¿X€¿XÏ¿Y¿Y@¿Yl¿Y¨¿Y‹¿Z
¿Z4¿Zf¿Zé¿Z∏¿ZÍ¿[¿[N¿[Ü¿[ ¿\¿\4¿\`¿\†¿\ƒ¿\Ï¿]"¿]X¿]Ä¿]™¿]∆¿]˙¿^&¿^P¿^|¿^¥¿^˙¿_0¿_b¿_é¿_∂¿_Ê¿`¿`@¿`t¿`†¿`Œ¿`˙¿a2¿an¿a®¿a‡¿b(¿b\¿bå¿b∫¿bÓ¿c¿cP¿cê¿cÃ¿d¿d:¿d|¿d¶¿dÿ¿e¿eJ¿ev¿e¶¿e“¿e˛¿f2¿fl¿f†¿f⁄¿g¿gB¿gÇ¿g¨¿g‡¿h¿h¿h¿h'¿h<¿hh¿h∫¿i
¿iZ¿iÄ¿iÅ¿i†¿iΩ¿i‹¿i˛¿j¿j6¿jR¿jn¿jã¿jß¿j∑¿jÕ¿j‚¿jˆ¿k¿k¿k-¿k>¿kQ¿kn¿kÉ¿kó¿k©¿kø¿k–¿k‚¿k¯¿l¿l$¿l=¿l\¿lx¿lã¿lû¿lª¿l›¿lÓ¿m¿m¿m/¿mA¿m[¿mr¿mÖ¿mó¿m™¿m√¿m„¿m˚¿n¿n$¿n5¿nJ¿n[¿nq¿nà¿nõ¿nØ¿n¬¿n€¿nˆ¿o¿o)¿oJ¿oa¿ov¿oä¿o°¿o≤¿oÃ¿oÈ¿p¿p¿p5¿pS¿pe¿p{¿pí¿pÆ¿p¡¿p÷¿pÈ¿p¸¿q¿q-¿qD¿q^¿qr¿q™¿q«¿qŸ¿q¿r	¿r¿r3¿r7¿r8¿rD¿râ¿r¥¿rÏ¿s<¿sä¿sÿ¿s¸¿s˝¿t¿t»¿uO¿v¿v¬¿wM¿w€¿xf¿xÒ¿yò¿zF¿zŸ¿{x¿{Ü¿|
¿|à¿}¿}¡¿~K¿~“¿S¿‡¿Ä^¿Äﬂ¿Ål¿Åˇ¿Çï¿É¿Éƒ¿Ñc¿ÑÁ¿Ök¿Ü¿Ü-¿Üõ¿á¿áè¿á˘¿àå¿à§¿â$¿âª¿äR¿äı¿ã§¿ås¿ç"¿ç…¿é=¿éß¿èJ¿è∏¿ê_¿ë
¿ë°¿í@¿í€¿ìé¿îI¿î“¿ïÖ¿ñX¿ó¿ó¶¿òE¿ò¿ôÉ¿ö:¿ö˝¿õ∏¿ús¿ù¿ù·¿ûx¿ü¿ü ¿†â¿†˝¿°†¿¢;¿¢´¿£V¿§¿§∏¿•A¿•∏¿•Ó¿¶ê¿ß¿ß°¿®7¿®;¿®=¿®>¿®à¿®´¿®Ø¿®¯¿©E¿©Q¿©U¿©§¿©Ú¿©ˆ¿™B¿™Ü¿™ä¿™€¿´&¿´u¿´ó¿´õ¿´©¿´≠¿´˜¿¨F¿¨T¿¨ñ¿¨¿¿≠¿≠a¿≠Æ¿≠‚¿Æ%¿Æv¿Æû¿Æ¬¿ÆË¿Æ˜¿Ø
¿Ø`¿Øe¿Øf¿Øã¿Ø§¿Ø∆¿∞¿∞Q¿∞n¿∞¿∞´¿∞Ÿ¿±¿±=¿±q¿±™¿±€¿±‰¿±Â¿≤¿≤D¿≤E¿≤Q¿≤±¿≤≤¿≤æ¿≥&¿≥'¿≥3¿≥≥¿≥¥¿≥¿¿¥B¿¥C¿¥|¿¥Ç¿¥ƒ¿µ¿µa¿µõ¿µ°¿µÚ¿∂9¿∂y¿∂Ö¿∂≤¿∂Œ¿∂Á¿∑¿∑2¿∑Q¿∑u¿∑ê¿∑ó¿∑≈¿∑€¿∏¿∏#¿∏G¿∏Å¿∏ü¿∏œ¿π	¿π3¿π<¿πC¿πG¿πH¿πT¿πç¿πÕ¿∫¿∫@¿∫V¿∫ä¿∫ë¿∫ï¿∫ó¿∫ò¿∫£¿∫∆¿ª¿ª¿ª0¿ªU¿ªV¿ª§¿ªΩ¿ª…¿º"¿º#¿º/¿ºR¿ºù¿º≈¿ºÙ¿Ω%¿Ωg¿Ωk¿Ωm¿Ωn¿ΩΩ¿ΩÎ¿ΩÔ¿æ>¿æ_¿æx¿æ¥¿æµ¿ø¿øO¿ø_¿øÑ¿øÖ¿øº¿ø¬¿¿¿¿=¿¿W¿¿X¿¿£¿¿ﬁ¿¡¿¡%¿¡H¿¡b¿¡w¿¡}¿¡¶¿¡Œ¿¡‘¿¡˜¿¡˚¿¡˝¿¡˛¿¬;¿¬?¿¬É¿¬—¿√¿√¿√T¿√§¿√Ô¿ƒ¿ƒ¿ƒ^¿ƒ≠¿ƒ¸¿≈¿≈
¿≈Q¿≈U¿≈g¿≈u¿≈ç¿≈°¿≈Ï¿≈˛¿∆¿∆.¿∆=¿∆X¿∆l¿∆p¿∆~¿∆Ç¿∆‘¿«¿«m¿«x¿«¢¿«—¿«◊¿»'¿»_¿»w¿»í¿»´¿»÷¿…¿…,¿…Y¿…Ü¿…á¿…™¿…◊¿…ÿ¿…˚¿ '¿ (¿ f¿ l¿ π¿À¿À ¿ÀY¿ÀZ¿À£¿À©¿Àı¿ÃE¿Ãï¿Ã◊¿Ã›¿Õ¿Õu¿Õv¿Õª¿Õ¡¿Œ¿Œ^¿Œ®¿Œ„¿ŒÈ¿œ%¿œ}¿œ~¿œÕ¿–¿–¿–c¿–Æ¿–≈¿–À¿–€¿–·¿—-¿—a¿—©¿—”¿“;¿“<¿“å¿“í¿“„¿”¿”¿”.¿”4¿”~¿”±¿”˝¿‘¿‘8¿‘W¿‘z¿‘â¿‘™¿‘À¿‘Ó¿’¿’¿’/¿’3¿’4¿’¿’ï¿’∞¿’»¿’ﬁ¿’Â¿’ˇ¿÷0¿÷[¿÷b¿÷f¿÷g¿÷ù¿÷£¿÷Ó¿◊?¿◊ä¿◊Œ¿ÿ¿ÿ3¿ÿ9¿ÿI¿ÿO¿ÿ£¿ÿ◊¿Ÿ@¿Ÿ[¿Ÿ\¿Ÿê¿Ÿñ¿Ÿﬂ¿⁄0¿⁄{¿⁄ø¿€¿€$¿€*¿€:¿€@¿€î¿€∆¿‹/¿‹H¿‹I¿‹ù¿‹£¿‹Û¿›/¿›5¿›|¿›®¿› ¿ﬁ¿ﬁi¿ﬁô¿ﬁ∫¿ﬁª¿ﬁÔ¿ﬁÛ¿ﬁÙ¿ﬂ&¿ﬂp¿ﬂã¿ﬂõ¿ﬂ°¿ﬂª¿ﬂ˘¿‡1¿‡8¿‡<¿‡=¿‡ã¿‡∏¿‡æ¿·¿·A¿·Ö¿·≥¿·‘¿‚:¿‚£¿‚™¿‚Æ¿‚Ø¿‚ª¿‚ﬁ¿„
¿„¿„$¿„F¿„p¿„ó¿„õ¿„ú¿„®¿„·¿„‚¿„Ó¿‰3¿‰^¿‰Ø¿‰¸¿Â ¿Â¿Â¿Â(¿Âó¿Âõ¿Âù¿Âû¿Â–¿Â—¿Ê¿ÊX¿ÊÄ¿Ê≥¿Ê¥¿ÊÈ¿Á	¿Á'¿ÁG¿Án¿Áó¿Á∑¿ÁŸ¿Ë¿Ë-¿ËL¿Ëm¿Ëï¿Ëø¿Ë€¿Ë˘¿È¿ÈE¿Èf¿Èâ¿Èß¿È«¿ÈÏ¿Í¿Í1¿ÍV¿Ís¿Íè¿Í¥¿Í€¿Î ¿ÎD¿Îf¿Îi¿Îj¿Îû¿ÎΩ¿Î€¿Î˚¿Ï"¿ÏK¿Ïk¿Ïç¿Ï∂¿Ï·¿Ì ¿Ì!¿ÌI¿Ìs¿Ìè¿Ì≠¿Ì“¿Ì˘¿Ó¿Ó=¿Ó[¿Ó{¿Ó†¿Ó«¿ÓÂ¿Ô
¿Ô'¿ÔC¿Ôh¿Ôè¿Ô¥¿Ô¯¿¿¿¿N    ?Ä• Ä∂ÄÃÄœ  Ä¯  Å#  ÅA  Åc  ÅÄ  Åõ  Å∑  Å€  Ç  Ç(  ÇH  Çd  Ç~  Çú  Ç∂  Ç“  ÇË  É  É!  ÉB  É^  É{  Éó  É∫  Éﬂ  Ñ  Ñ&  ÑR  Ñs  Ñç  Ñ®  Ñ¬ ÑŸÑ˙Ñ¸  Ö  Ö4  ÖS  Öq  Öí  Ö¨  Ö–  Ö˜  Ü  ÜA  Üg  Üá  ÜØ  Ü   ÜÈ  á	  á*  áP  ál  áã  áß  áƒ  áÂ  à	  à#  àD  àh  àÖ  à†à«à÷ âÖrâ´Äî/// Defines a customized theme for components with an `adaptive` factory constructor.
///
/// Currently, only [Switch.adaptive] supports this class.â∂â∂âΩ2 â‚âÏ/// Creates an [Adaptation].   âÛ0ä/// The adaptation's type.   ä'ÑYéIÉ˚/// Typically, this is overridden to return an instance of a custom component
/// ThemeData class, like [SwitchThemeData], instead of the defaultValue.
///
/// Factory constructors that support adaptations - currently only
/// [Switch.adaptive] - look for a [ThemeData.adaptations] member of the expected
/// type when computing their effective default component theme. If a matching
/// adaptation is not found, the component may choose to use a default adaptation.
/// For example, the [Switch.adaptive] component uses an empty [SwitchThemeData]
/// if a matching adaptation is not found, for the sake of backwards compatibility.
///
/// {@tool dartpad}
/// This sample shows how to create and use subclasses of [Adaptation] that
/// define adaptive [SwitchThemeData]s. The [adapt] method in this example is
/// overridden to only customize cupertino-style switches, but it can also be
/// used to customize any other platforms.
///
/// ** See code in examples/api/lib/material/switch/switch.4.dart **
/// {@end-tool} éOéZ  é`éc    éÑÑxëÇs/// An interface that defines custom additions to a [ThemeData] object.
///
/// {@youtube 560 315 https://www.youtube.com/watch?v=8-szcYzFVao}
///
/// Typically used for custom colors. To use, subclass [ThemeExtension],
/// define a number of fields (e.g. [Color]s), and implement the [copyWith] and
/// [lerp] methods. The latter will ensure smooth transitions of properties when
/// switching themes.
///
/// {@tool dartpad}
/// This sample shows how to create and use a subclass of [ThemeExtension] that
/// defines two colors.
///
/// ** See code in examples/api/lib/material/theme/theme_extension.1.dart **
/// {@end-tool}ëëë7F ëlëz,/// Enable const constructor for subclasses.   ëÅ1ë®/// The extension's type.   ë∂Äëí<o/// Creates a copy of this theme extension with the given fields
/// replaced by the non-null parameter values.   íKÄØí«c/// Linearly interpolate with another [ThemeExtension] object.
///
/// {@macro dart.ui.shadow.lerp} íÃ"íÍ  íí¯    öΩ¿ç°ºÜÏ/// Defines the configuration of the overall visual [Theme] for a [MaterialApp]
/// or a widget subtree within the app.
///
/// The [MaterialApp] theme property can be used to configure the appearance
/// of the entire app. Widget subtrees within an app can override the app's
/// theme by including a [Theme] widget at the top of the subtree.
///
/// Widgets whose appearance should align with the overall theme can obtain the
/// current theme's configuration with [Theme.of]. Material components typically
/// depend exclusively on the [colorScheme] and [textTheme]. These properties
/// are guaranteed to have non-null values.
///
/// The static [Theme.of] method finds the [ThemeData] value specified for the
/// nearest [BuildContext] ancestor. This lookup is inexpensive, essentially
/// just a single HashMap access. It can sometimes be a little confusing
/// because [Theme.of] can not see a [Theme] widget that is defined in the
/// current build method's context. To overcome that, create a new custom widget
/// for the subtree that appears below the new [Theme], or insert a widget
/// that creates a new BuildContext, like [Builder].
///
/// {@tool dartpad}
/// This example demonstrates how a typical [MaterialApp] specifies
/// and uses a custom [Theme]. The theme's [ColorScheme] is based on a
/// single "seed" color and configures itself to match the platform's
/// current light or dark color configuration. The theme overrides the
/// default configuration of [FloatingActionButton] to show how to
/// customize the appearance a class of components.
///
/// ** See code in examples/api/lib/material/theme_data/theme_data.0.dart **
/// {@end-tool}
///
/// See <https://material.io/design/color/> for
/// more discussion on how to pick the right colors. °ﬁ¿ Oü ™3™<á˛/// Create a [ThemeData] that's used to configure a [Theme].
///
/// The [colorScheme] and [textTheme] are used by the Material components to
/// compute default values for visual properties. The API documentation for
/// each component widget explains exactly how the defaults are computed.
///
/// When providing a [ColorScheme], apps can either provide one directly
/// with the [colorScheme] parameter, or have one generated for them by
/// using the [colorSchemeSeed] and [brightness] parameters. A generated
/// color scheme will be based on the tones of [colorSchemeSeed] and all of
/// its contrasting color will meet accessibility guidelines for readability.
/// (See [ColorScheme.fromSeed] for more details.)
///
/// If the app wants to customize a generated color scheme, it can use
/// [ColorScheme.fromSeed] directly and then [ColorScheme.copyWith] on the
/// result to override any colors that need to be replaced. The result of
/// this can be used as the [colorScheme] directly.
///
/// For historical reasons, instead of using a [colorSchemeSeed] or
/// [colorScheme], you can provide either a [primaryColor] or [primarySwatch]
/// to construct the [colorScheme], but the results will not be as complete
/// as when using generation from a seed color.
///
/// If [colorSchemeSeed] is non-null then [colorScheme], [primaryColor] and
/// [primarySwatch] must all be null.
///
/// The [textTheme] [TextStyle] colors are black if the color scheme's
/// brightness is [Brightness.light], and white for [Brightness.dark].
///
/// To override the appearance of specific components, provide
/// a component theme parameter like [sliderTheme], [toggleButtonsTheme],
/// or [bottomNavigationBarTheme].
///
/// See also:
///
///  * [ThemeData.from], which creates a ThemeData from a [ColorScheme].
///  * [ThemeData.light], which creates a light blue theme.
///  * [ThemeData.dark], which creates dark theme with a teal secondary [ColorScheme] color.
///  * [ColorScheme.fromSeed], which is used to create a [ColorScheme] from a seed color.\´q)´ê  ´† ´ß  ´∆3´‰  ´ˇ-¨#  ¨2*¨I  ¨b,¨z  ¨î*¨´  ¨ƒ¨’  ¨‚"¨˜  ≠
+≠)  ≠;≠B  ≠S≠c  ÆXÆe  ÆtÆ|  ÆåÆî  Æ¢Æ∞  Æ¿Æ»  Æ‹Æ‰  Æ˛Ø  ØØ   Ø1Ø9  ØHØP  ØcØk  ØyØÅ  ØêØò  Ø´Ø≥  ØƒØÃ  Ø·ØÈ  Øˇ∞  ∞!∞)  ∞E∞M  ∞f∞n  ∞~∞Ü  ∞ñ∞û  ∞ÿ∞·  ∞ ∞ˇ  ±±  ±+±;  ±I±Y  ±n±z  ±è±õ  ±©±∂  ±›$±Û  ≤≤  ≤%≤6  ≤E$≤_  ≤o$≤É  ≤ô6≤∏  ≤’&≤Ï  ≥"≥  ≥)≥;  ≥K≥W  ≥e ≥y  ≥ã≥õ  ≥©"≥æ  ≥—$≥Á  ≥˚¥	  ¥¥,  ¥=¥O  ¥_(¥w  ¥ç,¥ß  ¥ø*¥ÿ  ¥Ô(µ  µ8µ=  µ[$µq  µÖ µô  µ´µæ  µœ$µÂ  µ˘∂	  ∂*∂0  ∂G0∂c  ∂},∂ó  ∂Ø,∂…  ∂·"∂ˆ  ∑	2∑&  ∑A∑R  ∑a"∑v  ∑â$∑ü  ∑≥.∑Œ  ∑Á∑˘  ∏	 ∏  ∏/∏A  ∏Q∏_  ∏o$∏Ö  ∏ô*∏≤  ∏…$∏ﬂ  ∏Û*π  π#π6  π}Å^∫«  ∫·Äãªc  ªrÄïª˘  ºÄòºï  π}π~πà∫ππêπ›∫∫∫·∫‚∫ÏªU∫Ùªªrªsª}ªÎªÖª≤ººººáº ºN¿ qÅî¿ r˚¿ r¸¿ rˇÅ\/// Create a [ThemeData] given a set of exact values. Most values must be
/// specified. They all must also be non-null except for
/// [cupertinoOverrideTheme], and deprecated members.
///
/// This will rarely be used directly. It is used by [lerp] to
/// create intermediate themes based on two themes created with the
/// [ThemeData] constructor.V¿ t4¿ tC  ¿ tU(¿ td  ¿ tÉ$¿ tí  ¿ t≠¿ tº  ¿ tÀ"¿ t⁄  ¿ tÛ#¿ u  ¿ u"¿ u+  ¿ uD¿ uS  ¿ u`¿ uo  ¿ uÇ¿ uë  ¿ u£¿ u≤  ¿ u√¿ u“  ¿ v¨¿ vª  ¿ vÀ¿ v⁄  ¿ vË¿ v˜  ¿ w#¿ w  ¿ w0¿ w?  ¿ wQ¿ w`  ¿ wq¿ wÄ  ¿ wè¿ wû  ¿ w±¿ w¿  ¿ wŒ¿ w›  ¿ wÏ¿ w˚  ¿ x¿ x  ¿ x.¿ x=  ¿ xR¿ xa  ¿ xw%¿ xÜ  ¿ x¢"¿ x±  ¿ x ¿ xŸ  ¿ xÈ¿ x¯  ¿ y#¿ y  ¿ yQ¿ y`  ¿ yn¿ y}  ¿ yí¿ y°  ¿ y∂¿ y≈  ¿ y”¿ y‚  ¿ z	¿ z  ¿ z,¿ z;  ¿ zK¿ zZ  ¿ zi¿ zx  ¿ zà¿ zó  ¿ z≠&¿ zº  ¿ zŸ¿ zË  ¿ z˝¿ {  ¿ {¿ {.  ¿ {>¿ {M  ¿ {[¿ {j  ¿ {|¿ {ã  ¿ {ô¿ {®  ¿ {ª¿ {   ¿ {ﬁ¿ {Ì  ¿ {˝¿ |  ¿ |¿ |,  ¿ |<¿ |K  ¿ |a!¿ |p  ¿ |à ¿ |ó  ¿ |Æ¿ |Ω  ¿ |”'¿ |‚  ¿ } ¿ }  ¿ }#¿ }2  ¿ }D¿ }S  ¿ }d¿ }s  ¿ }á¿ }ñ  ¿ }§ ¿ }≥  ¿ } #¿ }Ÿ  ¿ }Û!¿ ~  ¿ ~!¿ ~)  ¿ ~A¿ ~P  ¿ ~c$¿ ~r  ¿ ~ç¿ ~ú  ¿ ~´¿ ~∫  ¿ ~Õ¿ ~‹  ¿ ~"¿ ~ˇ  ¿ ¿ '  ¿ 7¿ F  ¿ X¿ g  ¿ w¿ Ü  ¿ ñ¿ •  ¿ π ¿ »  ¿ ﬂ¿ Ó  ¿ Ä ¿ Ä  ¿ Ä(¿ Ä7  ¿ Ä~Å^¿ Å»  ¿ Å‚Äã¿ Çd  ¿ ÇsÄï¿ Ç˙  ¿ ÉÄò¿ Éñ  8¿ Ä~¿ Ä¿ Äâ¿ Å∫¿ Äë¿ Äﬁ¿ Å¿ ÅÄ¿ Å‚¿ Å„¿ ÅÌ¿ ÇV¿ Åı¿ Ç¿ Çs¿ Çt¿ Ç~¿ ÇÏ¿ ÇÜ¿ Ç≥¿ É¿ É¿ É¿ Éà¿ É!¿ ÉO¿ ÑK¿ Ñ4¿ ÑM¿ Ñw¿ Ñk¿ Ñy¿ Ñù¿ Ñå¿ Ñü¿ Ñ ¿ Ñ∑¿ ÑÃ¿ ÑÊ¿ ÑÏ¿ Ö
¿ Ö¿ ÑÌ¿ Ö¿ ÖN¿ ÖT¿ Ög¿ Ö`¿ ÖU¿ Öc¿ Öq¿ Öw¿ Öè¿ Öà¿ Öx¿ Öã¿ ÖïàΩ¿ âÛ¿ âÙ¿ â¯Ñ/// Create a [ThemeData] based on the colors in the given [colorScheme] and
/// text styles of the optional [textTheme].
///
/// If [colorScheme].brightness is [Brightness.dark] then
/// [ThemeData.applyElevationOverlayColor] will be set to true to support
/// the Material dark theme method for indicating elevation by applying
/// a semi-transparent onSurface color on top of the surface color.
///
/// This is the recommended method to theme your application. As we move
/// forward we will be converting all the widget implementations to only use
/// colors or colors derived from those in [ColorScheme].
///
/// {@tool snippet}
/// This example will set up an application to use the baseline Material
/// Design light and dark themes.
///
/// ```dart
/// MaterialApp(
///   theme: ThemeData.from(colorScheme: const ColorScheme.light()),
///   darkTheme: ThemeData.from(colorScheme: const ColorScheme.dark()),
/// )
/// ```
/// {@end-tool}
///
/// See <https://material.io/design/color/> for
/// more discussion on how to pick the right colors.¿ âˇ ¿ ä  ¿ ä%¿ ä1  ¿ ä?¿ äF   ¿ éVÅA¿ è&¿ è'¿ è,Ä∂/// A default light theme.
///
/// This theme does not contain text geometry. Instead, it is expected that
/// this theme is localized using text geometry using [ThemeData.localize].¿ è.¿ è5   ¿ èõÅ>¿ êj¿ êk¿ êoÄµ/// A default dark theme.
///
/// This theme does not contain text geometry. Instead, it is expected that
/// this theme is localized using text geometry using [ThemeData.localize].¿ êq¿ êx   ¿ ê›ÅÔ¿ í}¿ í~¿ íÜÅ|/// The default color theme. Same as [ThemeData.light].
///
/// This is used by [Theme.of] when no theme has been specified.
///
/// This theme does not contain text geometry. Instead, it is expected that
/// this theme is localized using text geometry using [ThemeData.localize].
///
/// Most applications would use [Theme.of], which provides correct localized
/// text geometry.¿ íà¿ íè   X¿ óEá¿ û6Üü/// Apply a semi-transparent overlay color on Material surfaces to indicate
/// elevation for dark themes.
///
/// If [useMaterial3] is true, then this flag is ignored as there is a new
/// [Material.surfaceTintColor] used to create an overlay for Material 3.
/// This flag is meant only for the Material 2 elevation overlay for dark
/// themes.
///
/// Material drop shadows can be difficult to see in a dark theme, so the
/// elevation of a surface should be portrayed with an "overlay" in addition
/// to the shadow. As the elevation of the component increases, the
/// overlay increases in opacity. [applyElevationOverlayColor] turns the
/// application of this overlay on or off for dark themes.
///
/// If true and [brightness] is [Brightness.dark], a
/// semi-transparent version of [ColorScheme.onSurface] will be
/// applied on top of [Material] widgets that have a [ColorScheme.surface]
/// color. The level of transparency is based on [Material.elevation] as
/// per the Material Dark theme specification.
///
/// If false the surface color will be used unmodified.
///
/// Defaults to false in order to maintain backwards compatibility with
/// apps that were built before the Material Dark theme specification
/// was published. New apps should set this to true for any themes
/// where [brightness] is [Brightness.dark].
///
/// See also:
///
///  * [Material.elevation], which effects the level of transparency of the
///    overlay color.
///  * [ElevationOverlay.applyOverlay], which is used by [Material] to apply
///    the overlay color to its surface color.
///  * <https://material.io/design/color/dark-theme.html>, which specifies how
///    the overlay should be applied. ¿ ûUÇs¿ †≤Ç%/// Components of the [CupertinoThemeData] to override from the Material
/// [ThemeData] adaptation.
///
/// By default, [cupertinoOverrideTheme] is null and Cupertino widgets
/// descendant to the Material [Theme] will adhere to a [CupertinoTheme]
/// derived from the Material [ThemeData]. e.g. [ThemeData]'s [ColorScheme]
/// will also inform the [CupertinoThemeData]'s `primaryColor` etc.
///
/// This cascading effect for individual attributes of the [CupertinoThemeData]
/// can be overridden using attributes of this [cupertinoOverrideTheme]. ¿ †ÕÇ~¿ £AÇ&/// Arbitrary additions to this theme.
///
/// To define extensions, pass an [Iterable] containing one or more [ThemeExtension]
/// subclasses to [ThemeData.new] or [copyWith].
///
/// To obtain an extension, use [extension].
///
/// {@tool dartpad}
/// This sample shows how to create and use a subclass of [ThemeExtension] that
/// defines two colors.
///
/// ** See code in examples/api/lib/material/theme/theme_extension.1.dart **
/// {@end-tool}
///
/// See also:
///
/// * [extension], a convenience function for obtaining a specific extension. ¿ §GÄ˛¿ •8Äƒ/// A map which contains the adaptations for the theme. The entry's key is the
/// type of the adaptation; the value is the adaptation itself.
///
/// To obtain an adaptation, use [getAdaptation]. ¿ •JÄ·¿ ¶Ä©/// The default [InputDecoration] values for [InputDecorator], [TextField],
/// and [TextFormField] are based on this theme.
///
/// See [InputDecoration.applyDefaults]. ¿ ¶0Å!¿ ß<ÄÂ/// Configures the hit test size of certain Material widgets.
///
/// Defaults to a [platform]-appropriate size: [MaterialTapTargetSize.padded]
/// on mobile platforms, [MaterialTapTargetSize.shrinkWrap] on desktop
/// platforms. ¿ ßVÅ;¿ ®}Å/// Default [MaterialPageRoute] transitions per [TargetPlatform].
///
/// [MaterialPageRoute.buildTransitions] delegates to a [platform] specific
/// [PageTransitionsBuilder]. If a matching builder is not found, a builder
/// whose platform is null is used. ¿ ®ñÖÈ¿ ÆwÖô/// The platform the material widgets should adapt to target.
///
/// Defaults to the current platform, as exposed by [defaultTargetPlatform].
/// This should be used in order to style UI elements according to platform
/// conventions.
///
/// Widgets from the material library should use this getter (via [Theme.of])
/// to determine the current platform for the purpose of emulating the
/// platform behavior (e.g. scrolling or haptic effects). Widgets and render
/// objects at lower layers that try to emulate the underlying platform
/// can depend on [defaultTargetPlatform] directly, or may require
/// that the target platform be provided as an argument. The
/// [dart:io.Platform] object should only be used directly when it's critical
/// to actually know the current platform, without any overrides possible (for
/// example, when a system API is about to be called).
///
/// In a test environment, the platform returned is [TargetPlatform.android]
/// regardless of the host platform. (Android was chosen because the tests
/// were originally written assuming Android-like behavior, and we added
/// platform adaptations for other platforms later). Tests can check behavior
/// for other platforms by setting the [platform] of the [Theme] explicitly to
/// another [TargetPlatform] value, or by setting
/// [debugDefaultTargetPlatformOverride].
///
/// Determines the defaults for [typography] and [materialTapTargetSize]. ¿ ÆÑw¿ ÆÌM/// A theme for customizing the colors, thickness, and shape of [Scrollbar]s. ¿ Ø Åﬁ¿ ∞—Åô/// Defines the appearance of ink splashes produces by [InkWell]
/// and [InkResponse].
///
/// See also:
///
///  * [InkSplash.splashFactory], which defines the default splash.
///  * [InkRipple.splashFactory], which defines a splash that spreads out
///    more aggressively than the default.
///  * [InkSparkle.splashFactory], which defines a more aggressive and organic
///    splash with sparkle effects. ¿ ∞„êU¿ ¡,èó/// A temporary flag that can be used to opt-out of Material 3 features.
///
/// This flag is _true_ by default. If false, then components will
/// continue to use the colors, typography and other features of
/// Material 2.
///
/// In the long run this flag will be deprecated and eventually
/// only Material 3 will be supported. We recommend that applications
/// migrate to Material 3 as soon as that's practical. Until that migration
/// is complete, this flag can be set to false.
///
/// ## Defaults
///
/// If a [ThemeData] is _constructed_ with [useMaterial3] set to true, then
/// some properties will get updated defaults. However, the
/// [ThemeData.copyWith] method with [useMaterial3] set to true will _not_
/// change any of these properties in the resulting [ThemeData].
///
/// <style>table,td,th { border-collapse: collapse; padding: 0.45em; } td { border: 1px solid }</style>
///
/// | Property        | Material 3 default             | Material 2 default             |
/// | :-------------- | :----------------------------- | :----------------------------- |
/// | [colorScheme]   | M3 baseline light color scheme | M2 baseline light color scheme |
/// | [typography]    | [Typography.material2021]      | [Typography.material2014]      |
/// | [splashFactory] | [InkSparkle]* or [InkRipple]   | [InkSplash]                    |
///
/// \* if the target platform is Android and the app is not
/// running on the web, otherwise it will fallback to [InkRipple].
///
/// If [brightness] is [Brightness.dark] then the default color scheme will
/// be either the M3 baseline dark color scheme or the M2 baseline dark color
/// scheme depending on [useMaterial3].
///
/// ## Affected widgets
///
/// This flag affects styles and components.
///
/// ### Styles
///   * Color: [ColorScheme], [Material] (see table above)
///   * Shape: (see components below)
///   * Typography: [Typography] (see table above)
///
/// ### Components
///   * Badges: [Badge]
///   * Bottom app bar: [BottomAppBar]
///   * Bottom sheets: [BottomSheet]
///   * Buttons
///     - Common buttons: [ElevatedButton], [FilledButton], [FilledButton.tonal], [OutlinedButton], [TextButton]
///     - FAB: [FloatingActionButton], [FloatingActionButton.extended]
///     - Icon buttons: [IconButton], [IconButton.filled] (*new*), [IconButton.filledTonal], [IconButton.outlined]
///     - Segmented buttons: [SegmentedButton] (replacing [ToggleButtons])
///   * Cards: [Card]
///   * Checkbox: [Checkbox], [CheckboxListTile]
///   * Chips:
///     - [ActionChip] (used for Assist and Suggestion chips),
///     - [FilterChip], [ChoiceChip] (used for single selection filter chips),
///     - [InputChip]
///   * Date pickers: [showDatePicker], [showDateRangePicker], [DatePickerDialog], [DateRangePickerDialog], [InputDatePickerFormField]
///   * Dialogs: [AlertDialog], [Dialog.fullscreen]
///   * Divider: [Divider], [VerticalDivider]
///   * Lists: [ListTile]
///   * Menus: [MenuAnchor], [DropdownMenu], [MenuBar]
///   * Navigation bar: [NavigationBar] (replacing [BottomNavigationBar])
///   * Navigation drawer: [NavigationDrawer] (replacing [Drawer])
///   * Navigation rail: [NavigationRail]
///   * Progress indicators: [CircularProgressIndicator], [LinearProgressIndicator]
///   * Radio button: [Radio], [RadioListTile]
///   * Search: [SearchBar], [SearchAnchor],
///   * Snack bar: [SnackBar]
///   * Slider: [Slider], [RangeSlider]
///   * Switch: [Switch], [SwitchListTile]
///   * Tabs: [TabBar], [TabBar.secondary]
///   * TextFields: [TextField] together with its [InputDecoration]
///   * Time pickers: [showTimePicker], [TimePickerDialog]
///   * Top app bar: [AppBar], [SliverAppBar], [SliverAppBar.medium], [SliverAppBar.large]
///
/// In addition, this flag enables features introduced in Android 12.
///   * Stretch overscroll: [MaterialScrollBehavior]
///   * Ripple: `splashFactory` (see table above)
///
/// See also:
///
///   * [Material 3 specification](https://m3.material.io/). ¿ ¡=áv¿ »¶á/// The density value for specifying the compactness of various UI components.
///
/// {@template flutter.material.themedata.visualDensity}
/// Density, in the context of a UI, is the vertical and horizontal
/// "compactness" of the elements in the UI. It is unitless, since it means
/// different things to different UI elements. For buttons, it affects the
/// spacing around the centered label of the button. For lists, it affects the
/// distance between baselines of entries in the list.
///
/// Typically, density values are integral, but any value in range may be
/// used. The range includes values from [VisualDensity.minimumDensity] (which
/// is -4), to [VisualDensity.maximumDensity] (which is 4), inclusive, where
/// negative values indicate a denser, more compact, UI, and positive values
/// indicate a less dense, more expanded, UI. If a component doesn't support
/// the value given, it will clamp to the nearest supported value.
///
/// The default for visual densities is zero for both vertical and horizontal
/// densities, which corresponds to the default visual density of components
/// in the Material Design specification.
///
/// As a rule of thumb, a change of 1 or -1 in density corresponds to 4
/// logical pixels. However, this is not a strict relationship since
/// components interpret the density values appropriately for their needs.
///
/// A larger value translates to a spacing increase (less dense), and a
/// smaller value translates to a spacing decrease (more dense).
///
/// In Material Design 3, the [visualDensity] does not override the value of
/// [IconButton.visualDensity] which defaults to [VisualDensity.standard]
/// for all platforms. To override the default value of [IconButton.visualDensity],
/// use [ThemeData.iconButtonTheme] instead.
/// {@endtemplate} ¿ …©¿ …∂  ¿ …ÕT¿  :/// The default color of [MaterialType.canvas] [Material]. ¿  &P¿  m8/// The color of [Material] when it is used as a [Card]. ¿  {Åº¿ Ã,Åê/// {@macro flutter.material.color_scheme.ColorScheme}
///
/// This property was added much later than the theme's set of highly specific
/// colors, like [cardColor], [canvasColor] etc. New components can be defined
/// exclusively in terms of [colorScheme]. Existing components will gradually
/// migrate to it, to the extent that is possible without significant
/// backwards compatibility breaks. ¿ Ã<R¿ Ãy./// The background color of [Dialog] elements. ¿ ÃìÄΩ¿ ÕCÄù/// The color used for widgets that are inoperative, regardless of
/// their state. For example, a disabled checkbox (which may be
/// checked or unchecked). ¿ ÕUÅ¿ Œ\Ä/// The color of [Divider]s and [PopupMenuDivider]s, also used
/// between [ListTile]s, between rows in [DataTable]s, and so forth.
///
/// To create an appropriate [BorderSide] that uses this color, consider
/// [Divider.createBorderSide]. ¿ Œm`¿ Œ√G/// The focus color used indicate that a component has the input focus. ¿ Œ“Ää¿ œNk/// The highlight color used during ink splash animations or to
/// indicate an item in a menu is selected. ¿ œaq¿ œ…W/// The color to use for hint text or placeholder text, e.g. in
/// [TextField] fields. ¿ œ◊p¿ –=U/// The hover color used to indicate when a pointer is hovering over a
/// component. ¿ –LV¿ –î9/// The color of the selected tab indicator in a tab bar. ¿ –ßÅÖ¿ “ Å`/// The background color for major parts of the app (toolbars, tab bars, etc)
///
/// The theme's [colorScheme] property contains [ColorScheme.primary], as
/// well as a color that contrasts well with the primary color called
/// [ColorScheme.onPrimary]. It might be simpler to just configure an app's
/// visuals in terms of the theme's [colorScheme]. ¿ “1J¿ “k+/// A darker version of the [primaryColor]. ¿ “ÄL¿ “ª,/// A lighter version of the [primaryColor]. ¿ “—Äº¿ ”vÄî/// The default color of the [Material] that underlies the [Scaffold]. The
/// background color for a typical material app or a page within the app. ¿ ”íÅH¿ ‘∆S/// The color of the header of a [PaginatedDataTable] when there are selected rows. ¿ ‘ﬂÅÒ¿ ÷≈Å«/// The color that the [Material] widget uses to draw elevation shadows.
///
/// Defaults to fully opaque black.
///
/// Shadows can be difficult to see in a dark theme, so the elevation of a
/// surface should be rendered with an "overlay" in addition to the shadow.
/// As the elevation of the component increases, the overlay increases in
/// opacity. The [applyElevationOverlayColor] property turns the elevation
/// overlay on or off for dark themes. ¿ ÷’Äî¿ ◊^t/// The color of ink splashes.
///
/// See also:
///  * [splashFactory], which defines the appearance of the splash. ¿ ◊nÄ≠¿ ÿÄá/// The color used for widgets in their inactive (but enabled)
/// state. For example, an unchecked checkbox. See also [disabledColor]. ¿ ÿ?a¿ ÿóA/// An icon theme that contrasts with the card and canvas colors. ¿ ÿ•_¿ ÿÙ8/// An icon theme that contrasts with the primary color. ¿ Ÿ	Z¿ ŸS7/// A text theme that contrasts with the primary color. ¿ Ÿha¿ Ÿ¿E/// Text with a color that contrasts with the card and canvas colors. ¿ ŸŒÄß¿ ⁄kÄÖ/// The color and geometry [TextTheme] values used to configure [textTheme].
///
/// Defaults to a [platform]-appropriate typography. ¿ ⁄ëÄ™¿ €,{/// A theme for customizing icons of [BackButtonIcon], [CloseButtonIcon],
/// [DrawerButtonIcon], or [EndDrawerButtonIcon]. ¿ €@Äâ¿ €æg/// A theme for customizing the color, elevation, brightness, iconTheme and
/// textTheme of [AppBar]s. ¿ €ŒT¿ ‹2/// A theme for customizing the color of [Badge]s. ¿ ‹'w¿ ‹ìK/// A theme for customizing the color and text style of a [MaterialBanner]. ¿ ‹£|¿ ›P/// A theme for customizing the shape, elevation, and color of a [BottomAppBar]. ¿ ›$Äõ¿ ›ß[/// A theme for customizing the appearance and layout of [BottomNavigationBar]
/// widgets. ¿ ›ƒ|¿ ﬁ0N/// A theme for customizing the color, elevation, and shape of a bottom sheet. ¿ ﬁEw¿ ﬁÆM/// A theme for customizing the appearance and layout of [ButtonBar] widgets. ¿ ﬁ¡Äâ¿ ﬂ?c/// Defines the default configuration of button widgets, like [DropdownButton]
/// and [ButtonBar]. ¿ ﬂOÄà¿ ﬂŒh/// The colors and styles used to render [Card].
///
/// This is the value returned from [CardTheme.of]. ¿ ﬂ‹t¿ ‡CL/// A theme for customizing the appearance and layout of [Checkbox] widgets. ¿ ‡UÄç¿ ‡Ÿi/// The colors and styles used to render [Chip]s.
///
/// This is the value returned from [ChipTheme.of]. ¿ ‡Á}¿ ·VQ/// A theme for customizing the appearance and layout of [DataTable]
/// widgets. ¿ ·iÄÜ¿ ·‡X/// A theme for customizing the appearance and layout of [DatePickerDialog]
/// widgets. ¿ ·ÙR¿ ‚;2/// A theme for customizing the shape of a dialog. ¿ ‚KÄë¿ ‚–i/// A theme for customizing the color, thickness, and indents of [Divider]s,
/// [VerticalDivider]s, etc. ¿ ‚·n¿ „DJ/// A theme for customizing the appearance and layout of [Drawer] widgets. ¿ „TÄÄ¿ „√P/// A theme for customizing the appearance and layout of [DropdownMenu] widgets. ¿ „ŸÄé¿ ‰TX/// A theme for customizing the appearance and internal layout of
/// [ElevatedButton]s. ¿ ‰lx¿ ‰“F/// A theme for customizing the visual properties of [ExpansionTile]s. ¿ ‰ÈÄà¿ Â`V/// A theme for customizing the appearance and internal layout of
/// [FilledButton]s. ¿ ÂvÄû¿ Â˚\/// A theme for customizing the shape, elevation, and color of a
/// [FloatingActionButton]. ¿ ÊÄÇ¿ ÊåT/// A theme for customizing the appearance and internal layout of
/// [IconButton]s. ¿ Ê†i¿ Ê¸A/// A theme for customizing the appearance of [ListTile] widgets. ¿ ÁÄ≥¿ ÁµÄã/// A theme for customizing the color, shape, elevation, and other [MenuStyle]
/// aspects of the menu bar created by the [MenuBar] widget. ¿ Á∆Ä√¿ ËzÄï/// A theme for customizing the color, shape, elevation, and text style of
/// cascading menu buttons created by [SubmenuButton] or [MenuItemButton]. ¿ ËéÄØ¿ È4Äç/// A theme for customizing the color, shape, elevation, and other [MenuStyle]
/// attributes of menus created by the [SubmenuButton] widget. ¿ ÈBÄõ¿ ÈÀg/// A theme for customizing the background color, text style, and icon themes
/// of a [NavigationBar]. ¿ È‚Ä§¿ Íqj/// A theme for customizing the background color, text style, and icon themes
/// of a [NavigationDrawer]. ¿ ÍãÄ©¿ Î!s/// A theme for customizing the background color, elevation, text style, and
/// icon themes of a [NavigationRail]. ¿ Î9Äé¿ Î¥X/// A theme for customizing the appearance and internal layout of
/// [OutlinedButton]s. ¿ ÎÃÄá¿ ÏE[/// A theme for customizing the color, shape, elevation, and text style of
/// popup menus. ¿ ÏXÄè¿ Ï—U/// A theme for customizing the appearance and layout of [ProgressIndicator] widgets. ¿ ÏÏk¿ ÌMI/// A theme for customizing the appearance and layout of [Radio] widgets. ¿ Ì\w¿ Ì≈M/// A theme for customizing the appearance and layout of [SearchBar] widgets. ¿ ÌÿÄî¿ Ó]h/// A theme for customizing the appearance and layout of search views created by [SearchAnchor] widgets. ¿ ÓqÄâ¿ ÓÊS/// A theme for customizing the appearance and layout of [SegmentedButton] widgets. ¿ ÓˇÄî¿ Ôàl/// The colors and shapes used to render [Slider].
///
/// This is the value returned from [SliderTheme.of]. ¿ Ôò{¿ S/// A theme for customizing colors, shape, elevation, and behavior of a [SnackBar]. ¿ n¿ {J/// A theme for customizing the appearance and layout of [Switch] widgets. ¿ ãp¿ P/// A theme for customizing the size, shape, and color of the tab bar indicator. ¿ Ò ÄÇ¿ ÒsT/// A theme for customizing the appearance and internal layout of
/// [TextButton]s. ¿ Òá¿ ÒÙM/// A theme for customizing the appearance and layout of [TextField] widgets. ¿ Úy¿ ÚuM/// A theme for customizing the appearance and layout of time picker widgets. ¿ Úâs¿ ÚÍA/// Defines the default configuration of [ToggleButtons] widgets. ¿ ÛÄ•¿ Ûö{/// A theme for customizing the visual properties of [Tooltip]s.
///
/// This is the value returned from [TooltipTheme.of]. ¿ ı ¿ ı  ¿ ˆ,¿ ˆ9  ¿ ¯:#¿ ¯G  ¿%1¿%ê ¿%Ø¿%µÄ¿&5>/// Caches localized themes to speed up the [localize] method.¿&V¿&`¿&Ü¿&a¿&}¿&á¿&§¿&à¿ îˇÅ¿ ï˜Äﬁ/// The overall theme brightness.
///
/// The default [TextStyle] color for the [textTheme] is black if the
/// theme is constructed with [Brightness.light] and white if the
/// theme is constructed with [Brightness.dark].   ¿ »ƒÄ‚¿ …},/// The default color of the [BottomAppBar].  ¿ »ı¿ »ˆ¿ … ¿ …o¿ …¿ …6¿ Û‡Å¿ Ù‚ÄÅ/// Obsolete property that was used for input validation errors, e.g. in
/// [TextField] fields. Use [ColorScheme.error] instead.  ¿ Ùf¿ Ùg¿ Ùq¿ Ù‘¿ Ùw¿ Ùù¿ ıÅ¿ ˆa/// Obsolete property that was unused by the framework.
/// Use [ColorScheme.background] instead.  ¿ ıÉ¿ ıÑ¿ ıé¿ ıˆ¿ ıî¿ ıø¿ ˆNÅÈ¿ ¯s/// The color used to highlight the active states of toggleable widgets like
/// [Switch], [Radio], and [Checkbox].  ¿ ˆ∆¿ ˆ«¿ ˆ—¿ ˜¯¿ ˆ◊¿ ˜"¿ ˜^¿ ˜¿¿hä¿h1   ¿h¿h¿ í–ÄÊ¿ ì}Äó/// Used to obtain a particular [Adaptation] from [adaptationMap].
///
/// To get an adaptation, use `Theme.of(context).getAdaptation<MyAdaptation>()`.¿ ìã¿ ìã  ¿ ì∫ÅA¿ ìﬂ  ¿ ìÙ(¿ î   ¿ £PÄÛ¿ §Äø/// Used to obtain a particular [ThemeExtension] from [extensions].
///
/// Obtain with `Theme.of(context).extension<MyThemeExtension>()`.
///
/// See [extensions] for an interactive example.¿ §'¿ §'  ¿ ¯b´Û¿ ˘Äò/// Creates a copy of this theme but with the given fields replaced with the new values.
///
/// The [brightness] value is applied to the [colorScheme]. W¿ ˙H)¿ ˙g  ¿ ˙w ¿ ˙~  ¿ ˙ù3¿ ˙ª  ¿ ˙÷-¿ ˙˙  ¿ ˚	*¿ ˚   ¿ ˚9,¿ ˚Q  ¿ ˚k*¿ ˚Ç  ¿ ˚õ¿ ˚¨  ¿ ˚π"¿ ˚Œ  ¿ ˚·+¿ ¸   ¿ ¸¿ ¸"  ¿ ¸¸¿ ˝	  ¿ ˝¿ ˝   ¿ ˝0¿ ˝8  ¿ ˝F¿ ˝T  ¿ ˝d¿ ˝l  ¿ ˝Ü¿ ˝é  ¿ ˝†¿ ˝®  ¿ ˝π¿ ˝¡  ¿ ˝–¿ ˝ÿ  ¿ ˝Î¿ ˝Û  ¿ ˛¿ ˛	  ¿ ˛¿ ˛   ¿ ˛3¿ ˛;  ¿ ˛L¿ ˛T  ¿ ˛i¿ ˛q  ¿ ˛á¿ ˛è  ¿ ˛´¿ ˛≥  ¿ ˛Ã¿ ˛‘  ¿ ˛‰¿ ˛Ï  ¿ ˛¸¿ ˇ  ¿ ˇ>¿ ˇN  ¿ ˇ\¿ ˇl  ¿ ˇÅ¿ ˇç  ¿ ˇ¢¿ ˇÆ  ¿ ˇº¿ ˇ…  ¿ ˇ$¿   ¿ ¿ (  ¿ 8¿ I  ¿ X$¿ r  ¿ Ç$¿ ñ  ¿ ¨6¿ À  ¿ Ë&¿ ˇ  ¿"¿)  ¿<¿N  ¿^¿j  ¿x ¿å  ¿û¿Æ  ¿º"¿—  ¿‰$¿˙  ¿¿  ¿,¿?  ¿P¿b  ¿r(¿ä  ¿†,¿∫  ¿“*¿Î  ¿(¿  ¿08¿P  ¿n$¿Ñ  ¿ò ¿¨  ¿æ¿—  ¿‚$¿¯  ¿¿  ¿**¿C  ¿Z0¿v  ¿ê,¿™  ¿¬,¿‹  ¿Ù"¿	  ¿2¿9  ¿T¿e  ¿t"¿â  ¿ú$¿≤  ¿∆.¿·  ¿˙¿  ¿ ¿0  ¿B¿T  ¿d¿r  ¿Ç$¿ò  ¿¨*¿≈  ¿‹$¿Ú  ¿*¿  ¿6¿I  ¿êÅ^¿⁄  ¿ÙÄã¿	v  ¿	ÖÄï¿
  ¿
 Äò¿
®  ¿
æÅr¿%  #¿ê¿ë¿õ¿Ã¿£¿¿.¿í¿Ù¿ı¿ˇ¿	h¿	¿	/¿	Ö¿	Ü¿	ê¿	˛¿	ò¿	≈¿
 ¿
!¿
+¿
ö¿
3¿
a¿
æ¿
ø¿
…¿¿
—¿¿W¿ú¿ﬁ¿&™Ü¿(iÅü/// Returns a new theme built by merging the text geometry provided by the
/// [localTextGeometry] theme with the [baseTheme].
///
/// For those text styles in the [baseTheme] whose [TextStyle.inherit] is set
/// to true, the returned theme's text styles inherit the geometric properties
/// of [localTextGeometry]. The resulting text styles' [TextStyle.inherit] is
/// set to those provided by [localTextGeometry]. ¿(r¿(}  ¿(á¿(í   ¿,¥É¡¿-™ÄŸ/// Determines whether the given [Color] is [Brightness.light] or
/// [Brightness.dark].
///
/// This compares the luminosity of the given color to a threshold value that
/// matches the Material Design specification. ¿-≈¿-Ã   ¿0yÉ$¿1=Äç/// Linearly interpolate between two [extensions].
///
/// Includes all theme extensions in [a] and [b].
///
/// {@macro dart.ui.shadow.lerp} ¿1R¿1]  ¿1_¿1j  ¿1l¿1t   ¿3°Çf¿4{Ä©/// Convert the [extensionsIterable] passed to [ThemeData.new] or [copyWith]
/// to the stored [extensions] map, where each entry's key consists of the extension's type. ¿4ò4¿4ª   ¿6û\¿6tQ/// Linearly interpolate between two themes.
///
/// {@macro dart.ui.shadow.lerp} ¿6y¿6Ñ  ¿6Ü¿6ë  ¿6ì¿6õ   ¿TkìÆ¿TÖ  ¿Tà¿Tê  ¿Tk¿Tl¿r:∂ ¿rK  ¿r_&¿r|  ¿r:¿r;°´°¨¿®>íX¿≠ËÑÅ/// A [CupertinoThemeData] that defers unspecified theme attributes to an
/// upstream Material [ThemeData].
///
/// This type of [CupertinoThemeData] is used by the Material [Theme] to
/// harmonize the [CupertinoTheme] with the material theme's colors and text
/// styles.
///
/// In the most basic case, [ThemeData]'s `cupertinoOverrideTheme` is null and
/// descendant Cupertino widgets' styling is derived from the Material theme.
///
/// To override individual parts of the Material-derived Cupertino styling,
/// `cupertinoOverrideTheme`'s construction parameters can be used.
///
/// To completely decouple the Cupertino styling from Material theme derivation,
/// another [CupertinoTheme] widget can be inserted as a descendant of the
/// Material [Theme]. On a [MaterialApp], this can be done using the `builder`
/// parameter on the constructor.
///
/// See also:
///
///  * [CupertinoThemeData], whose null constructor parameters default to
///    reasonable iOS styling defaults rather than harmonizing with a Material
///    theme.
///  * [Theme], widget which inserts a [CupertinoTheme] with this
///    [MaterialBasedCupertinoThemeData]. ¿Æ'Å= ¿Æ†¿Æøt/// Create a [MaterialBasedCupertinoThemeData] based on a Material [ThemeData]
/// and its `cupertinoOverrideTheme`.¿Æ∆ ¿Æ⁄  ¿ÆÔ¿ÆÛ¿ÆÙ¿Æı¿Øb¿Æ˚¿Ø¿ØQ¿Ø4¿Ø¿Ø¿Ø¿Ø7¿Ø=¿ØO¿ØP¿ØR¿ØS¿Ø\¿Ø]¿ØhÇ{¿Øá¿Øà¿Øâ ¿Øè¿Øï  ¿Ø®¿ØÆ  ¿∞t¿∞y¿∞z¿∞}¿±·¿∞á¿∞û¿∞ü¿∞≥¿∞ ¿∞À¿∞·¿∞¯¿∞˘¿±¿±1¿±2¿±E¿±\¿±]¿±y¿±ê¿±ë¿±≤¿±…¿± ¿±Á¿±˜  ¿≤	9¿≤+  ¿≤Gi¿≤b   ¿≤G¿≤H¿≤¥q¿≤    ¿≤¥¿≤µ¿≥)Äâ¿≥?   ¿≥)¿≥*¿≥∂Äã¿≥Ã   ¿≥∂¿≥∑¿¥EÖ¿∂ßÇ!/// Copies the [ThemeData]'s `cupertinoOverrideTheme`.
///
/// Only the specified override attributes of the [ThemeData]'s
/// `cupertinoOverrideTheme` and the newly specified parameters are in the
/// returned [CupertinoThemeData]. No derived attributes from iOS defaults or
/// from cascaded Material theme attributes are copied.
///
/// This [copyWith] cannot change the base Material [ThemeData]. To change the
/// base Material [ThemeData], create a new Material [Theme] and use
/// [ThemeData.copyWith] on the Material [ThemeData] instead. ¿∂∂¿∂√  ¿∂“¿∂⁄  ¿∂Î¿∂Û  ¿∑!¿∑(  ¿∑6¿∑>  ¿∑U¿∑]  ¿∑y¿∑Ä  ¿∂{¿∂|¿πJÅJ¿πi  ¿πu¿πÉ  ¿πJ¿πK ¿∫òÇ‘¿∫©  ¿∫»I ¿∫Œ¿∫Ë ¿∫È¿∫Ô  ¿∫˘¿∫ˇ   ¿ª¿ª%  ¿ª2!¿ªB  ¿ªøb¿ª”   ¿ªø¿ª¿¿º%ÅE¿º?  ¿ºB¿ºJ  ¿º%¿º&¿∫ò¿∫ô¿ΩnÑé¿æeÄ/// Cache of objects of limited size that uses the first in first out eviction
/// strategy (a.k.a least recently inserted).
///
/// The key that was inserted before all other keys is evicted first, i.e. the
/// one inserted least recently.¿æp¿æp¿æs¿æs¿æz9 ¿æz¿æÑ ¿æÖ¿æã  ¿æö¿æ†¿æ±¿æÆ¿æ°¿æ∞¿æ∑ÄÀ¿øqÄ£/// In Dart the map literal uses a linked hash-map implementation, whose keys
/// are stored such that [Map.keys] returns them in the order they were
/// inserted.¿øÄ¿øÅ¿øz¿ø¿ø{¿ø~¿øáÄŒ¿¿IÄØ/// Maximum number of entries to store in the cache.
///
/// Once this many entries have been cached, the entry inserted least recently
/// is evicted when adding a new entry.  ¿¿ZÅ†¿¿‚ÄÅ/// Returns the previously cached value for the given key, if available;
/// if not, calls the given callback to obtain it first. ¿¿Ó¿¿Ò  ¿¿ı¿¡    ¿¡˛£û¿«~Ön/// Defines the visual density of user interface components.
///
/// Density, in the context of a UI, is the vertical and horizontal
/// "compactness" of the components in the UI. It is unitless, since it means
/// different things to different UI components.
///
/// The default for visual densities is zero for both vertical and horizontal
/// densities, which corresponds to the default visual density of components in
/// the Material Design specification. It does not affect text sizes, icon
/// sizes, or padding values.
///
/// For example, for buttons, it affects the spacing around the child of the
/// button. For lists, it affects the distance between baselines of entries in
/// the list. For chips, it only affects the vertical size, not the horizontal
/// size.
///
/// Here are some examples of widgets that respond to density changes:
///
///  * [Checkbox]
///  * [Chip]
///  * [ElevatedButton]
///  * [IconButton]
///  * [InputDecorator] (which gives density support to [TextField], etc.)
///  * [ListTile]
///  * [MaterialButton]
///  * [OutlinedButton]
///  * [Radio]
///  * [RawMaterialButton]
///  * [TextButton]
///
/// See also:
///
///  * [ThemeData.visualDensity], where this property is used to specify the base
///    horizontal density of Material components.
///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html). ¿«§Å· ¿»g¿»tÄ¥/// A const constructor for [VisualDensity].
///
/// The [horizontal] and [vertical] arguments must be in the interval between
/// [minimumDensity] and [maximumDensity], inclusive.¿»{¿»Å  ¿»ñ¿»ú   ¿»ç¿»¶¿»≤¿»∏¿»”¿»¬¿»π¿»≈¿»›¿»„¿»˛¿»Ì¿»‰¿»¿…¿…¿…)¿…¿…¿…¿…3¿…9¿…V¿…E¿…:¿…H¿…`¿…f¿…É¿…r¿…g¿…u¿…âL¿…¿ /// The minimum allowed density.¿…—¿…“¿…⁄K¿  /// The maximum allowed density.¿ "¿ *Å-¿À=ÄÌ/// The default profile for [VisualDensity] in [ThemeData].
///
/// This default value represents a visual density that is less dense than
/// either [comfortable] or [compact], and corresponds to density values of
/// zero in both axes.¿ÀH¿ÀU¿ÀV¿À\Ç¿Õ6ÅÆ/// The profile for a "comfortable" interpretation of [VisualDensity].
///
/// Individual components will interpret the density value independently,
/// making themselves more visually dense than [standard] and less dense than
/// [compact] to different degrees based on the Material Design specification
/// of the "comfortable" setting for their particular use case.
///
/// It corresponds to a density value of -1 in both axes.¿ÕD¿ÕQ¿Õr¿Õ\¿ÕR¿Õ^¿Õ_¿Õl¿Õd¿Õn¿Õo¿ÕxÇ¿œBÅû/// The profile for a "compact" interpretation of [VisualDensity].
///
/// Individual components will interpret the density value independently,
/// making themselves more visually dense than [standard] and [comfortable] to
/// different degrees based on the Material Design specification of the
/// "comfortable" setting for their particular use case.
///
/// It corresponds to a density value of -2 in both axes.¿œL¿œY¿œz¿œd¿œZ¿œf¿œg¿œt¿œl¿œv¿œw¿÷iÇ¿ŸOÇº/// The horizontal visual density of UI components.
///
/// This property affects only the horizontal spacing between and within
/// components, to allow for different UI visual densities. It does not affect
/// text sizes, icon sizes, or padding values. The default value is 0.0,
/// corresponding to the metrics specified in the Material Design
/// specification. The value can range from [minimumDensity] to
/// [maximumDensity], inclusive.
///
/// See also:
///
///  * [ThemeData.visualDensity], where this property is used to specify the base
///    horizontal density of Material components.
///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html). ¿Ÿ^ÇË¿‹>Ç∂/// The vertical visual density of UI components.
///
/// This property affects only the vertical spacing between and within
/// components, to allow for different UI visual densities. It does not affect
/// text sizes, icon sizes, or padding values. The default value is 0.0,
/// corresponding to the metrics specified in the Material Design
/// specification. The value can range from [minimumDensity] to
/// [maximumDensity], inclusive.
///
/// See also:
///
///  * [ThemeData.visualDensity], where this property is used to specify the base
///    vertical density of Material components.
///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html). ¿œÄÇ∫¿—ÓÇ:/// Returns a [VisualDensity] that is adaptive based on the current platform
/// on which the framework is executing, from [defaultTargetPlatform].
///
/// When [defaultTargetPlatform] is a desktop platform, this returns
/// [compact], and for other platforms, it returns a default-constructed
/// [VisualDensity].
///
/// See also:
///
/// * [defaultDensityForPlatform] which returns a [VisualDensity] that is
///   adaptive based on the platform given to it.
/// * [defaultTargetPlatform] which returns the platform on which the
///   framework is currently executing.   ¿‹KÇß¿›µÅP/// The base adjustment in logical pixels of the visual density of UI components.
///
/// The input density values are multiplied by a constant to arrive at a base
/// size adjustment that fits Material Design guidelines.
///
/// Individual components may adjust this value based upon their own
/// individual interpretation of density.   ¿„ûB¿„≤   ¿„û¿„ü¿“>ÇÙ¿”»Åb/// Returns a [VisualDensity] that is adaptive based on the given [platform].
///
/// For desktop platforms, this returns [compact], and for other platforms, it
/// returns a default-constructed [VisualDensity].
///
/// See also:
///
/// * [adaptivePlatformDensity] which returns a [VisualDensity] that is
///   adaptive based on [defaultTargetPlatform]. ¿”‚¿”Ú   ¿’6Å/¿’•\/// Copy the current [VisualDensity] with the given values replacing the
/// current values. ¿’¥¿’Ω  ¿’Ã¿’’   ¿ﬁˆÅE¿ﬂ=//// Linearly interpolate between two densities. ¿ﬂB¿ﬂQ  ¿ﬂS¿ﬂb  ¿ﬂd¿ﬂl   ¿‡?Çn¿·RÄ˘/// Return a copy of [constraints] whose minimum width and height have been
/// updated with the [baseSizeAdjustment].
///
/// The resulting minWidth and minHeight values are clamped to not exceed the
/// maxWidth and maxHeight values, respectively. ¿·g¿·w   ¿‚±ÄÈ¿‚À  ¿‚Œ¿‚÷  ¿‚±¿‚≤¿„‰Å¿„ı  ¿‰	&¿‰&  ¿„‰¿„Â¿ÂÄó¿Â   ¿Â¿Â¿«m¿«n ñ§ÑôBÇò/// Configures the tap target and layout size of certain Material widgets.
///
/// Changing the value in [ThemeData.materialTapTargetSize] will affect the
/// accessibility experience.
///
/// Some of the impacted widgets include:
///
///   * [FloatingActionButton], only the mini tap target size is increased.
///   * [MaterialButton]
///   * [OutlinedButton]
///   * [TextButton]
///   * [ElevatedButton]
///   * [IconButton]
///   * The time picker widget ([showTimePicker])
///   * [SnackBar]
///   * [Chip]
///   * [RawChip]
///   * [InputChip]
///   * [ChoiceChip]
///   * [FilterChip]
///   * [ActionChip]
///   * [Radio]
///   * [Switch]
///   * [Checkbox]  ô\ÄÓöDÄ›/// Expands the minimum tap target size to 48px by 48px.
///
/// This is the default value of [ThemeData.materialTapTargetSize] and the
/// recommended size to conform to Android accessibility scanner
/// recommendations. öOiöÆZ/// Shrinks the tap target size to the minimum provided by the Material
/// specification.           îm:îy îñîõî¶îúïj7ïv ïêïïï†ïññ09ñ< ñXñ]ñhñ^ñk6ñw ñêñïñ†ññ¿Ê¥Ñ≥¿Ê∆ Äº¿Ê‹¿ÊÁ¿Îf¿Êı¿ÊÎ¿Ê˜¿Á¿Á¿Á¿Á¿Á¿Á¿Á$¿Á¿Á2¿Á)¿Á4¿Á9¿ÁD¿Á:¿ÁY¿ÁI¿Á[¿Á`¿Ák¿Áa¿ÁÇ¿Áp¿ÁÑ¿Áâ¿Áî¿Áä¿Á¢¿Áô¿Á§¿Á©¿Á¥¿Á™¿Áƒ¿Áπ¿Á∆¿ÁÀ¿Á÷¿ÁÃ¿ÁÌ¿Á€¿ÁÔ¿ÁÙ¿Áˇ¿Áı¿Ë¿Ë¿Ë¿Ë¿Ë*¿Ë ¿Ë7¿Ë/¿Ë9¿Ë>¿ËI¿Ë?¿ËX¿ËN¿ËZ¿Ë_¿Ëj¿Ë`¿ËÄ¿Ëo¿ËÇ¿Ëá¿Ëí¿Ëà¿Ë™¿Ëó¿Ë¨¿Ë±¿Ëº¿Ë≤¿Ë∆¿Ë¡¿Ë»¿ËÕ¿Ëÿ¿ËŒ¿Ë‰¿Ë›¿ËÊ¿ËÎ¿Ëˆ¿ËÏ¿È	¿Ë˚¿È¿È¿È¿È¿È0¿È ¿È2¿È7¿ÈB¿È8¿ÈQ¿ÈG¿ÈS¿ÈX¿Èc¿ÈY¿Èt¿Èh¿Èv¿È{¿ÈÜ¿È|¿Èí¿Èã¿Èî¿Èô¿È§¿Èö¿È≤¿È©¿È¥¿Èπ¿Èƒ¿È∫¿È◊¿È…¿ÈŸ¿Èﬁ¿ÈÈ¿Èﬂ¿È˛¿ÈÓ¿Í ¿Í¿Í¿Í¿Í¿Í¿Í¿Í#¿Í.¿Í$¿ÍA¿Í3¿ÍC¿ÍH¿ÍS¿ÍI¿Í^¿ÍX¿Í`¿Íe¿Íp¿Íf¿Íz¿Íu¿Í|¿ÍÅ¿Íå¿ÍÇ¿Íü¿Íë¿Í°¿Í¶¿Í±¿Íß¿Í∆¿Í∂¿Í»¿ÍÕ¿Íÿ¿ÍŒ¿ÍÎ¿Í›¿ÍÌ¿ÍÚ¿Í˝¿ÍÛ¿ÎQ¿ÎF¿ÎS¿ÎX¿Îc¿ÎY¿ÎjÑ±¿Î| Äº¿Îë¿Îú¿¿Î™¿Î†¿Î¨¿Î∂¿Î∑¿Î∆¿Îø¿Î»¿ÎÕ¿Îÿ¿ÎŒ¿ÎÊ¿Î›¿ÎË¿ÎÌ¿Î¯¿ÎÓ¿Ï¿Î˝¿Ï¿Ï¿Ï¿Ï¿Ï6¿Ï$¿Ï8¿Ï=¿ÏH¿Ï>¿ÏV¿ÏM¿ÏX¿Ï]¿Ïh¿Ï^¿Ïx¿Ïm¿Ïz¿Ï¿Ïä¿ÏÄ¿Ï°¿Ïè¿Ï£¿Ï®¿Ï≥¿Ï©¿ÏÃ¿Ï∏¿ÏŒ¿Ï”¿Ïﬁ¿Ï‘¿ÏÎ¿Ï„¿ÏÌ¿ÏÚ¿Ï˝¿ÏÛ¿Ì¿Ì¿Ì¿Ì¿Ì¿Ì¿Ì4¿Ì#¿Ì6¿Ì;¿ÌF¿Ì<¿Ì^¿ÌK¿Ì`¿Ìe¿Ìp¿Ìf¿Ìz¿Ìu¿Ì|¿ÌÅ¿Ìå¿ÌÇ¿Ìò¿Ìë¿Ìö¿Ìü¿Ì™¿Ì†¿ÌΩ¿ÌØ¿Ìø¿Ìƒ¿Ìœ¿Ì≈¿Ì‰¿Ì‘¿ÌÊ¿ÌÎ¿Ìˆ¿ÌÏ¿Ó¿Ì˚¿Ó¿Ó¿Ó¿Ó¿Ó(¿Ó¿Ó*¿Ó/¿Ó:¿Ó0¿ÓF¿Ó?¿ÓH¿ÓM¿ÓX¿ÓN¿Óf¿Ó]¿Óh¿Óm¿Óx¿Ón¿Óã¿Ó}¿Óç¿Óí¿Óù¿Óì¿Ó≤¿Ó¢¿Ó¥¿Óπ¿Óƒ¿Ó∫¿Ó–¿Ó…¿Ó“¿Ó◊¿Ó‚¿Óÿ¿Óı¿ÓÁ¿Ó˜¿Ó¸¿Ô¿Ó˝¿Ô¿Ô¿Ô¿Ô¿Ô$¿Ô¿Ô.¿Ô)¿Ô0¿Ô5¿Ô@¿Ô6¿ÔS¿ÔE¿ÔU¿ÔZ¿Ôe¿Ô[¿Ôz¿Ôj¿Ô|¿ÔÅ¿Ôå¿ÔÇ¿Ôü¿Ôë¿Ô°¿Ô¶¿Ô±¿Ôß¿¿Ô˙¿¿¿¿  ä© <ÄÜÄ§Ä•ÄŒÄœÄ¯Å"Å#ÅAÅcÅÄÅõÅ∑Å€ÇÇ(ÇHÇdÇ~ÇúÇ∂Ç“ÇËÉÉ!ÉBÉ^É{ÉóÉ∫ÉﬂÑÑ&ÑRÑsÑçÑ®Ñ¬Ñ¸ÖÖ4ÖSÖqÖíÖ¨Ö–Ö˜ÜÜAÜgÜáÜØÜ ÜÈá	á*áPáláãáßáƒáÂà	à#àDàhàÖàüà†àÿàŸàÒâââfâjâ•âªâ⁄ââÒää$ä%äuä¡ä«ãã`ã±ååYåØåµåÀççiçπçÊçÏé3éEéÅéÉéÑéÃé–èèè`è∞êêêê/êêóêõêËê¯ë5ëdë~ëëõë≥ë¥ë˜í(íHíIíäíêí≥í˚í˝í˛ìLìõìÏî=îmî©î™î˜ïGïjï£ï§ïñ0ñkñ£ñ§ñÔñÛó?ó]óaóãóèó€óÙòò"ò;òPòÇòïò§ò∂ò òﬂòÙô	ôô*ô=ôZôïôõôËö+öBöLöMöóö¨ö∫öºöΩõõ5õ9õÜõ“úúúiú∫ùù4ù8ùáù‘ûûhûπüü9ü=üQüïü‹†"†i†¨†‡†‰°1°A°E°u°™°´°∂°‹¢¢!¢p¢æ£
££[£•£§>§é§√§…••_•´•·•Á¶-¶}¶À¶˝ßßQßyßß»®®®X®§®…®œ®ﬂ®Â©0©n©Õ™)™?™è™›´+´O´P´m´ú´¬´˚¨.¨^¨ê¨¿¨ﬁ≠≠7≠O≠q≠~≠ÕÆÆTÆpÆàÆûÆºÆÿÆ˙ØØ-ØDØ_ØuØåØßØ¿Ø›Ø˚∞∞A∞b∞z∞í∞¥∞‘∞Ï±±'±E±j±ã±•±¡±Ÿ≤≤!≤A≤k≤ï≤—≤˝≥%≥G≥a≥á≥•≥Õ≥˜¥¥9¥[¥â¥ª¥ÎµµWµÅµßµÀµı∂∂C∂y∂´∂›∑∑=∑]∑Ö∑Ø∑„∏∏+∏M∏k∏ï∏≈∏ÔππCπyπäπ◊∫∫y∫µ∫ª∫›∫ÓªªQªWªnªª¨ªÁªÌº	ººHºÉºâºßºÆºÀΩΩ=ΩiΩ§ΩÃΩ‰ææ*æIæâæ™æÀæÓø3ø9øtøßø¿ @¿ @Y¿ @|¿ @«¿ @Ë¿ @È¿ @ˆ¿ A¿ Ah¿ A≠¿ A¯¿ B¿ B¿ BT¿ Bí¿ Bœ¿ C5¿ Cu¿ C®¿ CÕ¿ D6¿ D>¿ Dá¿ Dà¿ Dﬂ¿ E;¿ Eù¿ Eû¿ EÍ¿ F¿ FD¿ F~¿ FØ¿ Fÿ¿ G¿ G6¿ Gn¿ Gû¿ G∆¿ H
¿ H¿ H:¿ H]¿ Hû¿ Hˇ¿ IK¿ Ië¿ I‰¿ JV¿ J≥¿ K¿ K2¿ Ku¿ K¢¿ Kﬂ¿ L0¿ Lu¿ LÆ¿ L⁄¿ L˛¿ MI¿ Me¿ MÆ¿ M—¿ M¯¿ Mˇ¿ NG¿ Nó¿ NÂ¿ O.¿ Oì¿ Oﬁ¿ P/¿ Pl¿ Pë¿ P±¿ Pˆ¿ Q¿ Q8¿ QV¿ Q|¿ Qú¿ Q–¿ Q◊¿ R¿ Ro¿ Ræ¿ Rø¿ Rﬂ¿ Rˇ¿ SM¿ SÇ¿ S—¿ T.¿ TL¿ Tï¿ TÏ¿ TÚ¿ U¿ Uq¿ Uÿ¿ Uﬁ¿ U˘¿ V<¿ Vç¿ Vì¿ V∆¿ W¿ WÖ¿ X¿ X¿ X¿ XE¿ Xp¿ X•¿ X⁄¿ Y!¿ YX¿ Yã¿ Y∞¿ Y·¿ Z
¿ Z=¿ Zr¿ Zõ¿ Z ¿ Z˜¿ [0¿ [m¿ [®¿ [·¿ \*¿ \_¿ \ê¿ \ø¿ \Ù¿ ]¿ ]X¿ ]ô¿ ]÷¿ ^¿ ^F¿ ^â¿ ^¥¿ ^Á¿ _¿ _[¿ _à¿ _π¿ _Ê¿ `¿ `D¿ `¿ `¥¿ `Ô¿ a¿ a¿ aU¿ az¿ aƒ¿ b9¿ b:¿ bT¿ b¶¿ bˆ¿ cF¿ cl¿ cm¿ cå¿ cƒ¿ d¿ d8¿ dt¿ d¶¿ d⁄¿ e¿ e&¿ eL¿ ep¿ eí¿ e∂¿ e≈¿ eÂ¿ f¿ f!¿ fU¿ fy¿ fõ¿ fπ¿ fﬂ¿ f˚¿ g¿ g?¿ ga¿ gã¿ g∑¿ gÔ¿ h!¿ hA¿ ha¿ hï¿ h∑¿ h”¿ h˝¿ i¿ i7¿ ia¿ i{¿ i£¿ i√¿ i·¿ j¿ j-¿ jg¿ jë¿ j∑¿ j◊¿ jÛ¿ k¿ k3¿ kY¿ kÅ¿ k°¿ k√¿ k„¿ l¿ l?¿ lm¿ lô¿ l’¿ l˝¿ m!¿ mC¿ mk¿ má¿ mµ¿ mÈ¿ n¿ nI¿ no¿ n•¿ n√¿ nÈ¿ o¿ oC¿ oc¿ oá¿ oß¿ o«¿ oÔ¿ p¿ pE¿ ps¿ pï¿ pÕ¿ q¿ q¿ qG¿ qs¿ qz¿ q~¿ q¿ qÀ¿ r¿ r>¿ rD¿ rÖ¿ rÀ¿ rÍ¿ s¿ sR¿ s†¿ sÓ¿ t¿ t¿ t0¿ tQ¿ t¿ t©¿ t«¿ tÔ¿ u¿ u@¿ u\¿ u~¿ uü¿ uø¿ u‡¿ uÌ¿ v<¿ vp¿ v®¿ v«¿ v‰¿ w¿ w,¿ wM¿ wm¿ wã¿ w≠¿ w ¿ wË¿ x
¿ x*¿ xN¿ xs¿ xû¿ x∆¿ xÂ¿ y¿ y-¿ yM¿ yj¿ yé¿ y≤¿ yœ¿ yÌ¿ z¿ z(¿ zG¿ ze¿ zÑ¿ z©¿ z’¿ z˘¿ {¿ {:¿ {W¿ {x¿ {ï¿ {∑¿ {⁄¿ {˘¿ |¿ |8¿ |]¿ |Ñ¿ |™¿ |œ¿ |¸¿ }¿ }@¿ }`¿ }É¿ }†¿ }∆¿ }Ô¿ ~¿ ~=¿ ~_¿ ~â¿ ~ß¿ ~…¿ ~Ï¿ ¿ 3¿ T¿ s¿ í¿ µ¿ €¿ ˛¿ Ä$¿ ÄD¿ Äz¿ Äã¿ Äÿ¿ Å¿ Åz¿ Å∂¿ Åº¿ Åﬁ¿ ÅÔ¿ Ç¿ ÇR¿ ÇX¿ Ço¿ ÇÄ¿ Ç≠¿ ÇË¿ ÇÓ¿ É
¿ É¿ ÉI¿ ÉÑ¿ Éä¿ É®¿ É©¿ É‚¿ Ñ-¿ Ñd¿ ÑÖ¿ Ñ∞¿ Ñﬂ¿ Ö¿ ÖG¿ Öj¿ Öí¿ Öì¿ Ö·¿ Ü¿ Ü¿ ÜR¿ Üû¿ ÜË¿ á.¿ á4¿ á¿ áŒ¿ à
¿ à¿ à&¿ àq¿ àï¿ àõ¿ à©¿ àº¿ â¿ âM¿ âU¿ â_¿ âq¿ âw¿ â©¿ â‡¿ â˚¿ ä!¿ ä;¿ äS¿ äZ¿ äù¿ äû¿ äÛ¿ ãM¿ ã≠¿ ãÆ¿ ãƒ¿ ã‰¿ å¿ å7¿ åb¿ åô¿ å«¿ åÌ¿ ç*¿ çY¿ çé¿ çª¿ ç‡¿ ç¸¿ é&¿ éH¿ éO¿ éS¿ éT¿ éq¿ éw¿ é≈¿ è¿ èQ¿ ès¿ èì¿ èò¿ èô¿ èµ¿ èª¿ ê	¿ êW¿ êî¿ êµ¿ ê’¿ ê⁄¿ ê€¿ ë¿ ë¿ ë^¿ ëd¿ ë≤¿ í ¿ í¿ íU¿ íj¿ íÕ¿ íŒ¿ ì¿ ì¿ ìl¿ ì∑¿ ì∏¿ î ¿ ît¿ î≥¿ î◊¿ îﬁ¿ î¯¿ î¸¿ î˝¿ ï!¿ ï'¿ ïo¿ ï≥¿ ïÊ¿ ñ¿ ñ¿ ñl¿ ñ∏¿ ó¿ ó&¿ ó'¿ óB¿ óC¿ óë¿ ó≤¿ ó∏¿ ò¿ òQ¿ òù¿ ò´¿ ò±¿ ò˝¿ ôL¿ ôí¿ ô›¿ ö¿ ö ¿ öW¿ öô¿ öÊ¿ õ1¿ õb¿ õh¿ õ¢¿ õ®¿ õÚ¿ ú:¿ ú¿ úÆ¿ ú¥¿ úƒ¿ ú ¿ ù¿ ù0¿ ù¿ ù∞¿ û¿ û)¿ ûR¿ ûS¿ ûû¿ ûº¿ û¬¿ ü¿ üV¿ ü§¿ üÍ¿ ü¿ †B¿ †ç¿ † ¿ †À¿ †Ù¿ †˙¿ °Q¿ °Ñ¿ °ä¿ °π¿ °ø¿ °’¿ ¢'¿ ¢A¿ ¢G¿ ¢ñ¿ ¢®¿ ¢Æ¿ ¢æ¿ ¢ƒ¿ £¿ £M¿ £N¿ £î¿ £ö¿ £ﬂ¿ £Â¿ §¿ §D¿ §E¿ §ñ¿ §ÿ¿ §ﬁ¿ •¿ •G¿ •H¿ •ñ¿ •…¿ •œ¿ •˙¿ ¶-¿ ¶.¿ ¶n¿ ¶t¿ ¶ƒ¿ ß¿ ß¿ ßS¿ ßT¿ ßò¿ ßû¿ ßÏ¿ ®:¿ ®`¿ ®ì¿ ®î¿ ®‘¿ ®⁄¿ ©)¿ ©w¿ ©ä¿ ©ê¿ ©‡¿ ™)¿ ™x¿ ™¬¿ ´¿ ´F¿ ´ñ¿ ´Á¿ ¨ ¿ ¨&¿ ¨u¿ ¨¬¿ ≠¿ ≠]¿ ≠Æ¿ ≠‚¿ Æ¿ Æ¿ Æ`¿ ÆÅ¿ ÆÇ¿ Æ“¿ Æ˝¿ Æ˛¿ ØA¿ ØZ¿ Ø`¿ Øp¿ Øv¿ Øº¿ ∞¿ ∞5¿ ∞Ü¿ ∞¨¿ ∞‡¿ ∞·¿ ±,¿ ±2¿ ±w¿ ±∫¿ ±Ã¿ ±“¿ ≤¿ ≤\¿ ≤™¿ ≤‹¿ ≤‚¿ ≤Ù¿ ≤˙¿ ≥H¿ ≥Ü¿ ≥”¿ ¥¿ ¥¿ ¥Ü¿ ¥å¿ ¥Ë¿ µD¿ µ†¿ µ¸¿ ∂X¿ ∂^¿ ∂ú¿ ∂·¿ ∂Á¿ ∑5¿ ∑Ö¿ ∑Ø¿ ∑µ¿ ∑œ¿ ∑’¿ ∏¿ ∏
¿ ∏¿ ∏X¿ ∏Ä¿ ∏µ¿ ∏ª¿ ∏–¿ ∏Í¿ π¿ π:¿ πL¿ πø¿ ∫¿ ∫}¿ ∫ ¿ ∫‚¿ ª¿ ª&¿ ªg¿ ª∏¿ ª–¿ ºY¿ ºè¿ ºø¿ º€¿ Ω¿ Ω`¿ Ω•¿ Ω—¿ æ'¿ æX¿ æá¿ æß¿ æ—¿ æ˛¿ ø+¿ øq¿ øÆ¿ ¿¿ ¿¿ ¿Y¿ ¿ê¿ ¿ƒ¿ ¿ ¿ ¿⁄¿ ¿‡¿ ¡¿ ¡:¿ ¡;¿ ¡å¿ ¡í¿ ¡Õ¿ ¬¿ ¬a¿ ¬Æ¿ ¬ˇ¿ √8¿ √>¿ √ä¿ √€¿ ƒ*¿ ƒy¿ ƒ»¿ ≈¿ ≈¿ ≈c¿ ≈≤¿ ≈ﬁ¿ ≈‰¿ ∆.¿ ∆u¿ ∆¬¿ ∆»¿ «¿ «U¿ «[¿ «™¿ «ˆ¿ »L¿ »{¿ »ê¿ »µ¿ »∂¿ »¡¿ »¬¿ »Ò¿ …¿ …0¿ …k¿ …q¿ …ß¿ … ¿ …À¿  ¿  #¿  $¿  _¿  x¿  y¿  ≤¿  ∏¿ À	¿ ÀZ¿ À™¿ ÀÚ¿ Ã¿ Ã9¿ Ã:¿ Ãk¿ Ãê¿ Ãë¿ Ã÷¿ Õ¿ Õ5¿ ÕR¿ ÕS¿ Õî¿ Õ€¿ Õ·¿ Œ,¿ ŒN¿ Œj¿ Œk¿ Œµ¿ Œœ¿ Œ–¿ œ¿ œ@¿ œ^¿ œ_¿ œ°¿ œª¿ œ‘¿ œ’¿ –¿ –/¿ –I¿ –J¿ –Ü¿ –§¿ –•¿ –ı¿ –˚¿ —G¿ —è¿ —›¿ “¿ “.¿ “/¿ “]¿ “}¿ “~¿ “≠¿ “Œ¿ “œ¿ ”¿ ”h¿ ”è¿ ”ê¿ ”Ê¿ ‘¿ ‘z¿ ‘∏¿ ‘‹¿ ‘›¿ ’(¿ ’.¿ ’T¿ ’Z¿ ’ß¿ ’ı¿ ÷A¿ ÷é¿ ÷∑¿ ÷“¿ ÷”¿ ÷Ù¿ ÷˙¿ ◊
¿ ◊P¿ ◊k¿ ◊l¿ ◊≠¿ ◊¯¿ ÿ¿ ÿ¿ ÿ<¿ ÿ=¿ ÿÅ¿ ÿ¢¿ ÿ£¿ ÿﬁ¿ Ÿ¿ Ÿ¿ ŸA¿ Ÿe¿ Ÿf¿ ŸÆ¿ ŸÀ¿ ŸÃ¿ ⁄¿ ⁄!¿ ⁄X¿ ⁄w¿ ⁄x¿ ⁄é¿ ⁄è¿ ⁄€¿ €¿ €=¿ €>¿ €å¿ €™¿ €À¿ €Ã¿ ‹¿ ‹$¿ ‹%¿ ‹s¿ ‹†¿ ‹°¿ ‹Ù¿ ›!¿ ›"¿ ›s¿ ›Ç¿ ›¡¿ ›¬¿ ﬁ¿ ﬁB¿ ﬁC¿ ﬁì¿ ﬁæ¿ ﬁø¿ ﬂ¿ ﬂ'¿ ﬂL¿ ﬂM¿ ﬂÄ¿ ﬂÜ¿ ﬂº¿ ﬂŸ¿ ﬂ⁄¿ ‡)¿ ‡R¿ ‡S¿ ‡á¿ ‡ç¿ ‡√¿ ‡‰¿ ‡Â¿ ·,¿ ·;¿ ·f¿ ·g¿ ·µ¿ ·ƒ¿ ·Ò¿ ·Ú¿ ‚'¿ ‚H¿ ‚I¿ ‚ò¿ ‚∑¿ ‚ﬁ¿ ‚ﬂ¿ „,¿ „Q¿ „R¿ „•¿ „÷¿ „◊¿ ‰¿ ‰4¿ ‰i¿ ‰j¿ ‰≥¿ ‰Ê¿ ‰Á¿ Â+¿ ÂB¿ Âs¿ Ât¿ Â∑¿ Â’¿ Ê¿ Ê¿ Ê[¿ Êp¿ Êù¿ Êû¿ Ê‚¿ Á¿ Á¿ Á]¿ Áú¿ Á√¿ Áƒ¿ Ë¿ Ë^¿ Ëã¿ Ëå¿ Ë›¿ È¿ È?¿ È@¿ Èê¿ È¨¿ Èﬂ¿ È‡¿ Í0¿ ÍO¿ Íà¿ Íâ¿ Íÿ¿ Î¿ Î6¿ Î7¿ Î{¿ Îî¿ Î…¿ Î ¿ Ï¿ Ï*¿ ÏU¿ ÏV¿ ÏÆ¿ ÏÈ¿ ÏÍ¿ Ì6¿ ÌY¿ ÌZ¿ Ì™¿ Ì’¿ Ì÷¿ ÓA¿ Ón¿ Óo¿ Ó≈¿ Ó¸¿ Ó˝¿ Ô2¿ Ô8¿ Ôp¿ Ôï¿ Ôñ¿ ÔÏ¿ ¿ ¿ c¿ à¿ â¿ ‹¿ ˝¿ ˛¿ ÒB¿ ÒW¿ ÒÑ¿ ÒÖ¿ Ò’¿ Ú¿ Ú	¿ ÚY¿ ÚÜ¿ Úá¿ ÚÀ¿ Ú˛¿ Úˇ¿ ÛB¿ ÛH¿ ÛÅ¿ Û®¿ Û©¿ Û›¿ Ûﬁ¿ Ù)¿ Ùd¿ Ùs¿ Ùô¿ Ù“¿ Ù÷¿ Ù˛¿ ı¿ ı¿ ıU¿ ıÅ¿ ıê¿ ıª¿ ıÙ¿ ı¯¿ ˆ*¿ ˆK¿ ˆL¿ ˆõ¿ ˆƒ¿ ˆ”¿ ˜¿ ˜Z¿ ˜º¿ ˜ˆ¿ ˜˙¿ ¯8¿ ¯_¿ ¯`¿ ¯ª¿ ¯¡¿ ¯ˇ¿ ˘¿ ˘f¿ ˘¥¿ ˙¿ ˙&¿ ˙'¿ ˙D¿ ˙s¿ ˙ô¿ ˙“¿ ˚¿ ˚5¿ ˚g¿ ˚ó¿ ˚µ¿ ˚›¿ ¸¿ ¸0¿ ¸=¿ ¸å¿ ¸¿¿ ¸¯¿ ˝¿ ˝,¿ ˝B¿ ˝`¿ ˝Ç¿ ˝ú¿ ˝µ¿ ˝Ã¿ ˝Á¿ ˝˝¿ ˛¿ ˛/¿ ˛H¿ ˛e¿ ˛É¿ ˛ß¿ ˛»¿ ˛‡¿ ˛¯¿ ˇ¿ ˇ:¿ ˇX¿ ˇ}¿ ˇû¿ ˇ∏¿ ˇ‘¿ ˇÏ¿ ¿ 4¿ T¿ ~¿ ®¿ ‰¿¿8¿Z¿t¿ö¿∏¿‡¿
¿(¿L¿n¿ú¿Œ¿˛¿,¿j¿î¿∫¿ﬁ¿¿&¿V¿å¿æ¿¿¿P¿p¿ò¿¬¿ˆ¿¿>¿`¿~¿®¿ÿ¿¿2¿V¿å¿ù¿Í¿(¿å¿»¿Œ¿¿	¿	)¿	d¿	j¿	Å¿	í¿	ø¿	˙¿
 ¿
¿
-¿
[¿
ñ¿
ú¿
∫¿
À¿¿Q¿ñ¿ÿ¿¿¿2¿9¿{¿ï¿Á¿7¿á¿≠¿Æ¿Õ¿+¿å¿·¿F¿ï¿Á¿6¿a¿û¿ÿ¿)¿E¿|¿∂¿≈¿˘¿'¿~¿–¿
¿A¿r¿Ø¿›¿¿K¿Ç¿≈¿¿c¿≤¿Ê¿¿l¿é¿º¿ˇ¿B¿p¿°¿ª¿˚¿/¿`¿î¿⁄¿5¿x¿µ¿È¿¿Q¿¿º¿¸¿0¿g¿õ¿·¿-¿v¿º¿¿Z¿î¿À¿¿9¿Ç¿‘¿ ¿l¿©¿˛¿ /¿ l¿ ¨¿ ˚¿!/¿!i¿!ù¿!—¿"¿"Z¿"ö¿"„¿#¿#R¿#†¿#Õ¿$	¿$K¿$R¿$V¿$W¿$ß¿$ı¿%B¿%}¿%≤¿%≥¿%Ù¿&P¿&ß¿&®¿&ı¿'+¿'1¿'Å¿'“¿("¿(V¿(¶¿(Ó¿):¿)ã¿)Ÿ¿*(¿*y¿*Ä¿*Œ¿*ﬂ¿*Ê¿+4¿+^¿+_¿+ê¿+–¿+€¿+˛¿,O¿,í¿,ù¿,¶¿,≠¿,±¿,≤¿,ˆ¿-¿-¿-e¿-ñ¿-‘¿.¿.¿.Q¿.§¿.ˆ¿/G¿/y¿/Ω¿/·¿01¿0P¿0V¿0r¿0v¿0w¿0¨¿0≤¿0Ê¿0Ï¿1¿1x¿1â¿2¿2Q¿2Ø¿2π¿2Ÿ¿3¿3M¿3¿3Ä¿3ö¿3û¿3ü¿3Ó¿4M¿4–¿50¿5l¿5¸¿6¿6¿6	¿68¿6>¿6a¿6ü¿6∫¿6 ¿6–¿6Í¿7<¿7å¿7‹¿8¿8¿8"¿8d¿8Ã¿9(¿9Y¿9Ø¿:¿:^¿:ë¿:Á¿;)¿;h¿;∂¿;≈¿<¿<A¿<á¿<Ê¿=-¿=q¿=Ø¿=˘¿>4¿>r¿>º¿? ¿?P¿?£¿@¿@d¿@•¿@Ê¿AE¿Ag¿A©¿B ¿BS¿Bë¿B”¿BÌ¿CG¿Cç¿C”¿D%¿DÉ¿E¿E`¿E∑¿EÛ¿F1¿FÉ¿F∆¿G¿Gv¿Gº¿H
¿HU¿H∑¿I"¿Iâ¿IÏ¿Jo¿J ¿K¿Kl¿K«¿L
¿Lq¿L‰¿MO¿M∫¿N¿Nà¿NŒ¿O%¿OÄ¿OÓ¿P8¿Pä¿P‘¿Q¿Qu¿Q‹¿R6¿Rù¿RÏ¿S$¿SÇ¿Sø¿T¿T]¿Td¿Th¿Ti¿Tu¿Tò¿Tƒ¿Tÿ¿Tﬁ¿Tˇ¿US¿U•¿U˜¿V¿V ¿VA¿Vz¿Vƒ¿W¿W9¿Ww¿W∑¿Wı¿X¿XM¿X}¿X´¿X€¿XÏ¿Y¿Y@¿Yl¿Y¨¿Y‹¿Z
¿Z4¿Zf¿Zé¿Z∏¿ZÍ¿[¿[N¿[Ü¿[ ¿\¿\4¿\`¿\†¿\ƒ¿\Ï¿]"¿]X¿]Ä¿]™¿]∆¿]˙¿^&¿^P¿^|¿^¥¿^˙¿_0¿_b¿_é¿_∂¿_Ê¿`¿`@¿`t¿`†¿`Œ¿`˙¿a2¿an¿a®¿a‡¿b(¿b\¿bå¿b∫¿bÓ¿c¿cP¿cê¿cÃ¿d¿d:¿d|¿d¶¿dÿ¿e¿eJ¿ev¿e¶¿e“¿e˛¿f2¿fl¿f†¿f⁄¿g¿gB¿gÇ¿g¨¿g‡¿h¿h¿h¿h'¿h<¿hh¿h∫¿i
¿iZ¿iÄ¿iÅ¿i†¿iΩ¿i‹¿i˛¿j¿j6¿jR¿jn¿jã¿jß¿j∑¿jÕ¿j‚¿jˆ¿k¿k¿k-¿k>¿kQ¿kn¿kÉ¿kó¿k©¿kø¿k–¿k‚¿k¯¿l¿l$¿l=¿l\¿lx¿lã¿lû¿lª¿l›¿lÓ¿m¿m¿m/¿mA¿m[¿mr¿mÖ¿mó¿m™¿m√¿m„¿m˚¿n¿n$¿n5¿nJ¿n[¿nq¿nà¿nõ¿nØ¿n¬¿n€¿nˆ¿o¿o)¿oJ¿oa¿ov¿oä¿o°¿o≤¿oÃ¿oÈ¿p¿p¿p5¿pS¿pe¿p{¿pí¿pÆ¿p¡¿p÷¿pÈ¿p¸¿q¿q-¿qD¿q^¿qr¿q™¿q«¿qŸ¿q¿r	¿r¿r3¿r7¿r8¿rD¿râ¿r¥¿rÏ¿s<¿sä¿sÿ¿s¸¿s˝¿t¿t»¿uO¿v¿v¬¿wM¿w€¿xf¿xÒ¿yò¿zF¿zŸ¿{x¿{Ü¿|
¿|à¿}¿}¡¿~K¿~“¿S¿‡¿Ä^¿Äﬂ¿Ål¿Åˇ¿Çï¿É¿Éƒ¿Ñc¿ÑÁ¿Ök¿Ü¿Ü-¿Üõ¿á¿áè¿á˘¿àå¿à§¿â$¿âª¿äR¿äı¿ã§¿ås¿ç"¿ç…¿é=¿éß¿èJ¿è∏¿ê_¿ë
¿ë°¿í@¿í€¿ìé¿îI¿î“¿ïÖ¿ñX¿ó¿ó¶¿òE¿ò¿ôÉ¿ö:¿ö˝¿õ∏¿ús¿ù¿ù·¿ûx¿ü¿ü ¿†â¿†˝¿°†¿¢;¿¢´¿£V¿§¿§∏¿•A¿•∏¿•Ó¿¶ê¿ß¿ß°¿®7¿®;¿®=¿®>¿®à¿®´¿®Ø¿®¯¿©E¿©Q¿©U¿©§¿©Ú¿©ˆ¿™B¿™Ü¿™ä¿™€¿´&¿´u¿´ó¿´õ¿´©¿´≠¿´˜¿¨F¿¨T¿¨ñ¿¨¿¿≠¿≠a¿≠Æ¿≠‚¿Æ%¿Æv¿Æû¿Æ¬¿ÆË¿Æ˜¿Ø
¿Ø`¿Øe¿Øf¿Øã¿Ø§¿Ø∆¿∞¿∞Q¿∞n¿∞¿∞´¿∞Ÿ¿±¿±=¿±q¿±™¿±€¿±‰¿±Â¿≤¿≤D¿≤E¿≤Q¿≤±¿≤≤¿≤æ¿≥&¿≥'¿≥3¿≥≥¿≥¥¿≥¿¿¥B¿¥C¿¥|¿¥Ç¿¥ƒ¿µ¿µa¿µõ¿µ°¿µÚ¿∂9¿∂y¿∂Ö¿∂≤¿∂Œ¿∂Á¿∑¿∑2¿∑Q¿∑u¿∑ê¿∑ó¿∑≈¿∑€¿∏¿∏#¿∏G¿∏Å¿∏ü¿∏œ¿π	¿π3¿π<¿πC¿πG¿πH¿πT¿πç¿πÕ¿∫¿∫@¿∫V¿∫ä¿∫ë¿∫ï¿∫ó¿∫ò¿∫£¿∫∆¿ª¿ª¿ª0¿ªU¿ªV¿ª§¿ªΩ¿ª…¿º"¿º#¿º/¿ºR¿ºù¿º≈¿ºÙ¿Ω%¿Ωg¿Ωk¿Ωm¿Ωn¿ΩΩ¿ΩÎ¿ΩÔ¿æ>¿æ_¿æx¿æ¥¿æµ¿ø¿øO¿ø_¿øÑ¿øÖ¿øº¿ø¬¿¿¿¿=¿¿W¿¿X¿¿£¿¿ﬁ¿¡¿¡%¿¡H¿¡b¿¡w¿¡}¿¡¶¿¡Œ¿¡‘¿¡˜¿¡˚¿¡˝¿¡˛¿¬;¿¬?¿¬É¿¬—¿√¿√¿√T¿√§¿√Ô¿ƒ¿ƒ¿ƒ^¿ƒ≠¿ƒ¸¿≈¿≈
¿≈Q¿≈U¿≈g¿≈u¿≈ç¿≈°¿≈Ï¿≈˛¿∆¿∆.¿∆=¿∆X¿∆l¿∆p¿∆~¿∆Ç¿∆‘¿«¿«m¿«x¿«¢¿«—¿«◊¿»'¿»_¿»w¿»í¿»´¿»÷¿…¿…,¿…Y¿…Ü¿…á¿…™¿…◊¿…ÿ¿…˚¿ '¿ (¿ f¿ l¿ π¿À¿À ¿ÀY¿ÀZ¿À£¿À©¿Àı¿ÃE¿Ãï¿Ã◊¿Ã›¿Õ¿Õu¿Õv¿Õª¿Õ¡¿Œ¿Œ^¿Œ®¿Œ„¿ŒÈ¿œ%¿œ}¿œ~¿œÕ¿–¿–¿–c¿–Æ¿–≈¿–À¿–€¿–·¿—-¿—a¿—©¿—”¿“;¿“<¿“å¿“í¿“„¿”¿”¿”.¿”4¿”~¿”±¿”˝¿‘¿‘8¿‘W¿‘z¿‘â¿‘™¿‘À¿‘Ó¿’¿’¿’/¿’3¿’4¿’¿’ï¿’∞¿’»¿’ﬁ¿’Â¿’ˇ¿÷0¿÷[¿÷b¿÷f¿÷g¿÷ù¿÷£¿÷Ó¿◊?¿◊ä¿◊Œ¿ÿ¿ÿ3¿ÿ9¿ÿI¿ÿO¿ÿ£¿ÿ◊¿Ÿ@¿Ÿ[¿Ÿ\¿Ÿê¿Ÿñ¿Ÿﬂ¿⁄0¿⁄{¿⁄ø¿€¿€$¿€*¿€:¿€@¿€î¿€∆¿‹/¿‹H¿‹I¿‹ù¿‹£¿‹Û¿›/¿›5¿›|¿›®¿› ¿ﬁ¿ﬁi¿ﬁô¿ﬁ∫¿ﬁª¿ﬁÔ¿ﬁÛ¿ﬁÙ¿ﬂ&¿ﬂp¿ﬂã¿ﬂõ¿ﬂ°¿ﬂª¿ﬂ˘¿‡1¿‡8¿‡<¿‡=¿‡ã¿‡∏¿‡æ¿·¿·A¿·Ö¿·≥¿·‘¿‚:¿‚£¿‚™¿‚Æ¿‚Ø¿‚ª¿‚ﬁ¿„
¿„¿„$¿„F¿„p¿„ó¿„õ¿„ú¿„®¿„·¿„‚¿„Ó¿‰3¿‰^¿‰Ø¿‰¸¿Â ¿Â¿Â¿Â(¿Âó¿Âõ¿Âù¿Âû¿Â–¿Â—¿Ê¿ÊX¿ÊÄ¿Ê≥¿Ê¥¿ÊÈ¿Á	¿Á'¿ÁG¿Án¿Áó¿Á∑¿ÁŸ¿Ë¿Ë-¿ËL¿Ëm¿Ëï¿Ëø¿Ë€¿Ë˘¿È¿ÈE¿Èf¿Èâ¿Èß¿È«¿ÈÏ¿Í¿Í1¿ÍV¿Ís¿Íè¿Í¥¿Í€¿Î ¿ÎD¿Îf¿Îi¿Îj¿Îû¿ÎΩ¿Î€¿Î˚¿Ï"¿ÏK¿Ïk¿Ïç¿Ï∂¿Ï·¿Ì ¿Ì!¿ÌI¿Ìs¿Ìè¿Ì≠¿Ì“¿Ì˘¿Ó¿Ó=¿Ó[¿Ó{¿Ó†¿Ó«¿ÓÂ¿Ô
¿Ô'¿ÔC¿Ôh¿Ôè¿Ô¥¿Ô¯¿¿¿¿N    
AdaptationThemeExtension_kLightThemeHighlightColor_kLightThemeSplashColor_kDarkThemeHighlightColor_kDarkThemeSplashColorMaterialTapTargetSize	ThemeDataMaterialBasedCupertinoThemeData_IdentityThemeDataCacheKey
_FifoCacheVisualDensity_colorSchemeLightM3_colorSchemeDarkM3 æ›