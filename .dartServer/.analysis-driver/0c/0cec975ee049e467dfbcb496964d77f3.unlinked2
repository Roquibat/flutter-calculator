ÄîmagnifierConfiguration	focusNodechildcontextMenuBuilderselectionControlsonSelectionChangedgetSelectableButtonItemscreateState_actions_gestureRecognizers_selectionOverlay_startHandleLayerLink_endHandleLayerLink_toolbarLayerLink_selectionDelegate_selectable_hasSelectionOverlayGeometry_lastOrientation_lastSelectedContentlastSecondaryTapDownPositionselectionOverlay	initStatedidChangeDependenciesdidUpdateWidget_makeOverridable_handleFocusChanged_updateSelectionStatus _getEffectiveConsecutiveTapCount_initMouseGestureRecognizer_initTouchGestureRecognizer_startNewMouseSelectionGesture_handleMouseDragStart_handleMouseDragUpdate_handleMouseDragEnd_handleMouseTapUp_updateSelectedContentIfNeeded_handleTouchLongPressStart_handleTouchLongPressMoveUpdate_handleTouchLongPressEnd_positionIsOnActiveSelection_handleRightClickDown_selectionEndPosition_userDraggingSelectionEnd _scheduledSelectionEndEdgeUpdate_triggerSelectionEndEdgeUpdate_onAnyDragEnd_stopSelectionEndEdgeUpdate_selectionStartPosition_userDraggingSelectionStart"_scheduledSelectionStartEdgeUpdate _triggerSelectionStartEdgeUpdate_stopSelectionStartEdgeUpdate!_selectionStartHandleDragPosition_selectionEndHandleDragPosition$_handleSelectionStartHandleDragStart%_handleSelectionStartHandleDragUpdate"_handleSelectionEndHandleDragStart#_handleSelectionEndHandleDragUpdate_buildInfoForMagnifier_createSelectionOverlay_updateSelectionOverlay_showHandles_showToolbar_selectEndTo_selectStartTo_collapseSelectionAt_selectWordAt_finalizeSelection_clearSelection_copycontextMenuAnchors_adjustingSelectionEnd!_determineIsAdjustingSelectionEnd_granularlyExtendSelection_directionalHorizontalBaseline_directionallyExtendSelectioncontextMenuButtonItemsstartGlyphHeightendGlyphHeightselectionEndpoints
cutEnabledpasteEnabledhideToolbar	selectAllcopySelectiontextEditingValuebringIntoViewcutSelectionuserUpdateTextEditingValue	pasteTextaddremovedisposebuildinvokeActioninvokestategranularity_hasReceivedStartEvent_hasReceivedEndEvent"_lastStartEdgeUpdateGlobalPosition _lastEndEdgeUpdateGlobalPosition#_updateLastEdgeEventsFromGeometrieshandleSelectAllhandleSelectWordhandleClearSelectionhandleSelectionEdgeUpdatedispatchSelectionEventToChildensureChildUpdateddidChangeSelectablesselectables$_kSelectionHandleDrawableAreaPaddingcurrentSelectionEndIndexcurrentSelectionStartIndex_startHandleLayer_startHandleLayerOwner_endHandleLayer_endHandleLayerOwner_isHandlingSelectionEvent_scheduledSelectableUpdate_selectionInProgress
_additions_extendSelectionInProgresslayoutDidChange_scheduleSelectableUpdate_updateSelectables_flushAdditions_removeSelectablevalue_selectionGeometry_updateSelectionGeometry_getBoundingBoxcompareOrder_compareScreenOrder_compareVertically_compareHorizontally_handleSelectableGeometryChangegetSelectionGeometry-_adjustSelectionIndexBasedOnSelectionGeometrypushHandleLayers_updateHandleLayersAndOwnersgetSelectedContent_flushInactiveSelectionshandleGranularlyExtendSelection"handleDirectionallyExtendSelectiondispatchSelectionEvent_initSelection_adjustSelection_kLongPressSelectionDevices&_kSelectableVerticalComparingThresholdSelectableRegionSelectableRegionState_NonOverrideAction_SelectAllAction_CopySelectionAction _GranularlyExtendSelectionAction%_GranularlyExtendCaretSelectionAction(_DirectionallyExtendCaretSelectionAction"_SelectableRegionContainerDelegate)MultiSelectableSelectionContainerDelegate"SelectableRegionContextMenuBuilderÅzSetPointerDeviceKindtouchstylusinvertedStylusdoubleTextSelectionAreamaterial
SelectableSelectionContainerSelectionEventSelectionRegistrarScopedelegateSelectionRegistrarmaybeOfSelectionRegistrantdisabledWidgetTesterdragFrom	GlobalKeySelectionHandlerStatefulWidgetTextMagnifierConfiguration	FocusNodeWidgetemptyTextSelectionControlsTextSelectionControlsValueChangedSelectedContentContextMenuButtonItemcontextMenuButtonItemsEditableTextgetEditableButtonItemsAdaptiveTextSelectionToolbarbuttonItemsgetAdaptiveButtonsListSelectionGeometryVoidCallbackboolselectionGeometrystatusSelectionStatusuncollapsed
hasContent	onPressedonCopytypeContextMenuButtonTypecopyonSelectAll	selectAlloverrideStateTextSelectionDelegateMapTypeActionIntentSelectAllTextIntentCopySelectionTextIntent6ExtendSelectionToNextWordBoundaryOrCaretLocationIntentgranularityTextGranularityword'ExpandSelectionToDocumentBoundaryIntentdocument ExpandSelectionToLineBreakIntentline ExtendSelectionByCharacterIntent	character'ExtendSelectionToNextWordBoundaryIntent ExtendSelectionToLineBreakIntent-ExtendSelectionVerticallyToAdjacentLineIntent'ExtendSelectionToDocumentBoundaryIntentGestureRecognizerFactorySelectionOverlay	LayerLinkvaluestartSelectionPointendSelectionPointOrientationOffsetvisibleForTestingvoid	initStatewidget	focusNodeaddListenerTapGestureRecognizer$GestureRecognizerFactoryWithHandlers
debugOwnerinstanceonTapUpTapUpDetailsdefaultTargetPlatformTargetPlatformiOSglobalPositiondetailstoolbarIsVisiblelocationoffsetonSecondaryTapDowndidChangeDependenciesandroidfuchsialinuxmacOSwindows
MediaQueryorientationOfcontextdidUpdateWidgetremoveListenerhasFocusoverridabledefaultActionkIsWeb#PlatformSelectableRegionContextMenudetachattachTextSelection	collapsed
baseOffsetextentOffsetnoneTextEditingValuetext	selectiondisposeintminTapAndPanGestureRecognizersupportedDevicesmouse	onTapDownonDragStartonDragUpdate	onDragEndonCanceldragStartBehaviorDragStartBehaviordownLongPressGestureRecognizeronLongPressStartonLongPressMoveUpdateonLongPressEndTapDragDownDetailsconsecutiveTapCountrequestFocusTapDragStartDetailsTapDragUpdateDetails
continuoustextGranularityTapDragEndDetailsTapDragUpDetails	plainTextgetSelectedContentonSelectionChangedcallLongPressStartDetailsHapticFeedbackselectionClickLongPressMoveUpdateDetailsLongPressEndDetailsRectselectionRectsMatrix4getTransformToMatrixUtilstransformRectselectionRectcontainsTapDownDetails0lastSecondaryTapDownPositionWasOnActiveSelectionSelectionEdgeUpdateEventSelectionResultpendingdispatchSelectionEventforEndSchedulerBindingaddPostFrameCallbackDuration
debugLabelDragEndDetailsselectionControlsTextSelectionHandleControlshideMagnifiershowToolbarcontextMenuBuilderBuildContextforStartDragStartDetailslocalPositiontransformPointshowMagnifierDragUpdateDetailsdelta
lineHeightupdateMagnifierMagnifierInfoSelectionPointVector3getTranslationxyfromLTWHdxdyglobalGesturePosition	caretRectfieldBoundssizecurrentLineBoundariesdebugRequiredForstartHandleType
handleTypeTextSelectionHandleTypeleftlineHeightAtStartonStartHandleDragStartonStartHandleDragUpdateonStartHandleDragEndendHandleTyperightlineHeightAtEndonEndHandleDragStartonEndHandleDragUpdateonEndHandleDragEndselectionEndpointsselectionDelegateclipboardStatusstartHandleLayerLinkendHandleLayerLinktoolbarLayerLinkmagnifierConfigurationshowHandlesOverlayBrowserContextMenuenabledtoolbarLocationhideToolbarSelectWordSelectionEventClearSelectionEventFuture	ClipboardsetDataClipboardDataTextSelectionToolbarAnchorsprimaryAnchor	RenderBoxfindRenderObjectfromSelection	renderBoxstartGlyphHeightendGlyphHeighthasSelectionGranularlyExtendSelectionEventforwardisEnd!DirectionallyExtendSelectionEvent	directionSelectionExtendDirectionnextLinepreviousLinegetSelectableButtonItemsEditableTextStateSelectionChangedCausetoolbarTextSelectionPointTextDirectionltr
DeprecatedhideHandlesSelectAllSelectionEventcauseTextPositionpushHandleLayersdebugCheckHasOverlay	registrarchildCompositedTransformTargetlinkRawGestureDetectorgesturesbehaviorHitTestBehaviortranslucentexcludeFromSemanticsActionsactionsFocusincludeSemanticsContextActionObjectcallingActioninvokekeyboard_copyDirectionalTextEditingIntent_granularlyExtendSelectionDirectionalCaretMovementIntentcollapseSelection_directionallyExtendSelectionremovecurrentSelectionStartIndexselectablescurrentSelectionEndIndexhandleSelectAlladd
selectablehandleSelectWordhandleClearSelectionclearSelectionEventTypeendEdgeUpdatehandleSelectionEdgeUpdatestartEdgeUpdate
selectWordgranularlyExtendSelectiondirectionallyExtendSelectiondispatchSelectionEventToChildtoSetremoveWheredidChangeSelectablesSelectionContainerDelegateChangeNotifier kFlutterMemoryAllocationsEnabledmaybeDispatchObjectCreation	protectedschedulerPhaseSchedulerPhasepostFrameCallbacksscheduleMicrotask
isNotEmptytoListsortlengthmaxindexOfremoveAtmustCallSupernotifyListenersboundingBoxesfirstindexexpandToInclude
ComparatortopbottomabsprecisionErrorToleranceisEmptygetTransformFromisFinitehasSizecontainerSizewidthheightmap	intersectwhereaddAllinflateStringBufferwritetoStringtargetforEachrectnextpreviousendbackwardcopyWithEditableTextContextMenuBuilder	StatefulWidgetStateTextSelectionDelegateSelectionRegistrarContextAction_NonOverrideAction)MultiSelectableSelectionContainerDelegateSelectionContainerDelegateChangeNotifier≥ÔuµsIú=A1∫}Ÿº5ó    Ä¶  
dart:async  Äª  	dart:math  Ä–  package:flutter/foundation.dart  Ä˙  package:flutter/gestures.dart  Å"  package:flutter/rendering.dart  ÅK  package:flutter/scheduler.dart  Åt  package:flutter/services.dart  Åú  'package:vector_math/vector_math_64.dart  Åœ  actions.dart  ÅÊ  
basic.dart  Å˚  context_menu_button_item.dart  Ç#  
debug.dart  Ç8  focus_manager.dart  ÇU  focus_scope.dart  Çp  framework.dart  Çâ  gesture_detector.dart  Ç©  magnifier.dart  Ç¬  media_query.dart  Ç›  overlay.dart  ÇÙ  ,platform_selectable_region_context_menu.dart  É+  selection_container.dart  ÉN  text_editing_intents.dart  Ér  text_selection.dart  Éê  #text_selection_toolbar_anchors.dart    	dart:core¿ á‡ ¿á›âÿ <ÄÜÄ§Ä•Ä∫ÄŒÄœÄ˘Å!ÅJÅsÅõÅÕÅŒÅÂÅ˙Ç"Ç7ÇTÇoÇàÇ®Ç¡Ç‹ÇÛÉ*ÉMÉqÉèÉΩÉæÉ÷É˝ÑÑÑeÑÄÑúÑ¿Ñ√ÑƒÖÖ`Ö°Ö‹Ö›ÜÜÜhÜ∏ááTáõáÎàààdàéàíà⁄â&âsâ¡â≈âÒâıäFä|äÄä—ãã9ã=ã~ã»ååfå∑çç1ç5çÜç‘ééjéàéåé◊èèOè^èbèêèîè®è¨è∏è…èÁê!ê^êwêªê’ê˚ë;ë{ëäëóë¢ë´ë±ëπë…ëÕë—ëˆíí<í^íÅí•í íì ìLìwì£ì–îî;î?îCîeîiîπî˚ïïïaïÆïÂïÈñ8ñÉñŒñÌñÒóóQónóróÕó›ó·ó˜ó˚òJòóò’òŸòÌô9ôôÉô‚ôÚôˆöGöèö≤ö∂ö õõõÑõîõòõ‚ú5úÑú“ú÷ú„úÁù8ùâù∂ù∫ù∆û*û2û6ûDûÑû±üüüoüΩü÷†$†q†°†œ†’°#°E°`°o°å°©°Œ°Á¢.¢K¢Q¢R¢ú¢¢¢—¢◊£(£.£z£µ£∂£Â§§§:§@§q§á§à§«•••Q•`•f•∞•Ô¶ ¶!¶Q¶ç¶é¶⁄ßß	ßYßuß{ßãßëßŸ®®l®¶®˜©,©`©≥©¸™<™t™ú™…™–´"´^´_´∞´ˆ¨	¨-¨@¨_¨|¨®¨≥¨À¨Í≠≠=≠H≠O≠S≠T≠`≠¢≠§≠•≠…Æ@ÆäÆÕØØÈ∞†±E±Ù≤¨≥V≥˙¥∂¥ª¥ºµ"µIµÄµµµË∂N∂û∂π∂∫∑∑y∑z∑õ∑ƒ∑≈∏∏:∏;∏Å∏á∏ƒ∏Ÿπππ%π:πQπàπ´πŒπÏ∫X∫ê∫º∫ªuª≈ººdºàº™ºøº˝ΩΩΩ9Ω{ΩáΩíΩœΩÿΩﬂΩ„Ω‰Ωææ4æYæ|æõæ™æÕæÓøø2øBøHøIøîø€øˇ¿ @%¿ @3¿ @9¿ @d¿ @ä¿ @Œ¿ @‘¿ @ÿ¿ @Ÿ¿ @Â¿ A¿ A@¿ As¿ A≤¿ AÎ¿ B2¿ BQ¿ BY¿ B_¿ Bc¿ Bd¿ BÆ¿ C ¿ C¿ C¿ C$¿ CJ¿ C^¿ C¶¿ CÆ¿ C«¿ CÕ¿ Cﬂ¿ D%¿ D+¿ D/¿ D0¿ DR¿ Du¿ D∂¿ D’¿ D˝¿ E#¿ El¿ Eç¿ EÀ¿ E—¿ F¿ FD¿ Fe¿ Fr¿ Fñ¿ F∂¿ Fº¿ F¿¿ F¡¿ F–¿ F—¿ G!¿ Gt¿ Gƒ¿ H	¿ H¿ H`¿ Ht¿ H≤¿ H◊¿ H¸¿ I¿ IB¿ Ic¿ I∞¿ J¿ JV¿ J°¿ JÛ¿ K<¿ KŒ¿ KÌ¿ L¿ L1¿ LÖ¿ L⁄¿ M-¿ MR¿ MÉ¿ Mâ¿ Mç¿ Mé¿ Mµ¿ N-¿ N¨¿ Nﬁ¿ NÔ¿ O&¿ ON¿ O~¿ O∞¿ O‹¿ P¿ P;¿ PD¿ PK¿ PO¿ PP¿ Pw¿ PÔ¿ Q\¿ Qé¿ Qü¿ QŸ¿ R¿ RT¿ R]¿ Rd¿ Rh¿ Ri¿ R≠¿ R˙¿ S¿ S1¿ SH¿ Sq¿ Sò¿ Sø¿ S‚¿ T%¿ T8¿ T]¿ TÇ¿ T©¿ TÎ¿ Tı¿ U¿ U:¿ U@¿ Uf¿ Uj¿ Uk¿ Uß¿ UÙ¿ V¿ V:¿ V@¿ Vf¿ Vj¿ Vk¿ V©¿ Vˆ¿ W¿ WL¿ WZ¿ W…¿ Wœ¿ Wı¿ W˘¿ W˙¿ X2¿ XL¿ Xr¿ Xv¿ Xw¿ X¨¿ X˘¿ Y¿ Y0¿ YW¿ Y~¿ Y°¿ Y„¿ Z¿ Z-¿ ZT¿ Zö¿ Z≠¿ Z∑¿ ZΩ¿ Z„¿ ZÁ¿ ZË¿ [¿ [m¿ [≠¿ [Í¿ [¿ [Ù¿ [ı¿ \8¿ \]¿ \Ç¿ \µ¿ ] ¿ ]R¿ ]°¿ ]‹¿ ]Ú¿ ]¯¿ ^¿ ^"¿ ^#¿ ^p¿ ^…¿ ^Ô¿ ^Û¿ ^Ù¿ _3¿ _M¿ _s¿ _á¿ _¬¿ _ÿ¿ _ﬁ¿ _‚¿ _„¿ `+¿ `{¿ `æ¿ a¿ aB¿ aW¿ a_¿ ae¿ aw¿ a{¿ a|¿ a≥¿ b¿ bV¿ bë¿ b∂¿ b€¿ b˛¿ c!¿ cD¿ cî¿ c‘¿ d`¿ d°¿ dË¿ dÚ¿ e
¿ eH¿ eg¿ e•¿ eΩ¿ e˚¿ f¿ fÄ¿ fô¿ f´¿ fµ¿ fÛ¿ g¿ gI¿ gj¿ gä¿ g£¿ gµ¿ gø¿ h¿ hO¿ h€¿ i¿ ic¿ im¿ iÖ¿ i√¿ i…¿ iÔ¿ iÛ¿ iÙ¿ j¿ j¿ j<¿ jÉ¿ j¥¿ jµ¿ j˚¿ k¿ kR¿ k£¿ k’¿ l!¿ lm¿ l∏¿ m¿ mO¿ mô¿ mß¿ m≠¿ m⁄¿ ng¿ nñ¿ n‚¿ o¿ o%¿ o/¿ oa¿ o´¿ o„¿ oÒ¿ o˜¿ o˙¿ o˚¿ p)¿ pl¿ pî¿ p∫¿ p∆¿ pÔ¿ q¿ q-¿ qa¿ qú¿ q¶¿ qÆ¿ q≥¿ q÷¿ q˜¿ r¿ r¿ r¿ rF¿ rt¿ rñ¿ rö¿ rõ¿ ræ¿ s	¿ s<¿ s=¿ sÖ¿ sã¿ s‹¿ t-¿ t_¿ t≠¿ t˘¿ uD¿ uì¿ u€¿ v)¿ v7¿ v=¿ vj¿ v˚¿ w,¿ wx¿ w´¿ wΩ¿ w«¿ w˚¿ xG¿ xÅ¿ xè¿ xï¿ xô¿ xö¿ x√¿ xÛ¿ y¿ y¿ y¿ y@¿ yA¿ yr¿ y°¿ y¢¿ yÍ¿ z,¿ z-¿ zã¿ z“¿ {6¿ {7¿ {t¿ {í¿ {«¿ {œ¿ {ı¿ {˘¿ {˙¿ |D¿ |ü¿ |È¿ }2¿ }Ω¿ }Â¿ }Ê¿ ~%¿ ~C¿ ~x¿ ~Ä¿ ~¶¿ ~™¿ ~´¿ ~Ò¿ 1¿ ç¿ ‘¿ Ä6¿ Ä7¿ Ät¿ Äí¿ Ä≈¿ ÄÕ¿ ÄÛ¿ Ä˜¿ Ä¯¿ Å@¿ Åó¿ Å·¿ Ç*¿ ÇØ¿ Ç’¿ Ç÷¿ É¿ É3¿ Éf¿ Én¿ Éî¿ Éò¿ Éô¿ Éˇ¿ ÑY¿ Ñ¥¿ Ö¿ ÖJ¿ Ös¿ Ö∏¿ Ö√¿ ÖÂ¿ ÖÓ¿ ÖÔ¿ Ü¿ ÜA¿ Ü_¿ Ü°¿ ÜÌ¿ Üˆ¿ Ü˙¿ Ü˚¿ á¿ áH¿ ám¿ á{¿ áÅ¿ á—¿ à¿ àG¿ à_¿ à¿ à…¿ â¿ âL¿ âí¿ âΩ¿ ä¿ äA¿ äÅ¿ ä√¿ äÏ¿ ã¿ ãM¿ ãl¿ ãâ¿ ãº¿ ãÎ¿ å¿ åR¿ åY¿ å]¿ å^¿ åÅ¿ å¶¿ å¥¿ å∫¿ å‰¿ ç4¿ çÄ¿ çó¿ ç„¿ é$¿ ém¿ é¨¿ é›¿ é·¿ é‚¿ è¿ è¿ èV¿ èc¿ è{¿ è†¿ è»¿ è€¿ è·¿ è‚¿ ê¿ ê¿ ê%¿ ê&¿ êE¿ êk¿ ê|¿ êÄ¿ êÅ¿ ê©¿ êØ¿ ê˙¿ ëJ¿ ëó¿ ë®¿ ëÆ¿ ëˇ¿ í)¿ ío¿ íÉ¿ íâ¿ íä¿ í€¿ ì+¿ ì{¿ ì∆¿ î¿ î7¿ îK¿ îQ¿ îR¿ îw¿ îò¿ îû¿ îü¿ î“¿ ï¿ ï>¿ ïQ¿ ïW¿ ïX¿ ï~¿ ï¿ ï£¿ ïª¿ ïÓ¿ ñ(¿ ñ1¿ ñ8¿ ñI¿ ñM¿ ñN¿ ñë¿ ñó¿ ñÂ¿ ó7¿ ó¿ óÖ¿ ó…¿ ò¿ ò¿ òW¿ ò¶¿ òÓ¿ ô¿ ô¿ ôM¿ ôS¿ ôÄ¿ ôÜ¿ ô⁄¿ ö"¿ öX¿ ö^¿ ön¿ öµ¿ ö˙¿ õ:¿ õÄ¿ õ–¿ ú¿ ús¿ úä¿ ù¿ ù¿ ù ¿ ùK¿ ùq¿ ùπ¿ ùø¿ ù√¿ ùƒ¿ û	¿ û¿ û]¿ ûØ¿ û˜¿ û˝¿ üC¿ üÅ¿ üá¿ ü—¿ † ¿ †h¿ †é¿ †î¿ †«¿ †Õ¿ †˙¿ ° ¿ °T¿ °ú¿ °“¿ °ÿ¿ °Ë¿ ¢+¿ ¢p¿ ¢∞¿ ¢ˆ¿ £F¿ £~¿ £Î¿ §¿ §Ü¿ §î¿ §ö¿ §«¿ §Ô¿ •9¿ •?¿ •C¿ •D¿ •Ç¿ •à¿ •ò¿ •ﬂ¿ ¶"¿ ¶g¿ ¶ß¿ ¶Ì¿ ß%¿ ß]¿ ßÅ¿ ß£¿ ßß¿ ß®¿ ß›¿ ß„¿ ®0¿ ®|¿ ®»¿ ®Œ¿ © ¿ ©G¿ ©M¿ ©]¿ ©§¿ ©Á¿ ™,¿ ™l¿ ™º¿ ™Ù¿ ´%¿ ´R¿ ´l¿ ´«¿ ´À¿ ´Ã¿ ´˜¿ ´˝¿ ¨K¿ ¨é¿ ¨î¿ ¨‚¿ ≠2¿ ≠{¿ ≠å¿ ≠™¿ ≠Õ¿ ≠Ú¿ ≠ˆ¿ ≠˜¿ Æ¿ Æ7¿ ÆQ¿ Æ|¿ Æü¿ ÆÂ¿ Ø¿ Ø¿ Ø¿ Ø/¿ Øt¿ Øå¿ Øö¿ Ø†¿ Ø‚¿ ØÊ¿ ØÁ¿ ∞¿ ∞$¿ ∞4¿ ∞:¿ ∞â¿ ∞∏¿ ∞Ô¿ ±¿ ±I¿ ±¿ ±à¿ ±é¿ ±ÿ¿ ≤¿ ≤*¿ ≤T¿ ≤z¿ ≤®¿ ≤Ø¿ ≤≥¿ ≤¥¿ ≤‘¿ ≥¿ ≥7¿ ≥]¿ ≥c¿ ≥~¿ ≥∏¿ ≥◊¿ ¥#¿ ¥\¿ ¥u¿ ¥µ¿ ¥œ¿ ¥‹¿ µ¿ µ$¿ µn¿ µ©¿ µ≠¿ µÆ¿ µ˝¿ ∂(¿ ∂Z¿ ∂h¿ ∂n¿ ∂ó¿ ∂Ω¿ ∂◊¿ ∑¿ ∑4¿ ∑=¿ ∑D¿ ∑j¿ ∑n¿ ∑o¿ ∑ô¿ ∑ö¿ ∑œ¿ ∏¿ ∏¿ ∏¿ ∏k¿ ∏≠¿ ∏·¿ π¿ π_¿ ∫¿ ∫0¿ ∫Y¿ ∫Å¿ ∫È¿ ª¿ ª¿ ª$¿ ªJ¿ ªN¿ ªO¿ ªw¿ ªx¿ ªƒ¿ ªÌ¿ ªÛ¿ º¿ º	¿ º]¿ º™¿ º¸¿ ΩC¿ Ωí¿ Ω®¿ Ω˘¿ æ.¿ æb¿ æÆ¿ æ˛¿ ø9¿ øo¿ ø¢¿ øµ¿ ø∆¿ ø«¿ ø˛¿ ¿'¿ ¿N¿ ¿u¿ ¿î¿ ¿∑¿ ¿◊¿ ¿¸¿ ¡!¿ ¡H¿ ¡c¿ ¡m¿ ¡v¿ ¡é¿ ¡∑¿ ¡ﬁ¿ ¬¿ ¬(¿ ¬^¿ ¬É¿ ¬®¿ ¬œ¿ ¬Ë¿ √¿ √¿ √¿ √¿ √!¿ √"¿ √_¿ √¿ √ƒ¿ √»¿ √…¿ ƒ¿ ƒ"¿ ƒe¿ ƒi¿ ƒj¿ ƒπ¿ ƒÌ¿ ≈=¿ ≈â¿ ≈≥¿ ∆¿ ∆U¿ ∆å¿ ∆±¿ ∆Ú¿ «5¿ «>¿ «K¿ «p¿ «≥¿ «Ù¿ «˝¿ »¿ »¿ »¿ »¿ »C¿ »Ö¿ »±¿ »Á¿ »Ë¿ »˜¿ … ¿ …Y¿ …]¿ …i¿ …â¿ …ä¿ …ô¿ …¬¿ …˚¿ …ˇ¿  ¿  -¿  .¿  :¿  j¿  ê¿  ß¿  œ¿  ’¿  Ÿ¿  ⁄¿  Ê¿ À¿ À0¿ Àz¿ À¨¿ À¬¿ Àÿ¿ Àﬁ¿ Ã¿ Ã¿ Ã	¿ Ã¿ ÃA¿ Ãz¿ Ã~¿ Ãä¿ Ãæ¿ ÃÀ¿ Ã‚¿ ÃÊ¿ ÃÁ¿ Ãˆ¿ Õ¿ ÕX¿ Õ\¿ Õh¿ Õ±¿ Õ≤¿ Õ¡¿ ÕÍ¿ Œ#¿ Œ'¿ Œ3¿ Œó¿ Œò¿ Œß¿ Œ–¿ œ	¿ œ¿ œ¿ œL¿ œ_¿ œc¿ œd¿ œs¿ œú¿ œ’¿ œŸ¿ œÂ¿ –m¿ –n¿ –}¿ –¶¿ –ﬂ¿ –„¿ –Ô¿ —-¿ —@¿ —D¿ —E¿ —i¿ —j¿ —v¿ —ö¿ —ª¿ —Ÿ¿ “¿ “^¿ “b¿ “c¿ “o¿ “ñ¿ “Ω¿ “ˆ¿ ”%¿ ”=¿ ”A¿ ”B¿ ”N¿ ”a¿ ”ö¿ ”…¿ ”Î¿ ‘9¿ ‘s¿ ‘õ¿ ‘Ω¿ ‘€¿ ‘¿ ‘Ù¿ ‘ı¿ ’¿ ’(¿ ’S¿ ’{¿ ’í¿ ’∂¿ ’—¿ ’ÿ¿ ’Í¿ ÷¿ ÷5¿ ÷>¿ ÷D¿ ÷j¿ ÷â¿ ÷™¿ ÷—¿ ◊ ¿ ◊$¿ ◊<¿ ◊Y¿ ◊q¿ ◊ñ¿ ◊ø¿ ◊⁄¿ ◊Á¿ ◊Ú¿ ◊˚¿ ÿ¿ ÿ¿ ÿ¿ ÿ	¿ ÿW¿ ÿ[¿ ÿ©¿ ÿ˙¿ Ÿ¿ Ÿ]¿ Ÿò¿ Ÿô¿ Ÿ•¿ Ÿ€¿ Ÿ¸¿ ⁄(¿ ⁄.¿ ⁄X¿ ⁄\¿ ⁄^¿ ⁄_¿ ⁄®¿ ⁄»¿ ⁄…¿ ⁄Ó¿ ⁄Ô¿ ⁄˚¿ €F¿ €{¿ €¿ €Å¿ €Ç¿ €”¿ €˜¿ €¯¿ ‹¿ ‹¿ ‹*¿ ‹y¿ ‹å¿ ‹ê¿ ‹í¿ ‹ì¿ ›¿ ›O¿ ›P¿ ›u¿ ›ö¿ ›õ¿ ›ß¿ ›‡¿ ﬁ#¿ ﬁ'¿ ﬁ)¿ ﬁ*¿ ﬁ†¿ ﬁÚ¿ ﬁÛ¿ ﬂ¿ ﬂ=¿ ﬂ>¿ ﬂJ¿ ﬂÉ¿ ﬂß¿ ﬂ›¿ ﬂÎ¿ ﬂÒ¿ ‡4¿ ‡8¿ ‡:¿ ‡;¿ ‡¥¿ ‡Ï¿ ‡Ì¿ ·¿ ·¿ ·¿ ·X¿ ·|¿ ·≤¿ ·¿¿ ·∆¿ ·ˇ¿ ‚¿ ‚¿ ‚¿ ‚c¿ ‚§¿ ‚„¿ ‚‰¿ „¿ „>¿ „?¿ „K¿ „r¿ „°¿ „Œ¿ „Ï¿ „¿ „Ò¿ ‰ ¿ ‰ä¿ ‰“¿ Â'¿ Âo¿ Â‚¿ ÂË¿ ÊN¿ Êí¿ Ê·¿ Á$¿ Áë¿ Áó¿ Áõ¿ Áú¿ Á®¿ ÁÎ¿ Ë,¿ Ëc¿ Ëë¿ ËΩ¿ Ë√¿ È¿ È8¿ ÈK¿ ÈO¿ ÈP¿ ÈÖ¿ È∂¿ È¬¿ Í¿ ÍI¿ Íu¿ Í¿¿ Í∆¿ Í¿ Î7¿ Î=¿ Îh¿ Î{¿ Î¿ ÎÄ¿ Îå¿ Î–¿ Ï¿ Ï:¿ Ï\¿ Ïã¿ Ï∏¿ ÏÀ¿ Ïœ¿ Ï–¿ Ï‹¿ Ì*¿ Ìd¿ Ì£¿ Ì∞¿ ÌÒ¿ Ì˜¿ Ó*¿ Ó.¿ Ó/¿ Ó;¿ ÓN¿ Ór¿ Óî¿ Ó©¿ Ó≠¿ ÓÆ¿ Ó∫¿ Ô¿ Ô3¿ Ôb¿ Ôí¿ Ô∫¿ ÔÁ¿ ¿ =¿ b¿ ï¿ ∆¿ Ô¿ Ò¿ Ò(¿ Òa¿ Òù¿ ÒÕ¿ Ò˚¿ Ú#¿ Ú)¿ Úl¿ Úp¿ Úq¿ Ú}¿ Ú∞¿ Û¿ Ûe¿ Û†¿ Û©¿ Û’¿ Ù
¿ Ù¿ ÙM¿ ÙS¿ Ù≥¿ ı¿ ıM¿ ıV¿ ıÑ¿ ıπ¿ ı¡¿ ı¸¿ ˆ¿ ˆ¿ ˆ¿ ˆ¿ ˆ3¿ ˆg¿ ˆà¿ ˆ±¿ ˆÓ¿ ˆ˘¿ ˜¿ ˜¿ ˜>¿ ˜_¿ ˜ä¿ ˜…¿ ˜‘¿ ˜›¿ ˜„¿ ¯"¿ ¯à¿ ¯¿ ˘¿ ˘¿ ˘¿ ˘¿ ˘_¿ ˘c¿ ˘±¿ ˘˛¿ ˙*¿ ˙.¿ ˙s¿ ˙±¿ ˚#¿ ˚m¿ ˚ù¿ ˚…¿ ¸¿ ¸¿ ¸¿ ¸¿ ¸J¿ ¸{¿ ¸|¿ ¸…¿ ¸’¿ ¸€¿ ˝)¿ ˝y¿ ˝î¿ ˝ö¿ ˝‡¿ ˛¿ ˛¿ ˛d¿ ˛¶¿ ˛ß¿ ˛Í¿ ˛˜¿ ˇ¿ ˇ¿ ˇb¿ ˇo¿ ˇñ¿ ˇó¿ ˇ∑¿ ˇ›¿ ˇ˚¿ ¿  ¿ J¿ u¿ ö¿ …¿  ¿ ı¿ ˆ¿¿&¿U¿u¿ñ¿ö¿õ¿ß¿Œ¿˜¿?¿k¿t¿¡¿œ¿’¿¯¿¿¿¿e¿Ä¿†¿§¿•¿ ¿Ò¿¿N¿y¿ã¿ï¿¡¿ﬂ¿Á¿Ë¿C¿î¿‡¿,¿f¿ì¿¢¿⁄¿ˆ¿3¿>¿F¿L¿P¿Q¿o¿ì¿¥¿Õ¿”¿Ô¿Û¿Ù¿¿h¿¶¿»¿‚¿˝¿	7¿	m¿	å¿	Ò¿
(¿
a¿
 ¿¿9¿C¿|¿Æ¿∏¿ı¿¿#¿+¿,¿}¿õ¿Ë¿?¿ñ¿≈¿Õ¿¿=¿V¿\¿î¿À¿¿[¿™¿¯¿G¿í¿ƒ¿˙¿¿¿ ¿R¿¨¿„¿¿1¿V¿\¿ã¿≤¿∏¿¯¿¸¿˝¿@¿M¿^¿~¿û¿¢¿£¿Ø¿‰¿&¿=¿_¿d¿e¿≤¿÷¿¿?¿d¿}¿É¿ß¿´¿¨¿‹¿¿]¿•¿´¿æ¿¬¿√¿¿/¿5¿U¿b¿§¿•¿›¿¿-¿G¿N¿Ä¿û¿∏¿ø¿¯¿¿$¿*¿Y¿]¿^¿©¿∫¿¿¿
¿L¿~¿ø¿E¿À¿€¿·¿+¿P¿V¿¿É¿Ñ¿‘¿¿"¿a¿ï¿™¿¿!¿'¿<¿¢¿≤¿∏¿ı¿¿"¿I¿M¿N¿y¿ ¿ ¿ b¿ á¿ ï¿ õ¿ ª¿ ø¿ ¿¿!¿!¿!<¿!f¿!í¿!±¿!◊¿!˜¿"¿"I¿"R¿"X¿"Y¿"Ä¿"“¿"ˆ¿#¿#!¿#q¿#ì¿#∑¿#¿¿#∆¿#«¿#ˇ¿$T¿$Æ¿$Â¿%M¿%Ç¿%Ω¿%√¿%ƒ¿%‰¿&¿&o¿&Ë¿' ¿'<¿'a¿'Å¿'∆¿(¿(¿(¿($¿(%¿([¿(¨¿(ﬂ¿)C¿)v¿)≠¿)≥¿)—¿*¿*T¿*≈¿*˝¿+¿+:¿+X¿+ô¿+⁄¿+Â¿+Ì¿+Û¿+Ù¿,=¿,Ä¿,∞¿,ﬁ¿-'¿-Ü¿-Â¿.W¿.ü¿.Û¿/¿/K¿/U¿/o¿/ï¿/÷¿/È¿0(¿0.¿0/¿0M¿0t¿0ó¿0Ω¿0Ë¿1¿1.¿1a¿1y¿1Ä¿1Ñ¿1Ö¿1–¿2¿2k¿2∏¿3¿3$¿3)¿3y¿3“¿4¿41¿4Ö¿4≠¿4≥¿4Ã¿4–¿4—¿4›¿5%¿5q¿5¿5Ö¿5™¿5À¿5Ô¿5Û¿5Ù¿6E¿6K¿6ú¿6ﬂ¿7.¿7H¿7p¿7©¿7ﬁ¿8$¿8T¿8ó¿8÷¿9x¿:¿:\¿:ü¿:•¿:Û¿;¿;<¿;z¿;°¿;©¿;”¿<¿<4¿<<¿<J¿<P¿<Q¿<û¿<⁄¿<‡¿=)¿=c¿=i¿=j¿=∞¿=±¿=Û¿>'¿>\¿>∂¿>ƒ¿> ¿>À¿?¿?W¿?ù¿?°¿?¢¿?Ÿ¿?Â¿@¿@Q¿@à¿@Õ¿@Á¿A¿A¿A¿A1¿AD¿AJ¿Az¿A¥¿A›¿A„¿Aˇ¿B#¿B*¿B.¿B/¿Bp¿B´¿B∞¿C¿C5¿C:¿C~¿C¢¿C¿C˛¿D¿DR¿D»¿D⁄¿E"¿Eè¿Eù¿E£¿E¯¿FK¿Fç¿F¡¿F”¿F€¿G1¿G7¿G;¿G<¿Gk¿Gx¿Gª¿GÚ¿H*¿H0¿HT¿Hã¿H¨¿H∞¿H±¿HÊ¿I¿I$¿Ii¿Iì¿I’¿J¿J>¿JÇ¿JÓ¿K)¿KY¿Kl¿Kx¿KÇ¿Kä¿K≥¿L ¿LX¿L∂¿L›¿LÁ¿M"¿M6¿M@¿Mç¿M∏¿M¬¿M˛¿NN¿Nï¿N´¿NÛ¿Od¿O≠¿O∑¿O€¿OÍ¿P%¿Pr¿Pò¿P¢¿P™¿P∞¿PŸ¿P˘¿P˝¿P˛¿QD¿QQ¿Qï¿QÃ¿R¿R
¿R-¿RR¿Rs¿Rw¿Rx¿R∂¿R√¿S¿Sq¿Sù¿S∏¿S˚¿T
¿T^¿Tf¿Tl¿T«¿U$¿U=¿Uo¿U∆¿U‡¿V1¿Ve¿Vm¿Vz¿V®¿VÓ¿W¿WY¿Wâ¿Wë¿Wó¿WÆ¿W‹¿WÈ¿X¿X¿X2¿X6¿X7¿Xu¿XÇ¿X‚¿Y6¿Yb¿YÉ¿Y∑¿YÁ¿Z=¿Zm¿Zú¿Zﬂ¿ZÁ¿ZÌ¿[H¿[•¿[ƒ¿[ˆ¿\K¿\}¿\û¿\º¿\¿]¿]d¿]s¿]¶¿]≤¿]º¿]Í¿^;¿^i¿^ü¿^Ω¿^Ò¿_¿_d¿_s¿_¶¿_≤¿_º¿_È¿`¿`F¿`L¿`c¿`ë¿`û¿`Œ¿`‘¿`Á¿`Î¿`Ï¿a¿a¿aj¿a§¿b¿b#¿bû¿b¢¿b£¿bØ¿b¿c:¿cx¿c≥¿cŸ¿cﬂ¿d¿d;¿d\¿dv¿d•¿d“¿d˛¿eM¿er¿eû¿e„¿f¿f8¿f|¿f¶¿f“¿g¿gQ¿g|¿g◊¿h¿h>¿hü¿h•¿hÃ¿hÏ¿hˇ¿i¿i¿i¿i#¿iZ¿iú¿i¢¿i ¿iÚ¿j¿j¿j¿jX¿j^¿j¨¿jÌ¿jÛ¿kC¿kW¿kd¿kñ¿kó¿k‘¿k⁄¿l)¿la¿ln¿lÕ¿m¿m¿m¿mC¿mI¿mö¿mÁ¿n9¿nÇ¿n∫¿n¿¿o¿o`¿om¿o«¿p.¿pE¿pi¿pÜ¿pﬁ¿q¿qh¿qÖ¿q®¿qÀ¿qÁ¿r	¿r%¿rM¿rq¿rò¿rº¿rÿ¿rÚ¿s!¿s-¿sW¿s}¿sô¿s≈¿sÈ¿sÒ¿s˜¿s¯¿t¿t5¿tX¿t^¿to¿tö¿tß¿t‘¿t⁄¿t˙¿uF¿uñ¿u‰¿v¿v¿v¿vb¿v®¿vÆ¿vı¿wF¿wÜ¿w‚¿wÚ¿x¿xe¿xz¿xÇ¿x‰¿x˜¿y¿y#¿yp¿y¿¿yˇ¿zK¿zg¿z¥¿z„¿zÍ¿{>¿{d¿{¯¿|ç¿|Ó¿}$¿}[¿}î¿}µ¿}Ó¿~(¿~`¿~Ç¿~â¿~ú¿~Œ¿¿B¿î¿∫¿Ä¿ÄN¿ÄU¿Äû¿Ä¬¿Ä…¿ÄÌ¿Å"¿Åb¿Åü¿ÅÛ¿ÇP¿Çy¿Çõ¿Ç¡¿Ç‰¿É¿É8¿ÉZ¿Éu¿É§¿Éﬂ¿Ñ¿Ñ%¿ÑA¿Ñ\¿Ñh¿Ñè¿Ñ±¿ÑÃ¿Ñ˚¿Ö!¿ÖT¿Ög¿ÖÑ¿Öü¿Ö´¿Ö≥¿Öπ¿Ö ¿Öı¿Ü¿Ü/¿Ü5¿ÜU¿Ün¿Ür¿Üt¿Üu¿Ü¡¿Üﬁ¿Ü‚¿Ü¿ÜÙ¿á>¿áU¿áì¿á´¿á⁄¿á›    Ä•  Ä∫  Äœ  Ä˘  Å!  ÅJ  Ås  Åõ  ÅŒ  ÅÂ  Å˙  Ç"  Ç7  ÇT  Ço  Çà  Ç®  Ç¡  Ç‹  ÇÛ  É*  ÉM  Éq  Éè    
Ö›ß∆†wöì/// A widget that introduces an area for user selections.
///
/// Flutter widgets are not selectable by default. Wrapping a widget subtree
/// with a [SelectableRegion] widget enables selection within that subtree (for
/// example, [Text] widgets automatically look for selectable regions to enable
/// selection). The wrapped subtree can be selected by users using mouse or
/// touch gestures, e.g. users can select widgets by holding the mouse
/// left-click and dragging across widgets, or they can use long press gestures
/// to select words on touch devices.
///
/// A [SelectableRegion] widget requires configuration; in particular specific
/// [selectionControls] must be provided.
///
/// The [SelectionArea] widget from the [material] library configures a
/// [SelectableRegion] in a platform-specific manner (e.g. using a Material
/// toolbar on Android, a Cupertino toolbar on iOS), and it may therefore be
/// simpler to use that widget rather than using [SelectableRegion] directly.
///
/// ## An overview of the selection system.
///
/// Every [Selectable] under the [SelectableRegion] can be selected. They form a
/// selection tree structure to handle the selection.
///
/// The [SelectableRegion] is a wrapper over [SelectionContainer]. It listens to
/// user gestures and sends corresponding [SelectionEvent]s to the
/// [SelectionContainer] it creates.
///
/// A [SelectionContainer] is a single [Selectable] that handles
/// [SelectionEvent]s on behalf of child [Selectable]s in the subtree. It
/// creates a [SelectionRegistrarScope] with its [SelectionContainer.delegate]
/// to collect child [Selectable]s and sends the [SelectionEvent]s it receives
/// from the parent [SelectionRegistrar] to the appropriate child [Selectable]s.
/// It creates an abstraction for the parent [SelectionRegistrar] as if it is
/// interacting with a single [Selectable].
///
/// The [SelectionContainer] created by [SelectableRegion] is the root node of a
/// selection tree. Each non-leaf node in the tree is a [SelectionContainer],
/// and the leaf node is a leaf widget whose render object implements
/// [Selectable]. They are connected through [SelectionRegistrarScope]s created
/// by [SelectionContainer]s.
///
/// Both [SelectionContainer]s and the leaf [Selectable]s need to register
/// themselves to the [SelectionRegistrar] from the
/// [SelectionContainer.maybeOf] if they want to participate in the
/// selection.
///
/// An example selection tree will look like:
///
/// {@tool snippet}
///
/// ```dart
/// MaterialApp(
///   home: SelectableRegion(
///     selectionControls: materialTextSelectionControls,
///     focusNode: _focusNode, // initialized to FocusNode()
///     child: Scaffold(
///       appBar: AppBar(title: const Text('Flutter Code Sample')),
///       body: ListView(
///         children: const <Widget>[
///           Text('Item 0', style: TextStyle(fontSize: 50.0)),
///           Text('Item 1', style: TextStyle(fontSize: 50.0)),
///         ],
///       ),
///     ),
///   ),
/// )
/// ```
/// {@end-tool}
///
///
///               SelectionContainer
///               (SelectableRegion)
///                  /         \
///                 /           \
///                /             \
///           Selectable          \
///      ("Flutter Code Sample")   \
///                                 \
///                          SelectionContainer
///                              (ListView)
///                              /       \
///                             /         \
///                            /           \
///                     Selectable        Selectable
///                     ("Item 0")         ("Item 1")
///
///
/// ## Making a widget selectable
///
/// Some leaf widgets, such as [Text], have all of the selection logic wired up
/// automatically and can be selected as long as they are under a
/// [SelectableRegion].
///
/// To make a custom selectable widget, its render object needs to mix in
/// [Selectable] and implement the required APIs to handle [SelectionEvent]s
/// as well as paint appropriate selection highlights.
///
/// The render object also needs to register itself to a [SelectionRegistrar].
/// For the most cases, one can use [SelectionRegistrant] to auto-register
/// itself with the register returned from [SelectionContainer.maybeOf] as
/// seen in the example below.
///
/// {@tool dartpad}
/// This sample demonstrates how to create an adapter widget that makes any
/// child widget selectable.
///
/// ** See code in examples/api/lib/material/selectable_region/selectable_region.0.dart **
/// {@end-tool}
///
/// ## Complex layout
///
/// By default, the screen order is used as the selection order. If a group of
/// [Selectable]s needs to select differently, consider wrapping them with a
/// [SelectionContainer] to customize its selection behavior.
///
/// {@tool dartpad}
/// This sample demonstrates how to create a [SelectionContainer] that only
/// allows selecting everything or nothing with no partial selection.
///
/// ** See code in examples/api/lib/material/selection_container/selection_container.0.dart **
/// {@end-tool}
///
/// In the case where a group of widgets should be excluded from selection under
/// a [SelectableRegion], consider wrapping that group of widgets using
/// [SelectionContainer.disabled].
///
/// {@tool dartpad}
/// This sample demonstrates how to disable selection for a Text in a Column.
///
/// ** See code in examples/api/lib/material/selection_container/selection_container_disabled.0.dart **
/// {@end-tool}
///
/// To create a separate selection system from its parent selection area,
/// wrap part of the subtree with another [SelectableRegion]. The selection of the
/// child selection area can not extend past its subtree, and the selection of
/// the parent selection area can not extend inside the child selection area.
///
/// ## Tests
///
/// In a test, a region can be selected either by faking drag events (e.g. using
/// [WidgetTester.dragFrom]) or by sending intents to a widget inside the region
/// that has been given a [GlobalKey], e.g.:
///
/// ```dart
/// Actions.invoke(key.currentContext!, const SelectAllTextIntent(SelectionChangedCause.keyboard));
/// ```
///
/// See also:
///  * [SelectionArea], which creates a [SelectableRegion] with
///    platform-adaptive selection controls.
///  * [SelectionHandler], which contains APIs to handle selection events from the
///    [SelectableRegion].
///  * [Selectable], which provides API to participate in the selection system.
///  * [SelectionRegistrar], which [Selectable] needs to subscribe to receive
///    selection events.
///  * [SelectionContainer], which collects selectable widgets in the subtree
///    and provides api to dispatch selection event to the collected widget. †£Å≠ °M°]Äõ/// Create a new [SelectableRegion] widget.
///
/// The [selectionControls] are used for building the selection handles and
/// toolbar for mobile devices.°d	°k  °s°y  °ê°ü  °≠°º  °“°·  °ÎA°Ò  ¢2¢8  ¢	¢#¢$¢TÅ_£ùÅ/// {@macro flutter.widgets.magnifier.TextMagnifierConfiguration.intro}
///
/// {@macro flutter.widgets.magnifier.intro}
///
/// By default, [SelectableRegion]'s [TextMagnifierConfiguration] is disabled.
///
/// {@macro flutter.widgets.magnifier.TextMagnifierConfiguration.details} £∏H£˜,/// {@macro flutter.widgets.Focus.focusNode} §ÄÄ§Äg/// The child widget this selection area applies to.
///
/// {@macro flutter.widgets.ProxyWidget.child} §ä{§Û</// {@macro flutter.widgets.EditableText.contextMenuBuilder} •
Å¶Ä‹/// The delegate to build the selection handles and toolbar for mobile
/// devices.
///
/// The [emptyTextSelectionControls] global variable provides a default
/// [TextSelectionControls] implementation with no controls. ¶#h¶y-/// Called when the selected content changes.  ¶êÜ¬™!ÉK/// Returns the [ContextMenuButtonItem]s representing the buttons in this
/// platform's default selection menu.
///
/// For example, [SelectableRegion] uses this to generate the default buttons
/// for its context menu.
///
/// See also:
///
/// * [SelectableRegionState.contextMenuButtonItems], which gives the
///   [ContextMenuButtonItem]s for a specific SelectableRegion.
/// * [EditableText.getEditableButtonItems], which performs a similar role but
///   for content that is both selectable and editable.
/// * [AdaptiveTextSelectionToolbar], which builds the toolbar itself, and can
///   take a list of [ContextMenuButtonItem]s with
///   [AdaptiveTextSelectionToolbar.buttonItems].
/// * [AdaptiveTextSelectionToolbar.getAdaptiveButtons], which builds the button
///   Widgets for the current platform given [ContextMenuButtonItem]s. ™@2™b  ™x"™ï  ™†'™Ω   ≠VK≠x   ≠V≠W ≠•¿ ™b≠œ#/// State for a [SelectableRegion].  ÆBÜwÆg ÄûÆà¥∏ÆrÆáÆsÆyÆÆÜÆÄÆ°ÆéÆ£Æ≥Æ Æ¥ÆƒÆ…Æ≈ÆËÆ—ÆÍÆ˙ØÆ˚ØØØØRØØTØdØÊØeØÖØºØÜØΩØÂØæØœØƒØ—Ø‡Ø·∞ØÌ∞∞&∞ù∞'∞G∞o∞H∞p∞ú∞q∞Ç∞w∞Ñ∞ì∞î∞ƒ∞§∞∆∞÷±B∞◊∞˜±∞¯±±A±±+± ±-±<±=±i±I±k±{±Ò±|±°±¬±¢±√±±ƒ±’± ±◊±Ê±Á≤±¯≤!≤1≤©≤2≤W≤≤X≤Ä≤®≤Å≤í≤á≤î≤£≤§≤–≤∞≤“≤‚≥S≤„≥≥)≥	≥*≥R≥+≥<≥1≥>≥M≥N≥á≥Z≥â≥ô≥˜≥ö≥¬≥≥√≥Ò≥ˆ≥Ú¥%≥˛¥'¥7¥≥¥8¥]¥Ö¥^¥Ü¥≤¥á¥ò¥ç¥ö¥©¥™¥æb¥Ë µµ¥˛µ¥ˇµµ$#µ6  µK3µ[ µsµ|µ}µÇ1µí µ®µ±µ≤µ∑/µ« µ€µ‰µÂµÍb∂ ∂(∂J∂K∂†∂¨  ∑|∑â  ∑ù%∑Æ  ∑«q∏J/// {@macro flutter.rendering.RenderEditable.lastSecondaryTapDownPosition} ¿ j¿ j%  ¿ jÖ-¿ jä ¿ j≠¿ rù¿ r•  ¿ s/¿ s ¿ s5¿ yC-¿ yO  ¿ yt+¿ yÄ  ¿ ≤∂¿ ≤º  ¿ ∑q&¿ ∑y  ¿ ÃÈÄ∆¿ Õ{ ¿ ÃÈ¿ ÃÍ¿ ÃÙ¿ ÕZ¿ Ã˙¿ Õ#¿ Õ^¿ Õ_¿ Õé¿ Õî¿ Õ§¿ ÕÆ¿ Õ©¿ Õ•¿ Õ´∂ºÄº∂≈    ∏=Ä⁄∏ÒÄÇ/// The [SelectionOverlay] that is currently visible on the screen.
///
/// Can be null if there is no visible [SelectionOverlay].  ∏∆∏«¿ j>D¿ jG    ¿ r¿H¿ r…    ¿ ØÈÇ…¿ ∞⁄Äƒ/// {@macro flutter.widgets.EditableText.getAnchors}
///
/// See also:
///
///  * [contextMenuButtonItems], which provides the [ContextMenuButtonItem]s
///    for the default context menu buttons.   ¿ ªzá¶¿ ø Ée/// Returns the [ContextMenuButtonItem]s representing the buttons in this
/// platform's default selection menu.
///
/// See also:
///
/// * [SelectableRegion.getSelectableButtonItems], which performs a similar role,
///   but for any selectable text, not just specifically SelectableRegion.
/// * [EditableTextState.contextMenuButtonItems], which performs a similar role
///   but for content that is not just selectable but also editable.
/// * [contextMenuAnchors], which provides the anchor points for the default
///   context menu.
/// * [AdaptiveTextSelectionToolbar], which builds the toolbar itself, and can
///   take a list of [ContextMenuButtonItem]s with
///   [AdaptiveTextSelectionToolbar.buttonItems].
/// * [AdaptiveTextSelectionToolbar.getAdaptiveButtons], which builds the
///   button Widgets for the current platform given [ContextMenuButtonItem]s.   ¿ √$Ä£¿ √l:/// The line height at the start of the current selection.   ¿ √ÀÄù¿ ƒ8/// The line height at the end of the current selection.   ¿ ƒlÉ≠¿ ƒÿL/// Returns the local coordinates of the endpoints of the current selection.   ¿ »ÍÄû¿ …t   ¿ »Í¿ »Î¿ »ı¿ …[¿ »˚¿ …$¿ …_¿ …`¿ …åÄ†¿     ¿ …å¿ …ç¿ …ó¿ …˝¿ …ù¿ …∆¿  ¿  7πÑ«π,   ππΩÊÇÒΩ˜   ΩÊΩÁ¿ @€Åá¿ @Ï  ¿ @¸¿ A  ¿ @€¿ @‹¿ BfÄù¿ Bp ¿ BÅ¿ BÅ¿ Bì¿ Bû   ¿ CÅ'¿ C    ¿ D2Çç¿ D7    ¿ HvÖ¿ HÅ  ¿ H¢¿ Hß   ¿ MêÇæ¿ Mï    ¿ PRÇ¿ PW    ¿ RkÇ˛¿ Rp  ¿ Rè¿ R£   ¿ UmÄ¸¿ Ur  ¿ Uà¿ Uù   ¿ VmÅã¿ Vr  ¿ Vâ¿ Vü   ¿ W¸y¿ X  ¿ X¿ X(   ¿ XyÇm¿ X~  ¿ Xê¿ X¢   ¿ ZÍÅ	¿ ZÔ    ¿ [˜Ç*¿ [¸  ¿ \¿ \.   ¿ ^%ÄÕ¿ ^*  ¿ ^J"¿ ^f   ¿ ^ˆÄÎ¿ ^˚  ¿ _¿ _)   ¿ _ÂÅï¿ _Í  ¿ `¿ `   ¿ a~àt¿ aÉ  ¿ aô¿ a©   ¿ j∑ÖB¿ k‹Å/// Sends end [SelectionEdgeUpdateEvent] to the selectable subtree.
///
/// If the selectable subtree returns a [SelectionResult.pending], this method
/// continues to send [SelectionEdgeUpdateEvent]s every frame until the result
/// is not pending or users end their gestures. ¿ k¸ ¿ l   ¿ o¸Ç!¿ p  ¿ p¿ p   ¿ r!x¿ r&    ¿ s?ÖY¿ tfÅ/// Sends start [SelectionEdgeUpdateEvent] to the selectable subtree.
///
/// If the selectable subtree returns a [SelectionResult.pending], this method
/// continues to send [SelectionEdgeUpdateEvent]s every frame until the result
/// is not pending or users end their gestures. ¿ tà ¿ tö   ¿ xú|¿ x°    ¿ y§ÇT¿ y©  ¿ yŒ¿ y‡   ¿ {¸Ç≠¿ |  ¿ |'¿ |:   ¿ ~≠ÇI¿ ~≤  ¿ ~’¿ ~Á   ¿ Ä˙Çù¿ Äˇ  ¿ Å#¿ Å6   ¿ ÉõÉ^¿ É©  ¿ É¿¿ É»  ¿ Éﬁ¿ ÉÓ   ¿ Ü˝Ö_¿ á    ¿ å`ÇÄ¿ åe    ¿ é‰Åõ¿ èjx/// Shows the selection handles.
///
/// Returns true if the handles are shown, false if the handles can't be
/// shown.   ¿ êÉÖ…¿ íÅm/// Shows the text selection toolbar.
///
/// If the parameter `location` is set, the toolbar will be shown at the
/// location. Otherwise, the toolbar location will be calculated based on the
/// handles' locations. The `location` is in the coordinates system of the
/// [Overlay].
///
/// Returns true if the toolbar is shown, false if the toolbar can't be shown. ¿ í¿ í   ¿ ñPár¿ úÖ/// Sets or updates selection end edge to the `offset` location.
///
/// A selection always contains a select start edge and selection end edge.
/// They can be created by calling both [_selectStartTo] and [_selectEndTo], or
/// use other selection APIs, such as [_selectWordAt] or [selectAll].
///
/// This method sets or updates the selection end edge by sending
/// [SelectionEdgeUpdateEvent]s to the child [Selectable]s.
///
/// If `continuous` is set to true and the update causes scrolling, the
/// method will continue sending the same [SelectionEdgeUpdateEvent]s to the
/// child [Selectable]s every frame until the scrolling finishes or a
/// [_finalizeSelection] is called.
///
/// The `continuous` argument defaults to false.
///
/// The `offset` is in global coordinates.
///
/// Provide the `textGranularity` if the selection should not move by the default
/// [TextGranularity.character]. Only [TextGranularity.character] and
/// [TextGranularity.word] are currently supported.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clears the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [_collapseSelectionAt], which collapses the selection at the location.
///  * [selectAll], which selects the entire content. ¿ ú¿ ú.  ¿ ú5¿ ú;  ¿ úN ¿ ú`  ¿ úG¿ ù∆á|¿ £ÖÖ/// Sets or updates selection start edge to the `offset` location.
///
/// A selection always contains a select start edge and selection end edge.
/// They can be created by calling both [_selectStartTo] and [_selectEndTo], or
/// use other selection APIs, such as [_selectWordAt] or [selectAll].
///
/// This method sets or updates the selection start edge by sending
/// [SelectionEdgeUpdateEvent]s to the child [Selectable]s.
///
/// If `continuous` is set to true and the update causes scrolling, the
/// method will continue sending the same [SelectionEdgeUpdateEvent]s to the
/// child [Selectable]s every frame until the scrolling finishes or a
/// [_finalizeSelection] is called.
///
/// The `continuous` argument defaults to false.
///
/// The `offset` is in global coordinates.
///
/// Provide the `textGranularity` if the selection should not move by the default
/// [TextGranularity.character]. Only [TextGranularity.character] and
/// [TextGranularity.word] are currently supported.
///
/// See also:
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clears the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [_collapseSelectionAt], which collapses the selection at the location.
///  * [selectAll], which selects the entire content. ¿ £ï¿ £¶  ¿ £≠¿ £≥  ¿ £∆ ¿ £ÿ  ¿ £ø¿ •FÇ`¿ ß,ÅŒ/// Collapses the selection at the given `offset` location.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clears the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [selectAll], which selects the entire content. ¿ ßB¿ ßS   ¿ ß™Ñ ¿ ™˚É+/// Selects a whole word at the `offset` location.
///
/// If the whole word is already in the current selection, selection won't
/// change. One call [_clearSelection] first if the selection needs to be
/// updated even if the word is already covered by the current selection.
///
/// One can also use [_selectEndTo] or [_selectStartTo] to adjust the selection
/// edges after calling this method.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clears the ongoing selection.
///  * [_collapseSelectionAt], which collapses the selection at the location.
///  * [selectAll], which selects the entire content. ¿ ´
¿ ´   ¿ ´ŒÇ'¿ ≠ìÅ≠/// Stops any ongoing selection updates.
///
/// This method is different from [_clearSelection] that it does not remove
/// the current selection. It only stops the continuous updates.
///
/// A continuous update can happen as result of calling [_selectStartTo] or
/// [_selectEndTo] with `continuous` sets to true which causes a [Selectable]
/// to scroll. Calling this method will stop the update as well as the
/// scrolling.   ¿ ≠˘Å¿ Æ#"/// Removes the ongoing selection.   ¿ ØÄ”¿ Ø    ¿ ≤÷Ç÷¿ ≤€  ¿ ≤˝¿ ≥   ¿ µ∞ÅΩ¿ µµ  ¿ µ–¿ µ·  ¿ µÌ¿ µÛ   ¿ ∑úÉ±¿ ∑°  ¿ ∑ø¿ ∑≈   ¿  0Ä®¿  A  ¿  N¿  T  ¿  0¿  1¿  a¿  ‹Å+¿  Ì  ¿  ¯¿ À  ¿  ‹¿  ›¿ ÃÄ⁄¿ Ãë  ¿ Ãü¿ Ã∂  ¿ Ã¿ Ã¿ Ã¿ Ã|¿ Ã¿ ÃE¿ ÃÄ¿ ÃÅ¿ Õ¥Ä‚¿ Œ:  ¿ ŒH¿ ŒV  ¿ Õ¥¿ Õµ¿ Õø¿ Œ%¿ Õ≈¿ ÕÓ¿ Œ)¿ Œ*¿ ŒöÄ»¿ œ   ¿ œ-¿ œD  ¿ Œö¿ Œõ¿ Œ•¿ œ¿ Œ´¿ Œ‘¿ œ¿ œ¿ œfÅ¿ œÏ  ¿ –¿ –  ¿ –¿ –6  ¿ œf¿ œg¿ œq¿ œ◊¿ œw¿ œ†¿ œ€¿ œ‹¿ –pÄ”¿ –˛  ¿ —¿ —  ¿ –p¿ –q¿ –{¿ –·¿ –Å¿ –™¿ –Â¿ –Ê¿ —lÄı¿ —}  ¿ —Å¿ —ç  ¿ —l¿ —m¿ “eÄ€¿ “v  ¿ “}¿ “â  ¿ “e¿ “f¿ ”DÅØ¿ ”U   ¿ ”D¿ ”E¿ ‘˜É¿ ’
  ¿ ’¿ ’  ¿ ‘˜¿ ‘¯ ¿ ÿ	ÇT¿ ŸÅ/// An action that does not override any [Action.overridable] in the subtree.
///
/// If this action is invoked by an [Action.overridable], it will immediately
/// invoke the [Action.overridable] and do nothing else. Otherwise, it will call
/// [invokeAction].¿ Ÿ0¿ Ÿ0   ¿ Ÿ_8¿ Ÿg  ¿ Ÿt¿ Ÿw  ¿ Ÿ¿ Ÿé   ¿ ŸõÄ¿¿ ŸØ  ¿ Ÿ∂¿ Ÿπ  ¿ Ÿ¡¿ Ÿ–  ¿ Ÿõ¿ Ÿú ¿ ⁄_Å!¿ ⁄e  ¿ ⁄™ ¿ ⁄™¿ ⁄∫ ¿ ⁄ª
¿ ⁄¡   ¿ ⁄À!¿ ⁄Á   ¿ ⁄ÒÄç¿ €  ¿ €¿ €$  ¿ €,¿ €;  ¿ ⁄Ò¿ ⁄Ú ¿ €ÇÅ¿ €à  ¿ €’! ¿ €’¿ €È ¿ €Í
¿ €   ¿ €˙!¿ ‹   ¿ ‹ o¿ ‹1  ¿ ‹>¿ ‹W  ¿ ‹_¿ ‹n  ¿ ‹ ¿ ‹! ¿ ‹ìÅï¿ ‹ô ¿ ‹∫&¿ ‹∫¿ ›J ¿ ›¿ ›$ ¿ ›%
¿ ›+  ¿ ›2¿ ›A   ¿ ›R!¿ ›n  ¿ ›w!¿ ›ç   ¿ ›ùÄâ¿ ›Æ  ¿ ›ª¿ ›æ  ¿ ›∆¿ ›’  ¿ ›ù¿ ›û ¿ ﬁ*Ç¿ ﬁ0 ¿ ﬁV(¿ ﬁV¿ ﬁ¢O ¿ ﬁ¢¿ ﬁ« ¿ ﬁ»
¿ ﬁŒ  ¿ ﬁ’¿ ﬁ‰   ¿ ﬁı!¿ ﬂ  ¿ ﬂ!¿ ﬂ0   ¿ ﬂ@Ä˜¿ ﬂQ  ¿ ﬂ^¿ ﬂa  ¿ ﬂi¿ ﬂx  ¿ ﬂ@¿ ﬂA ¿ ‡;Å…¿ ‡A ¿ ‡j(¿ ‡j¿ ‡∂5 ¿ ‡∂¿ ‡ﬁ ¿ ‡ﬂ
¿ ‡Â   ¿ ‡Ô!¿ ·   ¿ ·ÄÌ¿ ·&  ¿ ·3¿ ·6  ¿ ·>¿ ·M  ¿ ·¿ · ¿ ‚ó¿ ‚   ¿ ‚e=¿ ‚{ ¿ ‚†¿ ‚°¿ ‚î¿ ‚ü¿ ‚ï¿ ‚¶;¿ ‚º ¿ ‚ﬂ¿ ‚‡¿ ‚”¿ ‚ﬁ¿ ‚‘¿ ‚Ê*¿ ‚Ó  ¿ „(¿ „   
¿ „AÄÆ¿ „R  ¿ „Y¿ „e  ¿ „A¿ „B¿ „ÛÉß¿ „¯    ¿ ÁûÅ∞¿ Á∫  ¿ Á ¿ Á„  ¿ Áû¿ Áü¿ ÈRÇ,¿ È‘a/// Selects a word in a selectable at the location
/// [SelectWordSelectionEvent.globalPosition]. ¿ ÈÂ¿ Èˇ  ¿ È∏¿ Èπ¿ ÎÇÅL¿ Îû  ¿ Î≥¿ Î»  ¿ ÎÇ¿ ÎÉ¿ Ï“Å[¿ ÏÓ  ¿ Ì¿ Ì"  ¿ Ï“¿ Ï”¿ Ó1{¿ ÓB   ¿ Ó1¿ Ó2¿ Ó∞Éø¿ ÓÃ  ¿ ÓÍ¿ Óˆ  ¿ Ô¿ Ô  ¿ Ó∞¿ Ó±¿ ÚsÉí¿ ÚÑ  ¿ Úó¿ Ú£  ¿ Ús¿ Út¿ ˆ	É¿ ˆ   ¿ ˆ	¿ ˆ
 ¿ ˘¿ çZ¿ ˙¿Åó/// An abstract base class for updating multiple selectable children.
///
/// This class provide basic [SelectionEvent] handling and child [Selectable]
/// updating. The subclass needs to implement [ensureChildUpdated] to ensure
/// child [Selectable] is updated properly.
///
/// This class optimize the selection update by keeping track of the
/// [Selectable]s that currently contain the selection edges. ¿ ˚%ÄÂ ¿ ˚o¿ ˚òG/// Creates an instance of [MultiSelectableSelectionContainerDelegate].  ¿ ¸k¿ ¸];/// Gets the list of selectables this delegate is managing.¿ ¸w¿ ¸x¿ ¸k¿ ¸v¿ ¸l¿ ¸~Ç&¿ ˛zÅ—/// The number of additional pixels added to the selection handle drawable
/// area.
///
/// Selection handles that are outside of the drawable area will be hidden.
/// That logic prevents handles that get scrolled off the viewport from being
/// drawn on the screen.
///
/// The drawable area = current rectangle of [SelectionContainer] +
/// _kSelectionHandleDrawableAreaPadding on each side.
///
/// This was an eyeballed value to create smooth user experiences.¿ ˛°¿ ˛©q¿ ˛˝@/// The current selectable that contains the selection end edge.¿ ˛Ï¿ ˛Ì¿ ˇ¿ ˇ¿ ˇu¿ ˇuB/// The current selectable that contains the selection start edge.¿ ˇd¿ ˇe¿ ˇí¿ ˇì¿ ˇô¿ ˇ§  ¿ ˇπ"¿ ˇ≈  ¿ ˇﬂ¿ ˇÍ  ¿ ˇ˝ ¿ 	  ¿ "&¿ ' ¿ C¿ L'¿ Q ¿ n¿ w!¿ | ¿ ì¿ ú+¿ ¨ ¿ ≈¿ ∆¿ π¿ ƒ¿ ∫¿ Ã'¿ — ¿ Ó¿Ê|¿¯ ¿¿¿$¿a¿4¿*¿6¿G¿A¿I¿X¿Y¿•>¿«   ¿•¿¶¿≈Äﬁ¿Äâ/// The compare function this delegate used for determining the selection
/// order of the selectables.
///
/// Defaults to screen order.  ¿W¿X ¿ ¯Ä°¿	  ¿¿  ¿ ¯¿ ˘¿ùÅ¿Æ  ¿µ¿¡  ¿ù¿û¿ ÄÉ¿lD/// Notifies this delegate that layout of the container has changed.   ¿ßÉ®¿¨    ¿SÄü¿X    ¿ˆâ(¿˚    ¿"ÅŸ¿'  ¿9¿E   ¿ˇÄ¢¿e@/// Called when this delegate finishes updating the selectables.  ¿B¿C¿O¿P¿gÅC¿πJ/// Updates the [value] in this class and notifies listeners if necessary.   ¿ÆÅ¿≥  ¿√¿œ   ¿ßÅµ¿´  ¿ø¿À  ¿Õ¿Ÿ   ¿`É"¿YÄ„/// Compares two rectangles in the screen order solely by their vertical
/// positions.
///
/// Returns positive if a is lower, negative if a is higher, 0 if their
/// order can't be determine solely by their vertical position. ¿l¿r  ¿t¿z   ¿ÜÇ∆¿nÄ‘/// Compares two rectangles in the screen order by their horizontal positions
/// assuming one of the rectangles enclose the other rect vertically.
///
/// Returns positive if a is lower, negative if a is higher. ¿É¿â  ¿ã¿ë   ¿PÅn¿U    ¿ ¬ê¡¿!#?/// Gets the combined selection geometry for child selectables.  ¿!¿!¿3{ÅT¿3  ¿3≠¿3≤  ¿3ø¿3ƒ   ¿4”Å¿4‰  ¿4ı¿5  ¿5¿5  ¿4”¿4‘¿5ˆâ™¿7OÅG/// Pushes both handle layers to the selectables that contain selection edges.
///
/// This method needs to be called every time the selectables that contain the
/// selection edges change, i.e. [currentSelectionStartIndex] or
/// [currentSelectionEndIndex] changes. Otherwise, the handle may be painted
/// in the wrong place.   ¿?§Çâ¿?¯4/// Copies the selected contents of all selectables.  ¿?€¿?‹¿CÄÉ∫¿CÖ    ¿G>Åq¿Gä,/// Selects all contents of all selectables. ¿Gö¿G≥  ¿Gm¿Gn¿H≥àI¿I6a/// Selects a word in a selectable at the location
/// [SelectWordSelectionEvent.globalPosition]. ¿IG¿Ia  ¿I¿I¿Q Åv¿QcC/// Removes the selection of all selectables this delegate manages. ¿Qx¿Qç  ¿QF¿QG¿RzÖª¿R’;/// Extend current selection in a certain text granularity. ¿Rı$¿S  ¿R∏¿Rπ¿X9à±¿Xî;/// Extend current selection in a certain text granularity. ¿X∑'¿X⁄  ¿Xw¿Xx¿`ÓÅ≥¿a. /// Updates the selection edges. ¿aH¿ab  ¿a¿a¿b•Ü]¿b¡  ¿bÿ¿bË  ¿b•¿b¶¿iÅ¿i   ¿i¿i¿jÅá¿kkÅ</// Ensures the selectable child has received up to date selection event.
///
/// This method is called when a new [Selectable] is added to the delegate,
/// and its screen location falls into the previous selection.
///
/// Subclasses are responsible for updating the selection of this newly added
/// [Selectable]. ¿k~¿kä  ¿kY¿kZ¿kôÅl¿lÄÄ¡/// Dispatches a selection event to a specific selectable.
///
/// Override this method if subclasses need to generate additional events or
/// treatments prior to sending the selection events. ¿lû¿l™  ¿lµ¿l≈  ¿lc¿ld¿m	â	¿oÇO/// Initializes the selection of the selectable children.
///
/// The goal is to find the selectable child that contains the selection edge.
/// Returns [SelectionResult.end] if the selection edge ends on any of the
/// children. Otherwise, it returns [SelectionResult.previous] if the selection
/// does not reach any of its children. Returns [SelectionResult.next]
/// if the selection reaches the end of its children.
///
/// Ideally, this method should only be called twice at the beginning of the
/// drag selection, once for start edge update event, once for end edge update
/// event. ¿oé¿o®  ¿oØ¿oæ   ¿vê[¿wòÅe/// Adjusts the selection based on the drag selection update event if there
/// is already a selectable child that contains the selection edge.
///
/// This method starts by sending the selection event to the current
/// selectable that contains the selection edge, and finds forward or backward
/// if that selectable no longer contains the selection edge. ¿w©¿w√  ¿w ¿wŸ           ¿ÜuÅg¿á]Äﬂ/// Signature for a widget builder that builds a context menu for the given
/// [SelectableRegionState].
///
/// See also:
///
///  * [EditableTextContextMenuBuilder], which performs the same role for
///    [EditableText].  ¿áï¿á£  ¿á≠+¿áƒ    ÑÄ¨Ñ2 ÑcÑ¿ÑPÑbÑQÑgÑxÑyÑÇÑìÑîÑûÑØÑ∞Ö°9ÖÆ Ö◊  âÿ <ÄÜÄ§Ä•Ä∫ÄŒÄœÄ˘Å!ÅJÅsÅõÅÕÅŒÅÂÅ˙Ç"Ç7ÇTÇoÇàÇ®Ç¡Ç‹ÇÛÉ*ÉMÉqÉèÉΩÉæÉ÷É˝ÑÑÑeÑÄÑúÑ¿Ñ√ÑƒÖÖ`Ö°Ö‹Ö›ÜÜÜhÜ∏ááTáõáÎàààdàéàíà⁄â&âsâ¡â≈âÒâıäFä|äÄä—ãã9ã=ã~ã»ååfå∑çç1ç5çÜç‘ééjéàéåé◊èèOè^èbèêèîè®è¨è∏è…èÁê!ê^êwêªê’ê˚ë;ë{ëäëóë¢ë´ë±ëπë…ëÕë—ëˆíí<í^íÅí•í íì ìLìwì£ì–îî;î?îCîeîiîπî˚ïïïaïÆïÂïÈñ8ñÉñŒñÌñÒóóQónóróÕó›ó·ó˜ó˚òJòóò’òŸòÌô9ôôÉô‚ôÚôˆöGöèö≤ö∂ö õõõÑõîõòõ‚ú5úÑú“ú÷ú„úÁù8ùâù∂ù∫ù∆û*û2û6ûDûÑû±üüüoüΩü÷†$†q†°†œ†’°#°E°`°o°å°©°Œ°Á¢.¢K¢Q¢R¢ú¢¢¢—¢◊£(£.£z£µ£∂£Â§§§:§@§q§á§à§«•••Q•`•f•∞•Ô¶ ¶!¶Q¶ç¶é¶⁄ßß	ßYßuß{ßãßëßŸ®®l®¶®˜©,©`©≥©¸™<™t™ú™…™–´"´^´_´∞´ˆ¨	¨-¨@¨_¨|¨®¨≥¨À¨Í≠≠=≠H≠O≠S≠T≠`≠¢≠§≠•≠…Æ@ÆäÆÕØØÈ∞†±E±Ù≤¨≥V≥˙¥∂¥ª¥ºµ"µIµÄµµµË∂N∂û∂π∂∫∑∑y∑z∑õ∑ƒ∑≈∏∏:∏;∏Å∏á∏ƒ∏Ÿπππ%π:πQπàπ´πŒπÏ∫X∫ê∫º∫ªuª≈ººdºàº™ºøº˝ΩΩΩ9Ω{ΩáΩíΩœΩÿΩﬂΩ„Ω‰Ωææ4æYæ|æõæ™æÕæÓøø2øBøHøIøîø€øˇ¿ @%¿ @3¿ @9¿ @d¿ @ä¿ @Œ¿ @‘¿ @ÿ¿ @Ÿ¿ @Â¿ A¿ A@¿ As¿ A≤¿ AÎ¿ B2¿ BQ¿ BY¿ B_¿ Bc¿ Bd¿ BÆ¿ C ¿ C¿ C¿ C$¿ CJ¿ C^¿ C¶¿ CÆ¿ C«¿ CÕ¿ Cﬂ¿ D%¿ D+¿ D/¿ D0¿ DR¿ Du¿ D∂¿ D’¿ D˝¿ E#¿ El¿ Eç¿ EÀ¿ E—¿ F¿ FD¿ Fe¿ Fr¿ Fñ¿ F∂¿ Fº¿ F¿¿ F¡¿ F–¿ F—¿ G!¿ Gt¿ Gƒ¿ H	¿ H¿ H`¿ Ht¿ H≤¿ H◊¿ H¸¿ I¿ IB¿ Ic¿ I∞¿ J¿ JV¿ J°¿ JÛ¿ K<¿ KŒ¿ KÌ¿ L¿ L1¿ LÖ¿ L⁄¿ M-¿ MR¿ MÉ¿ Mâ¿ Mç¿ Mé¿ Mµ¿ N-¿ N¨¿ Nﬁ¿ NÔ¿ O&¿ ON¿ O~¿ O∞¿ O‹¿ P¿ P;¿ PD¿ PK¿ PO¿ PP¿ Pw¿ PÔ¿ Q\¿ Qé¿ Qü¿ QŸ¿ R¿ RT¿ R]¿ Rd¿ Rh¿ Ri¿ R≠¿ R˙¿ S¿ S1¿ SH¿ Sq¿ Sò¿ Sø¿ S‚¿ T%¿ T8¿ T]¿ TÇ¿ T©¿ TÎ¿ Tı¿ U¿ U:¿ U@¿ Uf¿ Uj¿ Uk¿ Uß¿ UÙ¿ V¿ V:¿ V@¿ Vf¿ Vj¿ Vk¿ V©¿ Vˆ¿ W¿ WL¿ WZ¿ W…¿ Wœ¿ Wı¿ W˘¿ W˙¿ X2¿ XL¿ Xr¿ Xv¿ Xw¿ X¨¿ X˘¿ Y¿ Y0¿ YW¿ Y~¿ Y°¿ Y„¿ Z¿ Z-¿ ZT¿ Zö¿ Z≠¿ Z∑¿ ZΩ¿ Z„¿ ZÁ¿ ZË¿ [¿ [m¿ [≠¿ [Í¿ [¿ [Ù¿ [ı¿ \8¿ \]¿ \Ç¿ \µ¿ ] ¿ ]R¿ ]°¿ ]‹¿ ]Ú¿ ]¯¿ ^¿ ^"¿ ^#¿ ^p¿ ^…¿ ^Ô¿ ^Û¿ ^Ù¿ _3¿ _M¿ _s¿ _á¿ _¬¿ _ÿ¿ _ﬁ¿ _‚¿ _„¿ `+¿ `{¿ `æ¿ a¿ aB¿ aW¿ a_¿ ae¿ aw¿ a{¿ a|¿ a≥¿ b¿ bV¿ bë¿ b∂¿ b€¿ b˛¿ c!¿ cD¿ cî¿ c‘¿ d`¿ d°¿ dË¿ dÚ¿ e
¿ eH¿ eg¿ e•¿ eΩ¿ e˚¿ f¿ fÄ¿ fô¿ f´¿ fµ¿ fÛ¿ g¿ gI¿ gj¿ gä¿ g£¿ gµ¿ gø¿ h¿ hO¿ h€¿ i¿ ic¿ im¿ iÖ¿ i√¿ i…¿ iÔ¿ iÛ¿ iÙ¿ j¿ j¿ j<¿ jÉ¿ j¥¿ jµ¿ j˚¿ k¿ kR¿ k£¿ k’¿ l!¿ lm¿ l∏¿ m¿ mO¿ mô¿ mß¿ m≠¿ m⁄¿ ng¿ nñ¿ n‚¿ o¿ o%¿ o/¿ oa¿ o´¿ o„¿ oÒ¿ o˜¿ o˙¿ o˚¿ p)¿ pl¿ pî¿ p∫¿ p∆¿ pÔ¿ q¿ q-¿ qa¿ qú¿ q¶¿ qÆ¿ q≥¿ q÷¿ q˜¿ r¿ r¿ r¿ rF¿ rt¿ rñ¿ rö¿ rõ¿ ræ¿ s	¿ s<¿ s=¿ sÖ¿ sã¿ s‹¿ t-¿ t_¿ t≠¿ t˘¿ uD¿ uì¿ u€¿ v)¿ v7¿ v=¿ vj¿ v˚¿ w,¿ wx¿ w´¿ wΩ¿ w«¿ w˚¿ xG¿ xÅ¿ xè¿ xï¿ xô¿ xö¿ x√¿ xÛ¿ y¿ y¿ y¿ y@¿ yA¿ yr¿ y°¿ y¢¿ yÍ¿ z,¿ z-¿ zã¿ z“¿ {6¿ {7¿ {t¿ {í¿ {«¿ {œ¿ {ı¿ {˘¿ {˙¿ |D¿ |ü¿ |È¿ }2¿ }Ω¿ }Â¿ }Ê¿ ~%¿ ~C¿ ~x¿ ~Ä¿ ~¶¿ ~™¿ ~´¿ ~Ò¿ 1¿ ç¿ ‘¿ Ä6¿ Ä7¿ Ät¿ Äí¿ Ä≈¿ ÄÕ¿ ÄÛ¿ Ä˜¿ Ä¯¿ Å@¿ Åó¿ Å·¿ Ç*¿ ÇØ¿ Ç’¿ Ç÷¿ É¿ É3¿ Éf¿ Én¿ Éî¿ Éò¿ Éô¿ Éˇ¿ ÑY¿ Ñ¥¿ Ö¿ ÖJ¿ Ös¿ Ö∏¿ Ö√¿ ÖÂ¿ ÖÓ¿ ÖÔ¿ Ü¿ ÜA¿ Ü_¿ Ü°¿ ÜÌ¿ Üˆ¿ Ü˙¿ Ü˚¿ á¿ áH¿ ám¿ á{¿ áÅ¿ á—¿ à¿ àG¿ à_¿ à¿ à…¿ â¿ âL¿ âí¿ âΩ¿ ä¿ äA¿ äÅ¿ ä√¿ äÏ¿ ã¿ ãM¿ ãl¿ ãâ¿ ãº¿ ãÎ¿ å¿ åR¿ åY¿ å]¿ å^¿ åÅ¿ å¶¿ å¥¿ å∫¿ å‰¿ ç4¿ çÄ¿ çó¿ ç„¿ é$¿ ém¿ é¨¿ é›¿ é·¿ é‚¿ è¿ è¿ èV¿ èc¿ è{¿ è†¿ è»¿ è€¿ è·¿ è‚¿ ê¿ ê¿ ê%¿ ê&¿ êE¿ êk¿ ê|¿ êÄ¿ êÅ¿ ê©¿ êØ¿ ê˙¿ ëJ¿ ëó¿ ë®¿ ëÆ¿ ëˇ¿ í)¿ ío¿ íÉ¿ íâ¿ íä¿ í€¿ ì+¿ ì{¿ ì∆¿ î¿ î7¿ îK¿ îQ¿ îR¿ îw¿ îò¿ îû¿ îü¿ î“¿ ï¿ ï>¿ ïQ¿ ïW¿ ïX¿ ï~¿ ï¿ ï£¿ ïª¿ ïÓ¿ ñ(¿ ñ1¿ ñ8¿ ñI¿ ñM¿ ñN¿ ñë¿ ñó¿ ñÂ¿ ó7¿ ó¿ óÖ¿ ó…¿ ò¿ ò¿ òW¿ ò¶¿ òÓ¿ ô¿ ô¿ ôM¿ ôS¿ ôÄ¿ ôÜ¿ ô⁄¿ ö"¿ öX¿ ö^¿ ön¿ öµ¿ ö˙¿ õ:¿ õÄ¿ õ–¿ ú¿ ús¿ úä¿ ù¿ ù¿ ù ¿ ùK¿ ùq¿ ùπ¿ ùø¿ ù√¿ ùƒ¿ û	¿ û¿ û]¿ ûØ¿ û˜¿ û˝¿ üC¿ üÅ¿ üá¿ ü—¿ † ¿ †h¿ †é¿ †î¿ †«¿ †Õ¿ †˙¿ ° ¿ °T¿ °ú¿ °“¿ °ÿ¿ °Ë¿ ¢+¿ ¢p¿ ¢∞¿ ¢ˆ¿ £F¿ £~¿ £Î¿ §¿ §Ü¿ §î¿ §ö¿ §«¿ §Ô¿ •9¿ •?¿ •C¿ •D¿ •Ç¿ •à¿ •ò¿ •ﬂ¿ ¶"¿ ¶g¿ ¶ß¿ ¶Ì¿ ß%¿ ß]¿ ßÅ¿ ß£¿ ßß¿ ß®¿ ß›¿ ß„¿ ®0¿ ®|¿ ®»¿ ®Œ¿ © ¿ ©G¿ ©M¿ ©]¿ ©§¿ ©Á¿ ™,¿ ™l¿ ™º¿ ™Ù¿ ´%¿ ´R¿ ´l¿ ´«¿ ´À¿ ´Ã¿ ´˜¿ ´˝¿ ¨K¿ ¨é¿ ¨î¿ ¨‚¿ ≠2¿ ≠{¿ ≠å¿ ≠™¿ ≠Õ¿ ≠Ú¿ ≠ˆ¿ ≠˜¿ Æ¿ Æ7¿ ÆQ¿ Æ|¿ Æü¿ ÆÂ¿ Ø¿ Ø¿ Ø¿ Ø/¿ Øt¿ Øå¿ Øö¿ Ø†¿ Ø‚¿ ØÊ¿ ØÁ¿ ∞¿ ∞$¿ ∞4¿ ∞:¿ ∞â¿ ∞∏¿ ∞Ô¿ ±¿ ±I¿ ±¿ ±à¿ ±é¿ ±ÿ¿ ≤¿ ≤*¿ ≤T¿ ≤z¿ ≤®¿ ≤Ø¿ ≤≥¿ ≤¥¿ ≤‘¿ ≥¿ ≥7¿ ≥]¿ ≥c¿ ≥~¿ ≥∏¿ ≥◊¿ ¥#¿ ¥\¿ ¥u¿ ¥µ¿ ¥œ¿ ¥‹¿ µ¿ µ$¿ µn¿ µ©¿ µ≠¿ µÆ¿ µ˝¿ ∂(¿ ∂Z¿ ∂h¿ ∂n¿ ∂ó¿ ∂Ω¿ ∂◊¿ ∑¿ ∑4¿ ∑=¿ ∑D¿ ∑j¿ ∑n¿ ∑o¿ ∑ô¿ ∑ö¿ ∑œ¿ ∏¿ ∏¿ ∏¿ ∏k¿ ∏≠¿ ∏·¿ π¿ π_¿ ∫¿ ∫0¿ ∫Y¿ ∫Å¿ ∫È¿ ª¿ ª¿ ª$¿ ªJ¿ ªN¿ ªO¿ ªw¿ ªx¿ ªƒ¿ ªÌ¿ ªÛ¿ º¿ º	¿ º]¿ º™¿ º¸¿ ΩC¿ Ωí¿ Ω®¿ Ω˘¿ æ.¿ æb¿ æÆ¿ æ˛¿ ø9¿ øo¿ ø¢¿ øµ¿ ø∆¿ ø«¿ ø˛¿ ¿'¿ ¿N¿ ¿u¿ ¿î¿ ¿∑¿ ¿◊¿ ¿¸¿ ¡!¿ ¡H¿ ¡c¿ ¡m¿ ¡v¿ ¡é¿ ¡∑¿ ¡ﬁ¿ ¬¿ ¬(¿ ¬^¿ ¬É¿ ¬®¿ ¬œ¿ ¬Ë¿ √¿ √¿ √¿ √¿ √!¿ √"¿ √_¿ √¿ √ƒ¿ √»¿ √…¿ ƒ¿ ƒ"¿ ƒe¿ ƒi¿ ƒj¿ ƒπ¿ ƒÌ¿ ≈=¿ ≈â¿ ≈≥¿ ∆¿ ∆U¿ ∆å¿ ∆±¿ ∆Ú¿ «5¿ «>¿ «K¿ «p¿ «≥¿ «Ù¿ «˝¿ »¿ »¿ »¿ »¿ »C¿ »Ö¿ »±¿ »Á¿ »Ë¿ »˜¿ … ¿ …Y¿ …]¿ …i¿ …â¿ …ä¿ …ô¿ …¬¿ …˚¿ …ˇ¿  ¿  -¿  .¿  :¿  j¿  ê¿  ß¿  œ¿  ’¿  Ÿ¿  ⁄¿  Ê¿ À¿ À0¿ Àz¿ À¨¿ À¬¿ Àÿ¿ Àﬁ¿ Ã¿ Ã¿ Ã	¿ Ã¿ ÃA¿ Ãz¿ Ã~¿ Ãä¿ Ãæ¿ ÃÀ¿ Ã‚¿ ÃÊ¿ ÃÁ¿ Ãˆ¿ Õ¿ ÕX¿ Õ\¿ Õh¿ Õ±¿ Õ≤¿ Õ¡¿ ÕÍ¿ Œ#¿ Œ'¿ Œ3¿ Œó¿ Œò¿ Œß¿ Œ–¿ œ	¿ œ¿ œ¿ œL¿ œ_¿ œc¿ œd¿ œs¿ œú¿ œ’¿ œŸ¿ œÂ¿ –m¿ –n¿ –}¿ –¶¿ –ﬂ¿ –„¿ –Ô¿ —-¿ —@¿ —D¿ —E¿ —i¿ —j¿ —v¿ —ö¿ —ª¿ —Ÿ¿ “¿ “^¿ “b¿ “c¿ “o¿ “ñ¿ “Ω¿ “ˆ¿ ”%¿ ”=¿ ”A¿ ”B¿ ”N¿ ”a¿ ”ö¿ ”…¿ ”Î¿ ‘9¿ ‘s¿ ‘õ¿ ‘Ω¿ ‘€¿ ‘¿ ‘Ù¿ ‘ı¿ ’¿ ’(¿ ’S¿ ’{¿ ’í¿ ’∂¿ ’—¿ ’ÿ¿ ’Í¿ ÷¿ ÷5¿ ÷>¿ ÷D¿ ÷j¿ ÷â¿ ÷™¿ ÷—¿ ◊ ¿ ◊$¿ ◊<¿ ◊Y¿ ◊q¿ ◊ñ¿ ◊ø¿ ◊⁄¿ ◊Á¿ ◊Ú¿ ◊˚¿ ÿ¿ ÿ¿ ÿ¿ ÿ	¿ ÿW¿ ÿ[¿ ÿ©¿ ÿ˙¿ Ÿ¿ Ÿ]¿ Ÿò¿ Ÿô¿ Ÿ•¿ Ÿ€¿ Ÿ¸¿ ⁄(¿ ⁄.¿ ⁄X¿ ⁄\¿ ⁄^¿ ⁄_¿ ⁄®¿ ⁄»¿ ⁄…¿ ⁄Ó¿ ⁄Ô¿ ⁄˚¿ €F¿ €{¿ €¿ €Å¿ €Ç¿ €”¿ €˜¿ €¯¿ ‹¿ ‹¿ ‹*¿ ‹y¿ ‹å¿ ‹ê¿ ‹í¿ ‹ì¿ ›¿ ›O¿ ›P¿ ›u¿ ›ö¿ ›õ¿ ›ß¿ ›‡¿ ﬁ#¿ ﬁ'¿ ﬁ)¿ ﬁ*¿ ﬁ†¿ ﬁÚ¿ ﬁÛ¿ ﬂ¿ ﬂ=¿ ﬂ>¿ ﬂJ¿ ﬂÉ¿ ﬂß¿ ﬂ›¿ ﬂÎ¿ ﬂÒ¿ ‡4¿ ‡8¿ ‡:¿ ‡;¿ ‡¥¿ ‡Ï¿ ‡Ì¿ ·¿ ·¿ ·¿ ·X¿ ·|¿ ·≤¿ ·¿¿ ·∆¿ ·ˇ¿ ‚¿ ‚¿ ‚¿ ‚c¿ ‚§¿ ‚„¿ ‚‰¿ „¿ „>¿ „?¿ „K¿ „r¿ „°¿ „Œ¿ „Ï¿ „¿ „Ò¿ ‰ ¿ ‰ä¿ ‰“¿ Â'¿ Âo¿ Â‚¿ ÂË¿ ÊN¿ Êí¿ Ê·¿ Á$¿ Áë¿ Áó¿ Áõ¿ Áú¿ Á®¿ ÁÎ¿ Ë,¿ Ëc¿ Ëë¿ ËΩ¿ Ë√¿ È¿ È8¿ ÈK¿ ÈO¿ ÈP¿ ÈÖ¿ È∂¿ È¬¿ Í¿ ÍI¿ Íu¿ Í¿¿ Í∆¿ Í¿ Î7¿ Î=¿ Îh¿ Î{¿ Î¿ ÎÄ¿ Îå¿ Î–¿ Ï¿ Ï:¿ Ï\¿ Ïã¿ Ï∏¿ ÏÀ¿ Ïœ¿ Ï–¿ Ï‹¿ Ì*¿ Ìd¿ Ì£¿ Ì∞¿ ÌÒ¿ Ì˜¿ Ó*¿ Ó.¿ Ó/¿ Ó;¿ ÓN¿ Ór¿ Óî¿ Ó©¿ Ó≠¿ ÓÆ¿ Ó∫¿ Ô¿ Ô3¿ Ôb¿ Ôí¿ Ô∫¿ ÔÁ¿ ¿ =¿ b¿ ï¿ ∆¿ Ô¿ Ò¿ Ò(¿ Òa¿ Òù¿ ÒÕ¿ Ò˚¿ Ú#¿ Ú)¿ Úl¿ Úp¿ Úq¿ Ú}¿ Ú∞¿ Û¿ Ûe¿ Û†¿ Û©¿ Û’¿ Ù
¿ Ù¿ ÙM¿ ÙS¿ Ù≥¿ ı¿ ıM¿ ıV¿ ıÑ¿ ıπ¿ ı¡¿ ı¸¿ ˆ¿ ˆ¿ ˆ¿ ˆ¿ ˆ3¿ ˆg¿ ˆà¿ ˆ±¿ ˆÓ¿ ˆ˘¿ ˜¿ ˜¿ ˜>¿ ˜_¿ ˜ä¿ ˜…¿ ˜‘¿ ˜›¿ ˜„¿ ¯"¿ ¯à¿ ¯¿ ˘¿ ˘¿ ˘¿ ˘¿ ˘_¿ ˘c¿ ˘±¿ ˘˛¿ ˙*¿ ˙.¿ ˙s¿ ˙±¿ ˚#¿ ˚m¿ ˚ù¿ ˚…¿ ¸¿ ¸¿ ¸¿ ¸¿ ¸J¿ ¸{¿ ¸|¿ ¸…¿ ¸’¿ ¸€¿ ˝)¿ ˝y¿ ˝î¿ ˝ö¿ ˝‡¿ ˛¿ ˛¿ ˛d¿ ˛¶¿ ˛ß¿ ˛Í¿ ˛˜¿ ˇ¿ ˇ¿ ˇb¿ ˇo¿ ˇñ¿ ˇó¿ ˇ∑¿ ˇ›¿ ˇ˚¿ ¿  ¿ J¿ u¿ ö¿ …¿  ¿ ı¿ ˆ¿¿&¿U¿u¿ñ¿ö¿õ¿ß¿Œ¿˜¿?¿k¿t¿¡¿œ¿’¿¯¿¿¿¿e¿Ä¿†¿§¿•¿ ¿Ò¿¿N¿y¿ã¿ï¿¡¿ﬂ¿Á¿Ë¿C¿î¿‡¿,¿f¿ì¿¢¿⁄¿ˆ¿3¿>¿F¿L¿P¿Q¿o¿ì¿¥¿Õ¿”¿Ô¿Û¿Ù¿¿h¿¶¿»¿‚¿˝¿	7¿	m¿	å¿	Ò¿
(¿
a¿
 ¿¿9¿C¿|¿Æ¿∏¿ı¿¿#¿+¿,¿}¿õ¿Ë¿?¿ñ¿≈¿Õ¿¿=¿V¿\¿î¿À¿¿[¿™¿¯¿G¿í¿ƒ¿˙¿¿¿ ¿R¿¨¿„¿¿1¿V¿\¿ã¿≤¿∏¿¯¿¸¿˝¿@¿M¿^¿~¿û¿¢¿£¿Ø¿‰¿&¿=¿_¿d¿e¿≤¿÷¿¿?¿d¿}¿É¿ß¿´¿¨¿‹¿¿]¿•¿´¿æ¿¬¿√¿¿/¿5¿U¿b¿§¿•¿›¿¿-¿G¿N¿Ä¿û¿∏¿ø¿¯¿¿$¿*¿Y¿]¿^¿©¿∫¿¿¿
¿L¿~¿ø¿E¿À¿€¿·¿+¿P¿V¿¿É¿Ñ¿‘¿¿"¿a¿ï¿™¿¿!¿'¿<¿¢¿≤¿∏¿ı¿¿"¿I¿M¿N¿y¿ ¿ ¿ b¿ á¿ ï¿ õ¿ ª¿ ø¿ ¿¿!¿!¿!<¿!f¿!í¿!±¿!◊¿!˜¿"¿"I¿"R¿"X¿"Y¿"Ä¿"“¿"ˆ¿#¿#!¿#q¿#ì¿#∑¿#¿¿#∆¿#«¿#ˇ¿$T¿$Æ¿$Â¿%M¿%Ç¿%Ω¿%√¿%ƒ¿%‰¿&¿&o¿&Ë¿' ¿'<¿'a¿'Å¿'∆¿(¿(¿(¿($¿(%¿([¿(¨¿(ﬂ¿)C¿)v¿)≠¿)≥¿)—¿*¿*T¿*≈¿*˝¿+¿+:¿+X¿+ô¿+⁄¿+Â¿+Ì¿+Û¿+Ù¿,=¿,Ä¿,∞¿,ﬁ¿-'¿-Ü¿-Â¿.W¿.ü¿.Û¿/¿/K¿/U¿/o¿/ï¿/÷¿/È¿0(¿0.¿0/¿0M¿0t¿0ó¿0Ω¿0Ë¿1¿1.¿1a¿1y¿1Ä¿1Ñ¿1Ö¿1–¿2¿2k¿2∏¿3¿3$¿3)¿3y¿3“¿4¿41¿4Ö¿4≠¿4≥¿4Ã¿4–¿4—¿4›¿5%¿5q¿5¿5Ö¿5™¿5À¿5Ô¿5Û¿5Ù¿6E¿6K¿6ú¿6ﬂ¿7.¿7H¿7p¿7©¿7ﬁ¿8$¿8T¿8ó¿8÷¿9x¿:¿:\¿:ü¿:•¿:Û¿;¿;<¿;z¿;°¿;©¿;”¿<¿<4¿<<¿<J¿<P¿<Q¿<û¿<⁄¿<‡¿=)¿=c¿=i¿=j¿=∞¿=±¿=Û¿>'¿>\¿>∂¿>ƒ¿> ¿>À¿?¿?W¿?ù¿?°¿?¢¿?Ÿ¿?Â¿@¿@Q¿@à¿@Õ¿@Á¿A¿A¿A¿A1¿AD¿AJ¿Az¿A¥¿A›¿A„¿Aˇ¿B#¿B*¿B.¿B/¿Bp¿B´¿B∞¿C¿C5¿C:¿C~¿C¢¿C¿C˛¿D¿DR¿D»¿D⁄¿E"¿Eè¿Eù¿E£¿E¯¿FK¿Fç¿F¡¿F”¿F€¿G1¿G7¿G;¿G<¿Gk¿Gx¿Gª¿GÚ¿H*¿H0¿HT¿Hã¿H¨¿H∞¿H±¿HÊ¿I¿I$¿Ii¿Iì¿I’¿J¿J>¿JÇ¿JÓ¿K)¿KY¿Kl¿Kx¿KÇ¿Kä¿K≥¿L ¿LX¿L∂¿L›¿LÁ¿M"¿M6¿M@¿Mç¿M∏¿M¬¿M˛¿NN¿Nï¿N´¿NÛ¿Od¿O≠¿O∑¿O€¿OÍ¿P%¿Pr¿Pò¿P¢¿P™¿P∞¿PŸ¿P˘¿P˝¿P˛¿QD¿QQ¿Qï¿QÃ¿R¿R
¿R-¿RR¿Rs¿Rw¿Rx¿R∂¿R√¿S¿Sq¿Sù¿S∏¿S˚¿T
¿T^¿Tf¿Tl¿T«¿U$¿U=¿Uo¿U∆¿U‡¿V1¿Ve¿Vm¿Vz¿V®¿VÓ¿W¿WY¿Wâ¿Wë¿Wó¿WÆ¿W‹¿WÈ¿X¿X¿X2¿X6¿X7¿Xu¿XÇ¿X‚¿Y6¿Yb¿YÉ¿Y∑¿YÁ¿Z=¿Zm¿Zú¿Zﬂ¿ZÁ¿ZÌ¿[H¿[•¿[ƒ¿[ˆ¿\K¿\}¿\û¿\º¿\¿]¿]d¿]s¿]¶¿]≤¿]º¿]Í¿^;¿^i¿^ü¿^Ω¿^Ò¿_¿_d¿_s¿_¶¿_≤¿_º¿_È¿`¿`F¿`L¿`c¿`ë¿`û¿`Œ¿`‘¿`Á¿`Î¿`Ï¿a¿a¿aj¿a§¿b¿b#¿bû¿b¢¿b£¿bØ¿b¿c:¿cx¿c≥¿cŸ¿cﬂ¿d¿d;¿d\¿dv¿d•¿d“¿d˛¿eM¿er¿eû¿e„¿f¿f8¿f|¿f¶¿f“¿g¿gQ¿g|¿g◊¿h¿h>¿hü¿h•¿hÃ¿hÏ¿hˇ¿i¿i¿i¿i#¿iZ¿iú¿i¢¿i ¿iÚ¿j¿j¿j¿jX¿j^¿j¨¿jÌ¿jÛ¿kC¿kW¿kd¿kñ¿kó¿k‘¿k⁄¿l)¿la¿ln¿lÕ¿m¿m¿m¿mC¿mI¿mö¿mÁ¿n9¿nÇ¿n∫¿n¿¿o¿o`¿om¿o«¿p.¿pE¿pi¿pÜ¿pﬁ¿q¿qh¿qÖ¿q®¿qÀ¿qÁ¿r	¿r%¿rM¿rq¿rò¿rº¿rÿ¿rÚ¿s!¿s-¿sW¿s}¿sô¿s≈¿sÈ¿sÒ¿s˜¿s¯¿t¿t5¿tX¿t^¿to¿tö¿tß¿t‘¿t⁄¿t˙¿uF¿uñ¿u‰¿v¿v¿v¿vb¿v®¿vÆ¿vı¿wF¿wÜ¿w‚¿wÚ¿x¿xe¿xz¿xÇ¿x‰¿x˜¿y¿y#¿yp¿y¿¿yˇ¿zK¿zg¿z¥¿z„¿zÍ¿{>¿{d¿{¯¿|ç¿|Ó¿}$¿}[¿}î¿}µ¿}Ó¿~(¿~`¿~Ç¿~â¿~ú¿~Œ¿¿B¿î¿∫¿Ä¿ÄN¿ÄU¿Äû¿Ä¬¿Ä…¿ÄÌ¿Å"¿Åb¿Åü¿ÅÛ¿ÇP¿Çy¿Çõ¿Ç¡¿Ç‰¿É¿É8¿ÉZ¿Éu¿É§¿Éﬂ¿Ñ¿Ñ%¿ÑA¿Ñ\¿Ñh¿Ñè¿Ñ±¿ÑÃ¿Ñ˚¿Ö!¿ÖT¿Ög¿ÖÑ¿Öü¿Ö´¿Ö≥¿Öπ¿Ö ¿Öı¿Ü¿Ü/¿Ü5¿ÜU¿Ün¿Ür¿Üt¿Üu¿Ü¡¿Üﬁ¿Ü‚¿Ü¿ÜÙ¿á>¿áU¿áì¿á´¿á⁄¿á›    _kLongPressSelectionDevices&_kSelectableVerticalComparingThresholdSelectableRegionSelectableRegionState_NonOverrideAction_SelectAllAction_CopySelectionAction _GranularlyExtendSelectionAction%_GranularlyExtendCaretSelectionAction(_DirectionallyExtendCaretSelectionAction"_SelectableRegionContainerDelegate)MultiSelectableSelectionContainerDelegate mò