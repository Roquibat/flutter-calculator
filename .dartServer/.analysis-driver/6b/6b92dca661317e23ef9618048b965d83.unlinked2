Ä¯setupParentDatacomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeightcomputeDistanceToActualBaselinecomputeDryLayoutperformLayoutcomputeSizeForNoChildhitTestChildrenapplyPaintTransformpaintdeferToChildopaquetranslucentbehaviorhitTesthitTestSelfdebugFillPropertiesadditionalConstraints_additionalConstraintsdebugPaintSizemaxWidth	_maxWidth	maxHeight
_maxHeight_limitConstraints_computeSizeaspectRatio_aspectRatio_applyAspectRatio	stepWidth
_stepWidth
stepHeight_stepHeight
_applyStepalwaysNeedsCompositingisRepaintBoundary_alphaopacity_opacityalwaysIncludeSemantics_alwaysIncludeSemanticspaintsChildupdateCompositedLayervisitChildrenForSemantics_currentlyIsRepaintBoundaryattachdetach_updateOpacitylayershaderCallback_shaderCallback	blendMode
_blendModefilter_filter_reclipaddListenerremoveListenergetClipgetApproximateClipRectshouldRecliptoStringshapetextDirectionclipper_clipper_markNeedsClip_defaultClip_clipclipBehavior_clipBehavior_updateClipdescribeApproximatePaintClip_debugPaint
_debugTextdisposeborderRadius_borderRadius_textDirection_cachedRect_cachedPath_getClipPath	elevation
_elevationshadowColor_shadowColorcolor_colordescribeSemanticsConfiguration_shape
background
foreground_painter
decoration_decorationposition	_positionconfiguration_configurationorigin_origin	alignment
_alignmenttransformHitTests
_transform	transformfilterQuality_filterQualitysetIdentityrotateXrotateYrotateZ	translatescale_effectiveTransform_resolvedAlignment_resolve_markNeedResolution_fitAffectsLayoutfit_fit_hasVisualOverflow_clearPaintData_updatePaintData_paintChildWithTransformtranslation_translationonPointerDownonPointerMoveonPointerUponPointerHoveronPointerCancelonPointerPanZoomStartonPointerPanZoomUpdateonPointerPanZoomEndonPointerSignalhandleEvent_opaquehitTestBehavioronEnteronHoveronExitcursor_cursorvalidForMouseTracker_validForMouseTrackertoImagetoImageSyncdebugSymmetricPaintCount_debugSymmetricPaintCountdebugAsymmetricPaintCount_debugAsymmetricPaintCountdebugResetMetrics!debugRegisterRepaintBoundaryPaintignoring	_ignoringignoringSemantics_ignoringSemanticsoffstage	_offstagesizedByParentperformResizedebugDescribeChildren	absorbing
_absorbingmetaDatavalidActions_validActionsonTap_onTaponLongPress_onLongPressonHorizontalDragUpdate_onHorizontalDragUpdateonVerticalDragUpdate_onVerticalDragUpdatescrollFactor_isValidAction_performSemanticScrollLeft_performSemanticScrollRight_performSemanticScrollUp_performSemanticScrollDown
properties_properties	container
_containerexplicitChildNodes_explicitChildNodesexcludeSemantics_excludeSemanticsblockUserActions_blockUserActions_updateAttributedFields_effectiveAttributedLabel_effectiveAttributedValue"_effectiveAttributedIncreasedValue"_effectiveAttributedDecreasedValue_effectiveAttributedHint_attributedLabel_attributedValue_attributedIncreasedValue_attributedDecreasedValue_attributedHint_performTap_performLongPress_performDismiss_performScrollLeft_performScrollRight_performScrollUp_performScrollDown_performIncrease_performDecrease_performCopy_performCut_performPaste$_performMoveCursorForwardByCharacter%_performMoveCursorBackwardByCharacter_performMoveCursorForwardByWord _performMoveCursorBackwardByWord_performSetSelection_performSetText!_performDidGainAccessibilityFocus!_performDidLoseAccessibilityFocusblocking	_blocking	excluding
_excludingindex_indexlink_link_previousLayoutSizeshowWhenUnlinked_showWhenUnlinkedoffset_offsetleaderAnchor_leaderAnchorfollowerAnchor_followerAnchorgetCurrentTransformvalue_valuesized_sized_layerHandle7RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderIgnoreBaselineRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityShaderCallbackRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBaseRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationPointerDownEventListenerPointerMoveEventListenerPointerUpEventListenerPointerCancelEventListener PointerPanZoomStartEventListener!PointerPanZoomUpdateEventListenerPointerPanZoomEndEventListenerPointerSignalEventListenerRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegionÅˆColorGradientImageImageFilterPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEventRenderProxySliver	RenderBoxRenderObjectWithChildMixinchildoptionalTypeArgsToverridevoidRenderObject
parentData
ParentDatadoublegetMinIntrinsicWidthgetMaxIntrinsicWidthgetMinIntrinsicHeightgetMaxIntrinsicHeightTextBaselinegetDistanceToActualBaselinecomputeDistanceToActualBaseline	protectedSizeBoxConstraintsgetDryLayoutcomputeSizeForNoChildsizelayoutconstraintsparentUsesSizesmallestboolBoxHitTestResultOffsethitTestpositionMatrix4PaintingContext
paintChilddeferToChildcontainshitTestChildrentranslucentaddBoxHitTestEntryopaqueDiagnosticPropertiesBuilderdebugFillPropertiesEnumPropertydefaultValuedebugAssertIsValidmarkNeedsLayouthasBoundedWidthhasTightWidthminWidthcomputeMinIntrinsicWidthisFinitehasInfiniteWidthconstrainWidthcomputeMaxIntrinsicWidthhasBoundedHeighthasTightHeight	minHeightcomputeMinIntrinsicHeighthasInfiniteHeightconstrainHeightcomputeMaxIntrinsicHeightenforce	constrainzerodebugPaintSizePaintisEmptycolorcanvasdrawRectDiagnosticsPropertymaxWidth	maxHeightinfinityChildLayouterlayoutChildChildLayoutHelperdryLayoutChildDoublePropertyFlutterErrorruntimeTypeisTighttightAlignRowCrossAxisAlignmentstretchceiltightenwidthheightColumngetAlphaFromOpacityintmarkNeedsCompositingBitsUpdatemarkNeedsCompositedLayerUpdatemarkNeedsSemanticsUpdateparentOffsetLayerOpacityLayeroldLayeralphapaintRenderObjectVisitorFlagPropertyvalueifTrueRenderSliverAnimatedOpacityRenderSliver_currentlyIsRepaintBoundary_alpha	Animation_opacityattachedopacityremoveListener_updateOpacityaddListener_alwaysIncludeSemanticsPipelineOwnerattachdetachalwaysIncludeSemanticsShaderRect
ShaderMasklinear	BlendModemodulateShaderMaskLayerlayermarkNeedsPaintneedsCompositingshadermaskRect	blendMode	pushLayerdebugCreatorsrcOverBackdropFilterLayerblurfilterClipRectClipPath	ClipRRectClipOvalShapeBorder
ListenablereclipVoidCallbackStringobjectRuntimeTypePathTextDirectiongetOuterPathtextDirectionshapeClip	antiAliasshouldRecliphasSizeperformLayoutgetClipnonehardEdgeantiAliasWithSaveLayergetApproximateClipRectTextPainterTileModerepeatedstrokeWidthstylePaintingStylestroketextTextSpan	TextStylefontSizertldisposeclipperclipBehavior_clipper_updateClip_clippushClipRectClipRectLayershift_debugPaint
_debugTextRRectBorderRadiusBorderRadiusGeometry_markNeedsClipresolvetoRRectpushClipRRect	outerRectClipRRectLayer	drawRRect	tlRadiusXaddOvalcenterdxdydistanceSquaredpushClipPathClipPathLayerdrawPathaddRectdebugDisableShadowsalwaysNeedsCompositingSemanticsConfigurationdescribeSemanticsConfiguration	elevationColorPropertyBoxShape	rectanglecircle
fromRectXYaddRRectshadowColorCanvas
drawShadow	drawPaint
DecorationImageConfiguration
backgroundempty
BoxPainterBoxDecorationImageProvidercreateBoxPaintercopyWithgetSaveCount	fromPartsDiagnosticsNodeErrorSummaryErrorDescriptionDiagnosticsTreeStyleerrorProperty	isComplexsetIsComplexHint
foregroundtoDiagnosticsNodenameAlignmentGeometryFilterQuality	transform	alignmentfilterQualityoriginAlignmentDirectionalcenterStart	Alignmentxltr	centerEndlocalToGlobalglobalToLocalcopysetIdentityrotateXrotateYrotateZ	translateyzscaleidentity	alongSizemultiplyaddWithPaintTransformMatrixUtilsgetAsTranslationdeterminantpushTransformTransformLayertranslationValuesmatrixstorageImageFilterLayerimageFilterTransformPropertyBoxFitcontain	scaleDowncoverfill	fitHeightfitWidthdebugCheckingIntrinsicsdebugCannotComputeDryLayoutreasonloosensizeConstraints,constrainSizeAndAttemptToPreserveAspectRatiounconstrainedSizeFittedSizesapplyBoxFitdestinationsourceinscribelefttopeverysetZerodebugNeedsLayoutaddWithPaintOffsetoffsetListenerPointerPanZoomStartEventPointerPanZoomUpdateEventPointerPanZoomEndEventPointerSignalEventbehaviorPointerHoverEventListenerbiggestHitTestEntrydebugHandleEventcallPointerHoverEventFlagsSummaryFunctionifEmptyMouseRegionMouseTrackerAnnotationMouseCursordeferPointerEnterEventListenerPointerExitEventListenerifFalsedebugDumpRenderTree
pixelRatiodebugNeedsPainttoImageFuturetoImageSyncincludedParentincludedChildMessagePropertyPercentPropertyunittooltipmessage
DeprecatedSemanticsNodevisitChildrenForSemanticsisBlockingUserActionsdescription%markNeedsLayoutForSizedByParentChangecomputeDryLayoutperformResizeListoffstagesparsedynamicGestureTapCallbackGestureLongPressCallbackGestureDragUpdateCallbackSemanticsActiontap
scrollLeftscrollRightSet	setEqualsonTap	longPressonLongPressonScrollRightonScrollLeftscrollUp
onScrollUp
scrollDownonScrollDownDragUpdateDetailsdeltaprimaryDeltaglobalPositionIterablePropertySemanticsPropertiesattributedLabelisSemanticBoundaryExcludeSemantics	SemanticsAttributedStringlabelattributedValueattributedIncreasedValueincreasedValueattributedDecreasedValuedecreasedValueattributedHinthintexplicitChildNodesscopesRoutetoggledcheckedenabled	isEnabled	isCheckedmixedisCheckStateMixed	isToggledselected
isSelectedbuttonisButtonexpanded
isExpandedlinkisLinksliderisSliderkeyboardKeyisKeyboardKeyheaderisHeader	textFieldisTextFieldreadOnly
isReadOnly	focusableisFocusablefocused	isFocusedinMutuallyExclusiveGroupisInMutuallyExclusiveGroupobscured
isObscured	multilineisMultilinehiddenisHiddenimageisImage
identifierhintOverrides
isNotEmpty
namesRoute
liveRegionmaxValueLengthcurrentValueLengthsortKeytagForChildrenaddTagForChildren	onDismiss
onIncrease
onDecreaseonCopyonCutonPasteonMoveCursorForwardByCharacteronMoveCursorBackwardByCharacteronMoveCursorForwardByWordonMoveCursorBackwardByWordonSetSelection	onSetTextonDidGainAccessibilityFocusonDidLoseAccessibilityFocuscustomSemanticsActionsTextSelection+isBlockingSemanticsOfPreviouslyPaintedNodesisMergingSemanticsOfDescendants
ScrollViewscrollIndexCustomScrollViewindexInParentCompositedTransformTargetLeaderLayer	LayerLink
leaderSizeCompositedTransformFollowerFollowerLayertopLeft
bottomLeftgetLastTransformleadershowWhenUnlinkedlinkedOffsetunlinkedOffsetchildPaintBoundsfromLTRBnegativeInfinityAnnotatedRegionLayerLayerfindObjectLayerHandle	RenderBoxRenderObjectWithChildMixinRenderProxyBoxMixinRenderProxyBoxRenderAnimatedOpacityMixin
ListenableCustomClipper_RenderCustomClip_RenderPhysicalModelBase!RenderProxyBoxWithHitTestBehaviorMouseTrackerAnnotation´Sê÷…Ä˜∑ïì, Stî^ Ç7ÇöPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEvent Çpackage:flutter/gestures.dartÄºÄ‰ColorGradientImageImageFilter Ä¶  Ä∂uiÄπdart:ui  ÄË  package:flutter/animation.dart  Å  package:flutter/foundation.dart  Å;  package:flutter/gestures.dart  Åc  package:flutter/semantics.dart  Åå  package:flutter/services.dart  Åµ  box.dart  Å»  
layer.dart  Å›  layout_helper.dart  Å˙  object.dart    	dart:core¿U" ¿Ç≠ì¡ <ÄÜÄ§Ä•ÄÊÄÁÅÅ:ÅbÅãÅ≥Å¥Å«Å‹Å˘ÇÇÇ<ÇRÇfÇvÇäÇúÇùÇ›Ç·É*ÉxÉ«ÑÑÑ^ÑØÑ˛ÖÖÖ$Ö(ÖxÖâÖ˝ÜÜ%ÜmÜ∫ÜÃÜÛááááá:á>á{á∆àààeàïàßâââ=âââ¨â◊â˛äää	ääHääÉäÑäêä√ä˙ä˛äˇãã>ãuãyãzãÜãπããÙãıååDå|å∏åºåΩå…å÷ççiçmçnçzçìçÿéééééaé•é‡èèèèèbè¢è¶èßè≥è˘è˙êê=êfêêçêìê∫êæê¿ê¡êÂê¸ëJëÜëñëóë‚í1íNíXíYí¶í·ííÚíÛì2ìLìñì…ìœîî9îkîÅîñîóîËï+ï1ïcïiï∞ïÃïÕïŸñ!ñ=ñ`ñ∏ñ˙ó/ó7ó=óSóWóXódóØó∞óºòò,òâòçòèòêò¡ò≈ôô]ô≠ô∫ôæööWötö®öﬁö‰õõ7õMõÄõªõÚúúúHúéú∑úÎùù>ùLùRùvùçùëùíùûù—û+ûYû_û†ûºûü+ü1üCüGüHüTüáü·†††V†r†¶†·†Á†˘†˝†˛°
°=°ô°»°Œ¢¢-¢b¢ü¢•¢∏¢º¢Ω¢…¢¸£X£á£ç£œ£Ï§!§^§d§w§{§|§à§°§⁄§Û•K•e•r•¡•«•À•Ã•ÿ•Â¶%¶>¶ç¶ö¶È¶Ô¶Û¶Ùß ß@ßkß{ßîß∆ßﬁ®®B®J®]®g®k®l®x®Ω®Ë©Q©U©W©X©ë©‘©ÿ™%™p™ª´
´#´'´r´∏´»´¯¨I¨~¨Ñ¨À¨ﬂ¨Ù≠
≠1≠Y≠y≠ö≠∑≠÷≠Î≠ÏÆAÆeÆyÆòÆ≤Æ–ÆﬁÆ‰Æ˚ØØØØnØîØ©Ø…Ø„∞∞∞∞.∞E∞I∞J∞ã∞¶∞Ã±7±_±œ±÷±⁄±€≤=≤V≤®≤◊≤›≥≥!≥"≥.≥;≥{≥î≥¥≥È≥≥Ù≥ı¥¥¥3¥S¥Ö¥å¥ê¥ë¥ù¥‚µµfµ¡µ≈µ«µ»∂∂∂S∂¢∂∂Ù∑<∑å∑ƒ∑»∏∏c∏≤∏˘∏˝πIπöπÎ∫9∫á∫’ª#ªqªæººDºuº≤º∏º˚ΩΩ'ΩHΩjΩèΩ≤Ω«Ω»ΩÚΩ¯æHæèæπæ–æÚøø'øHøVø\øvøçøëøíøûø—øÏ¿ @¿ @¿ @/¿ @a¿ @g¿ @w¿ @{¿ @|¿ @à¿ @ª¿ @÷¿ @˙¿ A ¿ A¿ AK¿ AQ¿ Aa¿ Ae¿ Af¿ Ar¿ A•¿ Aø¿ A‚¿ AË¿ B¿ B3¿ B9¿ BI¿ BM¿ BN¿ BZ¿ Bç¿ Bß¿ B ¿ B–¿ BÈ¿ C¿ C!¿ C1¿ C5¿ C6¿ Cm¿ Cõ¿ C´¿ Cˆ¿ D¿ DH¿ Dü¿ D¿ EB¿ E`¿ Ek¿ Es¿ EÜ¿ Eê¿ Eë¿ E∞¿ E”¿ EŸ¿ E⁄¿ F¿ F¿ F¿ Fd¿ F∞¿ F«¿ F·¿ G¿ G¿ G9¿ G^¿ Gd¿ Ge¿ G≥¿ G˝¿ HI¿ H`¿ Ha¿ Hâ¿ H≠¿ H“¿ Hÿ¿ HŸ¿ I¿ I)¿ IN¿ IT¿ IU¿ I}¿ I°¿ I∆¿ IÃ¿ IÕ¿ I˜¿ J¿ JB¿ JH¿ JI¿ JÄ¿ JÑ¿ JÖ¿ Jë¿ Jû¿ Jﬁ¿ K	¿ K¿ K¿ K¿ K3¿ K]¿ Kv¿ Kß¿ K≠¿ K±¿ K≤¿ Kæ¿ L¿ L.¿ Ln¿ Lr¿ Lt¿ Lu¿ L±¿ Lµ¿ M¿ MR¿ MÜ¿ Mä¿ M÷¿ N&¿ Nr¿ Nº¿ O	¿ O1¿ O5¿ OÖ¿ O—¿ P¿ P¿ P`¿ PÆ¿ P˝¿ Q¿ Q¿ Q&¿ Q*¿ Qy¿ Q¿¿ R¿ R!¿ Rm¿ R∞¿ R˝¿ S1¿ Se¿ Sµ¿ Sª¿ T¿ T,¿ TE¿ T\¿ Tt¿ Tä¿ Tø¿ Tˆ¿ U¿ U6¿ UK¿ UL¿ Uó¿ Uù¿ U≈¿ UÏ¿ V¿ V#¿ VM¿ Vl¿ Vz¿ VÄ¿ Vò¿ VØ¿ V≥¿ V¥¿ W ¿ W¿ W.¿ WW¿ Wn¿ Wê¿ W∫¿ W⁄¿ WË¿ WÓ¿ X¿ X¿ X"¿ X#¿ X\¿ Xx¿ Xê¿ X§¿ X™¿ X”¿ X◊¿ Xÿ¿ X‰¿ Y¿ YD¿ YH¿ YI¿ YU¿ Yà¿ Y°¿ Y≥¿ Yπ¿ Y˜¿ Z!¿ Z%¿ Z&¿ Z2¿ Ze¿ Z~¿ Zê¿ Zñ¿ Z±¿ ZÍ¿ Z¿ [¿ [K¿ [w¿ [{¿ [|¿ [à¿ [ª¿ [‘¿ [Ê¿ [Ï¿ \¿ \@¿ \F¿ \b¿ \°¿ \Õ¿ \—¿ \“¿ ]3¿ ]L¿ ]t¿ ]≈¿ ]Â¿ ^6¿ ^>¿ ^_¿ ^±¿ ^“¿ _&¿ _.¿ _]¿ _j¿ _ç¿ _ì¿ _ó¿ _ò¿ _§¿ _±¿ _Ò¿ `
¿ `?¿ `_¿ `f¿ `j¿ `k¿ `w¿ `ê¿ `©¿ `€¿ `˚¿ a¿ a¿ a¿ a¿ aX¿ aÉ¿ aø¿ a˝¿ b¿ b¿ b¿ b9¿ b=¿ bã¿ b€¿ c¿ c¿ c`¿ c∞¿ c˛¿ dI¿ dó¿ d¿¿ dƒ¿ e¿ e_¿ eÆ¿ e≈¿ e…¿ e◊¿ e€¿ f*¿ fr¿ f¡¿ f‘¿ g#¿ gg¿ g∂¿ gÎ¿ h ¿ hq¿ hã¿ h°¿ h∂¿ h∑¿ h√¿ hˆ¿ i¿ i!¿ i'¿ iC¿ iÅ¿ iá¿ i§¿ i‘¿ iÿ¿ iŸ¿ iÂ¿ j¿ j1¿ jC¿ jI¿ je¿ j£¿ j©¿ j∆¿ jˆ¿ j˙¿ j˚¿ k¿ k:¿ kg¿ kk¿ kl¿ kÕ¿ kÊ¿ l¿ la¿ lÇ¿ lΩ¿ l≈¿ lÙ¿ m¿ m$¿ m*¿ m.¿ m/¿ m;¿ mH¿ mà¿ m°¿ m÷¿ mˆ¿ m˝¿ n¿ n¿ n¿ n'¿ n@¿ nr¿ ní¿ nô¿ nù¿ nü¿ n†¿ n·¿ o¿ ox¿ oë¿ oß¿ oº¿ oΩ¿ o…¿ p¿ p¿ p!¿ p#¿ p$¿ pO¿ pS¿ p£¿ pÿ¿ p‹¿ q'¿ qq¿ qπ¿ r	¿ r6¿ rk¿ rq¿ r∂¿ r»¿ r‚¿ s¿ s!¿ sR¿ sm¿ s¶¿ s›¿ sÚ¿ sÛ¿ sˇ¿ tA¿ tB¿ tN¿ tÜ¿ tá¿ tï¿ tñ¿ tÀ¿ t—¿ u!¿ u:¿ u@¿ uÑ¿ uÀ¿ u‹¿ u˛¿ v¿ v/¿ vY¿ vv¿ vÑ¿ vä¿ v∆¿ vÔ¿ w¿ w:¿ wr¿ wö¿ w†¿ w∆¿ x¿ x*¿ x0¿ x4¿ x5¿ x{¿ xÅ¿ xø¿ x≈¿ xﬁ¿ y¿ y<¿ yg¿ yì¿ y°¿ yß¿ yÃ¿ yÏ¿ y¿ yÒ¿ y˝¿ z#¿ zE¿ z\¿ z`¿ za¿ zm¿ z¿¿ z˚¿ {¿ {'¿ {+¿ {,¿ {8¿ {o¿ {ó¿ {•¿ {´¿ {Õ¿ {—¿ {“¿ {ﬁ¿ |¿ |b¿ |y¿ |¿ |É¿ |Ñ¿ |ê¿ |’¿ } ¿ }8¿ }µ¿ }π¿ }ª¿ }º¿ ~¿ ~¿ ~`¿ ~µ¿ ~˜¿ S¿ b¿ c¿ o¿ æ¿ „¿ ‰¿ ¿ ÄC¿ ÄÖ¿ Ä¶¿ Äø¿ Ä√¿ Äƒ¿ Å¿ Å¿ ÅX¿ Åq¿ Åw¿ Å¿¿ ÅË¿ ÅÓ¿ Ç>¿ ÇÖ¿ Ç≥¿ Ç“¿ Ç˚¿ É¿ É&¿ É,¿ ÉT¿ ÉÇ¿ Éà¿ Éû¿ É≤¿ É›¿ É„¿ É˘¿ É˝¿ É˛¿ ÑD¿ ÑJ¿ Ñà¿ Ñé¿ Ñß¿ Ñ≠¿ Ñ˝¿ ÖD¿ ÖÉ¿ Ö§¿ Öœ¿ Ö˚¿ Ü	¿ Ü¿ Ü4¿ ÜT¿ ÜX¿ ÜY¿ Üe¿ Üä¿ Ü£¿ ÜÃ¿ á¿ á¿ á¿ á$¿ á6¿ áb¿ áv¿ áz¿ á{¿ áï¿ á∑¿ áÒ¿ à¿ àS¿ àÑ¿ à‘¿ à˛¿ â¿ â.¿ âX¿ â|¿ âÑ¿ âä¿ âé¿ âè¿ âõ¿ âƒ¿ âÊ¿ ä¿ ä¿ ä	¿ ä¿ äL¿ äc¿ äq¿ äw¿ äô¿ äù¿ äû¿ ä™¿ äÍ¿ ã.¿ ãE¿ ãK¿ ãO¿ ãP¿ ã\¿ ã°¿ ãÃ¿ å¿ åô¿ åù¿ åü¿ å†¿ åÁ¿ åÎ¿ ç<¿ çh¿ ç»¿ ç˝¿ é¿ é?¿ éh¿ é~¿ éî¿ é∞¿ éÍ¿ éÓ¿ é¿ éÒ¿ è:¿ è>¿ èz¿ è±¿ è≤¿ èÎ¿ èÔ¿ ê>¿ ês¿ ê£¿ ê˚¿ ë¿ ë&¿ ëR¿ ëÄ¿ ë©¿ ë»¿ ë›¿ ëﬁ¿ ëÍ¿ í+¿ í,¿ íj¿ íp¿ íø¿ ì¿ ì¿ ìN¿ ìh¿ ì∂¿ ìÓ¿ î&¿ îH¿ îu¿ îô¿ îß¿ î≠¿ î ¿ î‡¿ î‰¿ îÂ¿ ï)¿ ï/¿ ï~¿ ï…¿ ïÚ¿ ñ
¿ ñ-¿ ñL¿ ñZ¿ ñ`¿ ñx¿ ñé¿ ñí¿ ñì¿ ñü¿ ñ”¿ ñ‘¿ ñ‡¿ ó¿ ó0¿ óP¿ ós¿ óÄ¿ ó∑¿ ó⁄¿ ó¸¿ ò2¿ òD¿ òp¿ òÖ¿ òë¿ òû¿ ò≤¿ ò∏¿ òº¿ òæ¿ òø¿ ô¿ ô¿ ôa¿ ôu¿ ô©¿ ô ¿ ôœ¿ ö¿ öÖ¿ öù¿ öª¿ öœ¿ ö–¿ ö‹¿ õ%¿ õ&¿ õv¿ õá¿ õç¿ õ⁄¿ õÌ¿ ú¿ ú/¿ úT¿ úp¿ ú~¿ úÑ¿ úô¿ úØ¿ ú≥¿ ú¥¿ ù¿ ù¿ ù"¿ ùZ¿ ùÉ¿ ùõ¿ ùæ¿ ù›¿ ùÎ¿ ùÒ¿ û	¿ û¿ û#¿ û$¿ û0¿ ûd¿ ûe¿ ûq¿ û®¿ û¡¿ û·¿ ü¿ ü'¿ üL¿ üÇ¿ üî¿ ü¿¿ ü’¿ ü·¿ üÓ¿ †¿ †¿ †¿ †¿ †¿ †<¿ †@¿ †â¿ †ö¿ †û¿ †Ô¿ †Û¿ °<¿ °à¿ °ô¿ °ù¿ °Ë¿ ¢6¿ ¢á¿ ¢◊¿ ¢€¿ ¢È¿ ¢Ì¿ £6¿ £Å¿ £ ¿ §¿ §b¿ §ó¿ §∑¿ §Ω¿ •¿ •P¿ •Q¿ •n¿ •o¿ •≤¿ •∏¿ ¶¿ ¶W¿ ¶n¿ ¶z¿ ¶«¿ ¶»¿ ß¿ ßI¿ ßO¿ ßû¿ ßÓ¿ ®¿ ®¿ ®d¿ ®e¿ ®∞¿ ®‘¿ ®Ï¿ ®Ì¿ ©2¿ ©u¿ ©©¿ ©Ø¿ ©Û¿ ™:¿ ™}¿ ™ƒ¿ ´¿ ´¿ ´R¿ ´£¿ ´Ù¿ ¨E¿ ¨K¿ ¨ì¿ ¨‚¿ ¨Ô¿ ¨ı¿ ≠C¿ ≠O¿ ≠U¿ ≠õ¿ ≠Á¿ Æ¿ ÆW¿ ÆX¿ Æd¿ Æ•¿ Æß¿ Æ®¿ ÆÔ¿ Ø&¿ ØM¿ ØS¿ Øõ¿ ØÍ¿ ∞7¿ ∞z¿ ∞ó¿ ∞∞¿ ∞»¿ ∞Œ¿ ∞œ¿ ±¿ ±)¿ ±*¿ ±r¿ ±x¿ ±√¿ ±Í¿ ≤¿ ≤¿ ≤F¿ ≤R¿ ≤n¿ ≤ø¿ ≤√¿ ≤ƒ¿ ≤–¿ ≥¿ ≥>¿ ≥Q¿ ≥W¿ ≥®¿ ≥“¿ ¥¿ ¥¿ ¥¿ ¥¿ ¥Q¿ ¥g¿ ¥}¿ ¥ú¿ ¥ƒ¿ ¥ﬂ¿ µ¿ µ¿ µ¿ µX¿ µÖ¿ µ£¿ µ—¿ µÛ¿ ∂¿ ∂¿ ∂:¿ ∂U¿ ∂ã¿ ∂ø¿ ∂˚¿ ∑*¿ ∑B¿ ∑H¿ ∑\¿ ∑é¿ ∑Ω¿ ∑√¿ ∑«¿ ∑»¿ ∑‘¿ ∑˘¿ ∏¿ ∏=¿ ∏A¿ ∏B¿ ∏N¿ ∏`¿ ∏é¿ ∏¢¿ ∏¶¿ ∏ß¿ ∏¡¿ ∏”¿ ∏È¿ π	¿ π¿ π¿ π$¿ π0¿ π1¿ π[¿ π|¿ πû¿ πª¿ π”¿ πŸ¿ π›¿ πÛ¿ πÙ¿ ∫ ¿ ∫¿ ∫J¿ ∫e¿ ∫Ä¿ ∫î¿ ∫ö¿ ∫û¿ ∫ü¿ ∫∂¿ ∫Ì¿ ∫Ò¿ ∫Ú¿ ∫˛¿ ª9¿ ªU¿ ªk¿ ªÄ¿ ªö¿ ªµ¿ ª›¿ º*¿ º0¿ º4¿ º5¿ ºK¿ ºf¿ ºr¿ º≤¿ º¬¿ º‡¿ Ω¿ Ω¿ ΩB¿ Ωπ¿ ΩÂ¿ æ¿ æ¿ æ(¿ æP¿ ær¿ æê¿ æ•¿ æ¡¿ æÁ¿ ø¿ ø¿ ø!¿ øs¿ ø}¿ øë¿ ø§¿ øÆ¿ ø≤¿ ø≥¿ øø¿ ø“¿ øÌ¿ ¿¿ ¿¿ ¿¿ ¿¿ ¿ ¿ ¿G¿ ¿K¿ ¿ô¿ ¿Í¿ ¡ ¿ ¡7¿ ¡Y¿ ¡_¿ ¡Ø¿ ¡¿¿ ¡∆¿ ¬¿ ¬¿ ¬/¿ ¬B¿ ¬Z¿ ¬`¿ ¬a¿ ¬m¿ ¬ú¿ ¬ù¿ ¬©¿ ¬Ò¿ √¿ √"¿ √?¿ √g¿ √}¿ √Ö¿ √ã¿ √¡¿ √≈¿ √∆¿ √“¿ ƒ	¿ ƒ"¿ ƒI¿ ƒ`¿ ƒÜ¿ ƒ¢¿ ƒ¥¿ ƒ∆¿ ƒ›¿ ≈¿ ≈0¿ ≈;¿ ≈J¿ ≈v¿ ≈å¿ ≈î¿ ≈°¿ ≈µ¿ ≈ª¿ ≈ø¿ ≈¿¿ ≈Ã¿ ∆¿ ∆¿ ∆7¿ ∆f¿ ∆è¿ ∆÷¿ «S¿ «]¿ «e¿ «x¿ «Ç¿ «Ü¿ «à¿ «â¿ «∏¿ «º¿ »¿ »Z¿ »p¿ »©¿ »”¿ »Ÿ¿ …)¿ …E¿ …K¿ …ã¿ …ë¿ …÷¿ …Í¿ …˚¿  6¿  I¿  a¿  É¿  ®¿  œ¿  –¿ À ¿ À¿ ÀQ¿ Àl¿ Àr¿ À®¿ À‚¿ Ã¿ Ã9¿ Ã[¿ Ãi¿ Ão¿ Ãä¿ Ã†¿ Ã§¿ Ã•¿ Ã‰¿ Õ¿ Õ;¿ Õg¿ Õä¿ Õò¿ Õû¿ Õ∫¿ Õ–¿ Õ‘¿ Õ’¿ Õ·¿ Œ?¿ Œ@¿ ŒL¿ Œî¿ Œ∞¿ Œ≈¿ Œ‚¿ œ
¿ œ ¿ œ(¿ œ.¿ œd¿ œh¿ œi¿ œu¿ œ¨¿ œ≈¿ œÏ¿ –¿ –*¿ –F¿ –X¿ –t¿ –Ü¿ –ù¿ –√¿ –Ò¿ –¸¿ —¿ —7¿ —M¿ —U¿ —b¿ —v¿ —|¿ —Ä¿ —Å¿ —ç¿ —Õ¿ —›¿ —¯¿ “'¿ “P¿ “ò¿ ”¿ ”¿ ”%¿ ”8¿ ”B¿ ”F¿ ”H¿ ”I¿ ”l¿ ”p¿ ”æ¿ ‘¿ ‘Q¿ ‘à¿ ‘´¿ ‘±¿ ’¿ ’¿ ’$¿ ’i¿ ’|¿ ’ç¿ ’†¿ ’∏¿ ’æ¿ ’ø¿ ’‘¿ ’Ì¿ ’Ó¿ ÷¿ ÷.¿ ÷H¿ ÷{¿ ÷Å¿ ÷ô¿ ÷ù¿ ÷û¿ ÷™¿ ÷Ÿ¿ ÷⁄¿ ÷Ê¿ ◊.¿ ◊A¿ ◊\¿ ◊Ö¿ ◊—¿ ◊Û¿ ÿ#¿ ÿT¿ ÿ[¿ ÿê¿ ÿÃ¿ ÿ‡¿ ÿÊ¿ Ÿ¿ Ÿ ¿ Ÿ!¿ Ÿ-¿ Ÿd¿ Ÿ}¿ Ÿ§¿ Ÿª¿ Ÿ·¿ Ÿ˝¿ ⁄¿ ⁄!¿ ⁄A¿ ⁄X¿ ⁄~¿ ⁄´¿ ⁄∂¿ ⁄≈¿ ⁄Ò¿ €¿ €¿ €¿ €0¿ €6¿ €:¿ €;¿ €G¿ €á¿ €ó¿ €≤¿ €·¿ ‹
¿ ‹_¿ ‹Ú¿ ‹¸¿ ›¿ ›¿ ›!¿ ›%¿ ›'¿ ›(¿ ›J¿ ›N¿ ›ì¿ ›‘¿ ›ÿ¿ ﬁ¿ ﬁ4¿ ﬁ8¿ ﬁr¿ ﬁ≤¿ ﬁı¿ ﬂ,¿ ﬂG¿ ﬂM¿ ﬂû¿ ﬂÎ¿ ‡;¿ ‡N¿ ‡T¿ ‡ô¿ ‡¨¿ ‡Ω¿ ‡–¿ ‡Ë¿ ‡Ó¿ ‡Ô¿ ‡˚¿ ·;¿ ·<¿ ·H¿ ·ê¿ ·¨¿ ·¡¿ ·ﬁ¿ ‚¿ ‚¿ ‚$¿ ‚*¿ ‚`¿ ‚d¿ ‚e¿ ‚q¿ ‚®¿ ‚¡¿ ‚Ë¿ ‚ˇ¿ „%¿ „A¿ „S¿ „q¿ „É¿ „ö¿ „¿¿ „Ì¿ „¯¿ ‰¿ ‰3¿ ‰I¿ ‰Q¿ ‰^¿ ‰r¿ ‰x¿ ‰|¿ ‰}¿ ‰â¿ ‰…¿ ‰Ÿ¿ ‰Ù¿ Â#¿ ÂL¿ Âì¿ Â»¿ Â“¿ Â⁄¿ ÂÌ¿ Â˜¿ Â˚¿ Â˝¿ Â˛¿ ÊB¿ ÊF¿ Êó¿ ÊÕ¿ Á¿ ÁM¿ Áj¿ ÁÑ¿ Á£¿ ÁΩ¿ Á›¿ Ë¿ Ë¿ Ë5¿ ËT¿ Ëk¿ Ëé¿ Ëè¿ Ëﬁ¿ Ë‰¿ È¿ È¿ ÈY¿ Èá¿ È≠¿ È¬¿ È‚¿ È¸¿ Í¿ Í(¿ Í.¿ Íj¿ ÍÇ¿ Í∫¿ Í‚¿ ÍË¿ Í˛¿ Î¿ Î¿ Î¿ ÎD¿ ÎZ¿ Î{¿ Îõ¿ Î©¿ ÎØ¿ Î…¿ Îﬂ¿ Î„¿ Î‰¿ Ï ¿ Ï¿ Ï-¿ ÏH¿ Ïb¿ Ïp¿ Ïv¿ Ïä¿ Ï†¿ Ï§¿ Ï•¿ Ï±¿ Ï¯¿ Ì*¿ ÌL¿ ÌP¿ ÌQ¿ Ì]¿ Ì£¿ Ìœ¿ Ó¿ Ó@¿ Óz¿ Ó~¿ ÓÄ¿ ÓÅ¿ Ó∆¿ Ó’¿ ÓŸ¿ Ô¿ Ôa¿ Ôã¿ Ôë¿ Ô∞¿ Ô∂¿ ÔÏ¿ ¿ ¿ >¿ V¿ v¿ ë¿ ´¿ ‹¿ ˝¿ Ò¿ Ò9¿ Ò:¿ ÒX¿ Ò^¿ Ò≠¿ Ò≈¿ ÒÂ¿ Ò¯¿ Ú¿ Ú0¿ Ú>¿ ÚD¿ ÚX¿ Ún¿ Úr¿ Ús¿ Ú£¿ Ú©¿ ÚÙ¿ Û¿ Û¿ Û`¿ Ûf¿ Û†¿ Û”¿ ÛÚ¿ Ù¿ Ù=¿ ÙK¿ ÙQ¿ Ùl¿ ÙÇ¿ ÙÜ¿ Ùá¿ Ùì¿ ÙÆ¿ Ù√¿ ÙÌ¿ ı¿ ı"¿ ıd¿ ıÄ¿ ı»¿ ıŒ¿ ı“¿ ı”¿ ıﬂ¿ ˆ'¿ ˆC¿ ˆX¿ ˆu¿ ˆù¿ ˆ≥¿ ˆª¿ ˆ¡¿ ˆ˜¿ ˆ˚¿ ˆ¸¿ ˜¿ ˜?¿ ˜X¿ ˜l¿ ˜z¿ ˜Ä¿ ˜Å¿ ˜î¿ ˜»¿ ¯
¿ ¯(¿ ¯8¿ ¯Y¿ ¯x¿ ¯ú¿ ¯µ¿ ¯…¿ ¯Ì¿ ˘¿ ˘I¿ ˘V¿ ˘`¿ ˘~¿ ˘Ü¿ ˘ô¿ ˘£¿ ˘§¿ ˘Œ¿ ˘˙¿ ˙¿ ˙.¿ ˙C¿ ˙V¿ ˙s¿ ˙|¿ ˙Ç¿ ˙Œ¿ ˙Ë¿ ˚ ¿ ˚¿ ˚4¿ ˚=¿ ˚C¿ ˚f¿ ˚~¿ ˚å¿ ˚¶¿ ˚¥¿ ˚Â¿ ¸¿ ¸>¿ ¸ç¿ ¸‹¿ ˝ ¿ ˝]¿ ˝g¿ ˝ç¿ ˝ñ¿ ˝¿¿ ˝‚¿ ˝È¿ ˝Í¿ ˝˙¿ ˛$¿ ˛7¿ ˛A¿ ˛E¿ ˛F¿ ˛R¿ ˛ò¿ ˛ƒ¿ ˇ¿ ˇ^¿ ˇb¿ ˇd¿ ˇe¿ ˇ™¿ ˇÆ¿ ˇÚ¿ ˇˆ¿ ¿ ¿ T¿ d¿ ß¿ Œ¿ ‘¿¿¿I¿a¿r¿¢¿∫¿’¿Ô¿ ¿A¿B¿N¿é¿è¿õ¿„¿ˇ¿¿1¿Y¿o¿w¿}¿≥¿∑¿∏¿ƒ¿˚¿¿(¿6¿<¿=¿P¿Ç¿†¿∞¿—¿¿¿+¿?¿c¿ê¿ø¿Ã¿÷¿Ù¿¸¿¿¿¿D¿p¿â¿ù¿≤¿≈¿‚¿Î¿Ò¿=¿W¿n¿Ç¿°¿™¿∞¿“¿Í¿¯¿¿ ¿Q¿n¿™¿˘¿	H¿	å¿	…¿	”¿	˘¿
¿
+¿
M¿
T¿
U¿
e¿
è¿
¢¿
¨¿
∞¿
±¿
Ω¿¿/¿Ç¿Ü¿à¿â¿Æ¿»¿¸¿
¿¿D¿R¿T¿U¿ò¿ ¿È¿Ô¿=¿|¿Ç¿—¿¸¿¿7¿x¿π¿œ¿¿¿4¿I¿J¿b¿c¿É¿â¿´¿◊¿Ò¿¿6¿D¿J¿c¿x¿ë¿ß¿´¿¨¿˜¿'¿G¿r¿ê¿û¿§¿ª¿—¿’¿÷¿!¿e¿¿Ö¿»¿¿H¿m¿ù¿¿¿Œ¿‘¿¿¿
¿¿¿)¿B¿W¿k¿∞¿˘¿E¿ë¿Ã¿‚¿Ê¿Á¿Û¿¿¿4¿8¿9¿E¿k¿«¿À¿Ã¿ÿ¿¿N¿•¿⁄¿ı¿¿?¿T¿`¿§¿∂¿ı¿/¿ó¿µ¿¿q¿Œ¿›¿W¿Ã¿⁄¿‰¿˘¿¿'¿K¿S¿Y¿{¿∞¿Ù¿¿:¿B¿H¿L¿M¿Y¿û¿…¿¿m¿q¿s¿t¿¨¿€¿¿(¿H¿\¿~¿†¿√¿Â¿˚¿ ¿ 1¿ Q¿ y¿ °¿ ª¿ ø¿ ¿¿!¿!H¿!N¿!ù¿!‡¿"¿"¿"2¿"N¿"\¿"b¿"w¿"ç¿"≠¿"±¿"≤¿"ˆ¿"¸¿#H¿#í¿#ò¿#Ë¿$(¿$x¿$«¿%¿%W¿%â¿%™¿%÷¿%ı¿&¿&	¿&!¿&7¿&W¿&[¿&\¿&ò¿&û¿&Ì¿'%¿'[¿'|¿'®¿'À¿'Ÿ¿'ﬂ¿'˚¿(¿(1¿(5¿(6¿(B¿(ê¿(ë¿(ﬁ¿)'¿)J¿)P¿)†¿)Ò¿*¿*¿*#¿*r¿*ë¿*ó¿*„¿+2¿+W¿+°¿+¿¿+Œ¿+‘¿+˙¿,¿,0¿,4¿,5¿,á¿,ç¿,Õ¿-¿-$¿-P¿-s¿-Å¿-á¿-√¿-ﬂ¿.¿.?¿.E¿.[¿._¿.`¿.ë¿.®¿.«¿.›¿.˝¿/¿/¿/E¿/f¿/à¿/û¿/æ¿/¬¿/√¿0¿0'¿0I¿0_¿0¿0É¿0Ñ¿0«¿0Ë¿1
¿1 ¿1@¿1D¿1E¿1á¿1»¿1Ï¿2¿2"¿2&¿2'¿2V¿2â¿2©¿2ø¿2ﬂ¿2„¿2‰¿3	¿3U¿3ç¿3¶¿3¨¿3€¿3ˆ¿4(¿4.¿4G¿4l¿4£¿4€¿4·¿5¿5(¿5c¿5i¿5Ñ¿5∏¿5æ¿5—¿5’¿5÷¿5‚¿6*¿6a¿6û¿6‹¿6ˆ¿7.¿72¿73¿7?¿7è¿7Œ¿7˜¿88¿8R¿8é¿8–¿8Ÿ¿8‡¿8‰¿8Â¿8Ò¿9(¿9A¿9w¿9ö¿9Á¿:
¿:_¿:£¿:Ÿ¿;¿;¿;2¿;>¿;g¿;Ö¿;ô¿;∞¿;…¿<¿<'¿<8¿<n¿<Ü¿<ê¿<ü¿<ˇ¿=C¿=Ä¿=¶¿=œ¿=⁄¿>¿>N¿>z¿>ã¿>ƒ¿>Œ¿?¿?¿?H¿?_¿?m¿?u¿?{¿?¿?Ä¿?å¿?Õ¿?˚¿?ˇ¿@ ¿@¿@Q¿@|¿@√¿A¿AZ¿Aø¿B¿B¿B¿B¿Bb¿Bë¿B≈¿BŸ¿B˙¿C.¿CP¿Cf¿Câ¿Cú¿Cª¿C‚¿D¿D¿D¿D>¿D?¿DS¿Dy¿Dá¿Dç¿D»¿DÃ¿DÕ¿DÏ¿E¿E!¿E%¿E&¿EM¿E`¿E}¿Eí¿E≠¿E∆¿Eﬁ¿E˚¿F¿F/¿FE¿FK¿FO¿FP¿Fò¿F≤¿F¡¿F€¿FÙ¿G¿G¿G)¿G;¿G}¿Gñ¿G£¿Gº¿G‘¿G⁄¿Gﬁ¿Gﬂ¿H¿H¿Hn¿Hø¿HÔ¿Hı¿I4¿I\¿Iç¿I≠¿Iÿ¿I˜¿J¿J¿J#¿J:¿JU¿JY¿JZ¿Jñ¿Jú¿JÎ¿K#¿KY¿Kz¿K¶¿K…¿K◊¿K›¿K˘¿L¿L+¿L/¿L0¿Lq¿Lr¿L~¿Lã¿LÀ¿L‰¿M.¿M/¿M{¿M…¿N¿N6¿N[¿Nm¿NŒ¿NÒ¿N˚¿O¿O¿O:¿Of¿O¶¿O≤¿OÃ¿O‘¿O’¿OÍ¿P	¿PP¿P¬¿P˝¿Q¿Q5¿QO¿Qn¿Qå¿Q¶¿Q¸¿R¿R¿R4¿R:¿R>¿R?¿RK¿Rd¿R}¿R¿¿R’¿RÙ¿S;¿SØ¿SÍ¿T¿T"¿T<¿T[¿Ty¿Tì¿TÎ¿TÛ¿U¿U¿U<¿UB¿UF¿UG¿Uc¿Uz¿U{¿U±¿U∑¿U÷¿V ¿V"¿VC¿Ve¿VÇ¿Vö¿Vº¿V¬¿V∆¿V«¿V‚¿W¿W¿W¿W¿W9¿WW¿We¿Wk¿Wl¿WÖ¿Wß¿WŒ¿W€¿WÌ¿X¿X[¿X•¿XÒ¿YT¿Yº¿Z#¿ZU¿Z≤¿Z◊¿[¿[Z¿[`¿[d¿[e¿[∫¿\¿\$¿\H¿\b¿\r¿\á¿\ú¿\È¿\Ú¿\ˇ¿]1¿]7¿]H¿]L¿]M¿]Y¿]ê¿]–¿]ﬁ¿]‰¿]¸¿^¿^S¿^w¿^ë¿^°¿^Ω¿^ﬂ¿_*¿_N¿_W¿_d¿_ù¿_£¿_ß¿_®¿_¥¿`¿`>¿`R¿`X¿`p¿`ô¿`∂¿`–¿a¿aN¿aW¿a^¿ab¿ac¿ao¿aï¿a∑¿aË¿aÏ¿aÌ¿a˘¿b:¿bY¿bt¿bÅ¿bõ¿b¬¿b»¿bÃ¿bÕ¿bŸ¿c¿cI¿c¿c”¿d8¿d<¿d>¿d?¿dÉ¿dá¿d◊¿e ¿eW¿e[¿eò¿eÂ¿e¯¿f3¿fw¿fó¿f∏¿f€¿fÒ¿g¿g)¿g*¿gs¿gy¿g»¿h¿h+¿hB¿hd¿hÖ¿hì¿hô¿h≥¿h…¿hÈ¿hÌ¿hÓ¿h˙¿iB¿iÖ¿i¬¿j ¿j¿jR¿jV¿jW¿j§¿jÌ¿k¿k¿kf¿k∑¿k—¿k“¿kﬁ¿l.¿lM¿ls¿lì¿l·¿lÛ¿m¿mI¿mã¿mî¿mõ¿mü¿m†¿m¨¿m„¿n¿n¿n>¿no¿n°¿n´¿n±¿nµ¿n∂¿n¬¿o¿o¿o?¿oc¿oj¿on¿oo¿o{¿o¿¿oÎ¿p8¿pè¿pì¿pï¿pñ¿p–¿p‘¿q¿qR¿qS¿qç¿që¿q≈¿r¿r¿rH¿rL¿rÄ¿r∆¿r«¿s¿s¿s;¿sâ¿sä¿sÃ¿s–¿t¿t^¿t_¿t¢¿t¶¿t⁄¿u6¿u7¿uw¿u{¿uØ¿v¿v¿vB¿vF¿vz¿v»¿v…¿w¿w¿wO¿wõ¿wü¿wÔ¿x5¿x`¿xd¿x§¿x®¿x˜¿y?¿yà¿yé¿yÿ¿yÚ¿z
¿z"¿z8¿zQ¿zk¿zã¿z¨¿z ¿z‰¿z¯¿{	¿{¿{¿{Z¿{´¿{ª¿{Ê¿{Á¿|7¿|b¿|c¿|±¿|–¿|˜¿|¯¿}F¿}s¿}t¿}ƒ¿}Ù¿~#¿~$¿~i¿~§¿~•¿~Œ¿¿¿3¿j¿k¿ß¿÷¿◊¿„¿Ä¿Ä>¿ÄB¿ÄC¿ÄO¿Äå¿Ä∏¿Ä›¿Å¿Å¿Å1¿ÅZ¿Å`¿ÅÉ¿Å™¿Å∞¿Å÷¿Ç ¿Ç¿Ç-¿ÇX¿Ç^¿Çã¿Çº¿Ç¬¿Ç¿É"¿É(¿ÉS¿ÉÇ¿Éà¿ÉØ¿É⁄¿É‡¿É‰¿ÉÂ¿ÉÒ¿Ñ6¿Ña¿Ñç¿Ñ†¿Ñª¿Ñ⁄¿Ñ˘¿Ö¿Ö5¿ÖX¿Öá¿Ö∏¿Ö„¿Ü¿Ü¿Ü(¿Ü0¿Ü4¿Ü6¿Ü7¿ÜÖ¿Üâ¿Ü’¿á"¿á@¿áD¿áì¿á„¿à¿à¿àK¿àO¿à°¿à•¿à≥¿à∑¿à˘¿â¿â{¿âƒ¿â ¿ä¿äa¿äw¿äâ¿äõ¿ä¨¿äÿ¿ä˛¿ã¿ã'¿ãf¿ã¿ã¥¿ãÕ¿å¿å¿å¿åe¿å¶¿å™¿å´¿å∑¿åÙ¿ç ¿çY¿çw¿ç}¿çÅ¿çÇ¿ç”¿é$¿é?¿éE¿éé¿é÷¿è¿èY¿è_¿è∞¿è˚¿ê ¿ê&¿êC¿êa¿êq¿êå¿ê®¿êø¿ë¿ë$¿ë*¿ë.¿ë/¿ëW¿ë]¿ëñ¿ë ¿ë˙¿í@¿í`¿í{¿í»¿í‡¿íÊ¿íÍ¿íÎ¿í˜¿ì¿ì¿ìi¿ìÄ¿ìÜ¿ì ¿ì¿ìÒ¿ì˝¿î!¿î"¿î.¿îS¿îj¿îå¿î®¿îø¿ï¿ï@¿ïX¿ï^¿ïb¿ïc¿ïo¿ï©¿ï«¿ï»¿ï‘¿ï˘¿ñ¿ñ4¿ñ8¿ñ9¿ñE¿ñW¿ñ¢¿ñ˝¿ó%¿óH¿ó\¿ó`¿óa¿óm¿ó®¿ó»¿óÃ¿óÕ¿óŸ¿ò¿òI¿òu¿òà¿ò£¿òΩ¿ò◊¿òÔ¿ò¯¿ô¿ô¿ôÇ¿ô◊¿ög¿ök¿öm¿ön¿ö°¿ö•¿öÒ¿õ=¿õä¿õ÷¿ú$¿úu¿úê¿úî¿ú„¿ù1¿ùÇ¿ù—¿û¿ûl¿û∫¿û˝¿ü¿üG¿üî¿ü‡¿†/¿†v¿†√¿†¯¿°)¿°g¿°h¿°t¿°ö¿°õ¿°Â¿°ı¿°˚¿¢K¿¢á¿¢ç¿¢ﬁ¿£¿£¿£`¿£ô¿£Ë¿§7¿§Y¿§_¿§u¿§{¿§¬¿§‰¿§Í¿§¯¿•%¿•I¿•O¿•a¿•ö¿•¢¿•®¿•€¿¶¿¶¿¶7¿¶∞¿¶Î¿ßH¿ßç¿ß®¿ß≤¿ß∏¿ß ¿ß˜¿®¿®5¿®P¿®q¿®ô¿®Ì¿®˛¿©¿©¿©$¿©,¿©6¿©H¿©N¿©^¿©d¿©©¿©˘¿™3¿™Q¿™å¿™ÿ¿™‹¿™›¿´'¿´E¿´K¿´õ¿´◊¿´›¿¨2¿¨`¿¨f¿¨¥¿¨Ì¿≠<¿≠ã¿≠≠¿≠≥¿Æ¿ÆT¿ÆZ¿Æp¿Æv¿ÆΩ¿ÆÈ¿ÆÔ¿Æ˝¿Ø3¿Ø`¿Øf¿Øx¿Ø√¿ØÀ¿Ø—¿∞¿∞A¿∞G¿∞f¿∞ﬂ¿±¿±]¿±g¿±m¿±¿±¨¿±Œ¿±Í¿≤¿≤&¿≤P¿≤§¿≤µ¿≤ƒ¿≤—¿≤€¿≤„¿≤Ì¿≤ˇ¿≥¿≥¿≥¿≥d¿≥∏¿≥Ó¿¥¿¥G¿¥ó¿¥õ¿¥ú¿¥Ï¿µ;¿µâ¿µ‘¿µ⁄¿∂'¿∂3¿∂9¿∂á¿∂‘¿∂È¿∑*¿∑O¿∑P¿∑ü¿∑Ì¿∏9¿∏Ü¿∏Œ¿π¿π
¿πW¿πc¿πi¿π∫¿∫¿∫¿∫`¿∫Ü¿∫á¿∫”¿∫È¿∫Ô¿ª:¿ªW¿ªg¿ªå¿ª≤¿ª≈¿ªœ¿ª”¿ª‘¿ª‡¿ºG¿ºW¿ºÑ¿º¨¿ºª¿º‰¿ºÏ¿ºˇ¿Ω	¿Ω¿Ω¿Ω¿Ω_¿Ωä¿Ω©¿Ωπ¿Ω÷¿æ¿æÜ¿æï¿ø	¿ø)¿øq¿ø…¿øÓ¿¿V¿¿{¿¿…¿¿Ô¿¡å¿¡±¿¬¿¬P¿¬±¿¬¬¿√&¿√0¿√À¿ƒ¿ƒ¿ƒ'¿ƒ1¿ƒJ¿ƒ∑¿ƒΩ¿ƒ¡¿ƒ√¿ƒƒ¿ƒ˛¿≈¿≈Q¿≈†¿≈Ò¿∆¿∆¿∆/¿∆3¿∆Ä¿∆è¿∆ì¿∆»¿∆Ã¿«	¿«¿«¿«¿«m¿«õ¿«Œ¿»¿»&¿»<¿»V¿»g¿»∑¿»Ú¿»¯¿…¿…2¿…a¿…v¿…w¿…∑¿…Ω¿ ¿ [¿ a¿ ò¿ ∫¿ Ã¿ È¿À¿À¿À¿À2¿ÀW¿Ày¿À¿ÀÉ¿ÀÑ¿À‰¿ÀÍ¿Ã)¿Ã/¿Ã~¿Ãç¿Ã€¿Õ¿Õ¿ÕM¿Õi¿Õê¿Õ∑¿Õ≈¿ÕÀ¿ÕÎ¿Œ¿Œ¿Œ¿Œ¿Œd¿Œß¿Œ´¿Œ¨¿Œ∏¿Œ¯¿œ¿œ-¿œ3¿œa¿œe¿œf¿œr¿œπ¿œÎ¿–<¿–Y¿–ß¿–´¿–¨¿–∏¿–˝¿—(¿—n¿—Ç¿—£¿—¿¿—‹¿“7¿“@¿“G¿“K¿“M¿“N¿“û¿“Ì¿”¿”3¿”\¿”o¿”â¿”ü¿”º¿”—¿”“¿‘¿‘¿‘`¿‘±¿‘ﬁ¿‘‰¿’!¿’C¿’U¿’r¿’ê¿’û¿’§¿’ª¿’Ë¿’Ï¿’Ì¿’˘¿÷,¿÷@¿÷R¿÷X¿÷ã¿÷è¿÷ê¿÷ú¿÷œ¿÷„¿÷ı¿÷˚¿◊.¿◊2¿◊3¿◊?¿◊r¿◊Ü¿◊ò¿◊û¿◊—¿◊’¿◊÷¿◊‚¿ÿ¿ÿ)¿ÿ;¿ÿA¿ÿt¿ÿx¿ÿy¿ÿÖ¿ÿ»¿ÿ‹¿ÿÔ¿ÿı¿Ÿ1¿Ÿ5¿Ÿ6¿ŸB¿Ÿh¿Ÿi¿Ÿu¿ŸÇ¿Ÿ¬¿Ÿ÷¿Ÿ˘¿Ÿˇ¿⁄/¿⁄3¿⁄4¿⁄@¿⁄Y¿⁄o¿⁄ä¿⁄é¿⁄è¿⁄õ¿⁄¥¿⁄»¿⁄Í¿⁄˜¿€¿€¿€¿€¿€+¿€s¿€∂¿€∫¿€ª¿€«¿€Ì¿‹¿‹%¿‹)¿‹*¿‹6¿‹m¿‹Å¿‹è¿‹ï¿‹∑¿‹ª¿‹º¿‹»¿›¿›¿›*¿›0¿›^¿›b¿›c¿›o¿›¥¿›ﬂ¿ﬁ$¿ﬁ(¿ﬁ)¿ﬁ5¿ﬁg¿ﬁÄ¿ﬁ¢¿ﬁ®¿ﬁ∆¿ﬁÊ¿ﬁ˝¿ﬂT¿ﬂ]¿ﬂd¿ﬂh¿ﬂj¿ﬂk¿ﬂ©¿ﬂ≠¿ﬂ¯¿‡D¿‡ï¿‡‚¿·
¿·¿·¿·#¿·p¿·¿·É¿·∏¿·º¿·˘¿·˝¿‚¿‚¿‚Y¿‚£¿‚÷¿„¿„6¿„L¿„g¿„x¿„»¿‰¿‰	¿‰&¿‰E¿‰t¿‰â¿‰ä¿‰–¿‰÷¿Â!¿Âp¿ÂÄ¿ÂÜ¿ÂΩ¿Â·¿ÂÙ¿Ê¿Ê1¿Ê?¿ÊE¿Ê]¿ÊÇ¿Ê§¿Ê™¿ÊÆ¿ÊØ¿Êˇ¿Á¿Á¿ÁZ¿Á`¿ÁØ¿Áæ¿Ë¿ËE¿ËI¿Ë~¿Ëö¿Ë¡¿ËË¿Ëˆ¿Ë¸¿È¿È<¿È@¿ÈA¿ÈM¿Èï¿È™¿ÈÃ¿Í¿Í¿Í¿Í¿ÍR¿Íy¿Íá¿Íç¿Íª¿Íø¿Í¿¿ÍÃ¿Î¿ÎE¿Îñ¿Î≥¿Ï¿Ï¿Ï¿Ï¿ÏW¿ÏÇ¿Ï…¿Ï›¿Ï˛¿Ì¿Ì6¿Ìè¿Ìò¿Ìü¿Ì£¿Ì•¿Ì¶¿Ì’¿ÌŸ¿Ó*¿Ó{¿Ó∆¿ÓÎ¿Ô,¿Ôf¿Ôl¿Ô∂¿Ô…¿Ô‹¿Ô¿¿¿¿;¿O¿P¿\¿°¿Ã¿Ò¿Ò¿Ò¿Ò¿Òb¿Ò~¿ÒŒ¿Ú¿Ú;¿ÚL¿Úk¿Úñ¿ÚÕ¿Û¿Û¿Û3¿ÛJ¿Ûm¿Û¶¿Û€¿Û‹¿Ù+¿ÙU¿Ù[¿Ù©¿Ùˆ¿ı¿ı¿ıa¿ı±¿ˆ ¿ˆJ¿ˆï¿ˆ≥¿ˆÓ¿˜¿˜G¿˜É¿˜ë¿˜ó¿˜≤¿˜“¿˜÷¿˜◊¿¯¿¯8¿¯V¿¯¿¯ö¿¯®¿¯Æ¿¯⁄¿¯Ó¿˘¿˘9¿˘?¿˘C¿˘D¿˘ó¿˘‘¿˘˛¿˙3¿˙T¿˙b¿˙h¿˙ö¿˙¥¿˙›¿˙ˇ¿˚¿˚	¿˚
¿˚J¿˚û¿˚‘¿¸¿¸A¿¸O¿¸U¿¸í¿¸∑¿¸‡¿˝¿˝¿˝¿˝¿˝<¿˝å¿˝¿¿˝ˇ¿˛)¿˛7¿˛=¿˛x¿˛õ¿˛ƒ¿˛Ê¿˛Ï¿˛¿˛Ò¿ˇ4¿ˇ{¿ˇª¿ˇ˙¿ ¿ '¿ (¿ 4¿ {¿ ≠¿ Æ¿ Ó¿
¿¿\¿Ñ¿ä¿¥¿Ì¿)¿1¿i¿£¿´¿±¿Ÿ¿¿E¿M¿Ö¿ø¿«¿Õ¿—¿“¿¿E¿I¿J¿p¿ö¿ÿ¿	¿O¿ê¿ö¿†¿§¿•¿Ã¿ˆ¿3¿d¿™¿Î¿ı¿˚¿ˇ¿ ¿$¿L¿ã¿∫¿ ¿A¿K¿Q¿U¿V¿|¿§¿‚¿	¿	W¿	ò¿	¢¿	®¿	¨¿	≠¿	π¿	˛¿
)¿
U¿
u¿
¢¿
·¿¿#¿?¿]¿c¿ß¿´¿≠¿Æ¿Î¿%¿h¿n¿Ÿ¿¯¿¿;¿W¿|¿ü¿¬¿‰¿¿6¿d¿í¿∫¿‹¿Û¿¿!¿"¿p¿•¿»¿ˆ¿¿$¿*¿C¿m¿ç¿ë¿í¿Ÿ¿¿N¿T¿®¿˜¿¿7¿J¿h¿Ü¿î¿ö¿≤¿“¿÷¿◊¿$¿g¿m¿Ω¿¿"¿m¿±¿’¿€¿¿`¿î¿ ¿Ê¿¿5¿C¿I¿j¿ä¿é¿è¿€¿ˆ¿¸¿H¿ñ¿ﬁ¿¿*¿O¿u¿É¿â¿®¿»¿Ã¿Õ¿¿¿]¿ò¿ª¿Ì¿¿,¿R¿`¿f¿Ö¿•¿©¿™¿Ê¿¿X¿£¿Ó¿%¿)¿*¿u¿ô¿‡¿‰¿Â¿0¿T¿õ¿ü¿†¿ÿ¿˚¿(¿N¿a¿ô¿ù¿û¿÷¿˘¿+¿Q¿d¿ú¿†¿°¿Î¿ ¿ S¿ W¿ X¿ ~¿ §¿ ”¿!¿!'¿!(¿!x¿!Ö¿!ã¿!—¿!˝¿"*¿"c¿"¶¿"‹¿"˝¿#)¿#K¿#Y¿#_¿#{¿#õ¿#ü¿#†¿#¨¿#Ï¿$¿$¿$¿$J¿$N¿$O¿$[¿$¢¿$‘¿$ˇ¿%3¿%h¿%t¿%›¿&%¿&,¿&8¿&É¿&Ã¿&”¿&‘¿&˚¿')¿'/¿'V¿'Ñ¿'ä¿'Ø¿'„¿'È¿(¿(>¿(D¿(l¿(ù¿(£¿(…¿(ˆ¿(¸¿)$¿)T¿)Z¿)~¿)ß¿)≠¿)”¿* ¿*¿*1¿*h¿*n¿*î¿*¡¿*«¿*¿+#¿+)¿+Q¿+Ç¿+à¿+±¿+‰¿+Í¿,¿,@¿,F¿,~¿,œ¿,’¿,˝¿-.¿-4¿-]¿-ê¿-ñ¿-º¿-È¿-Ô¿.¿.?¿.E¿.o¿.¢¿.®¿.Ã¿.˛¿/¿/(¿/Z¿/`¿/ç¿/—¿/◊¿0¿0H¿0N¿0q¿0°¿0ß¿0Œ¿0˚¿1¿1W¿1è¿1ï¿1¿¿1ı¿1˚¿2%¿2X¿2^¿2à¿2ª¿2¡¿2Ô¿3)¿3/¿3a¿3£¿3©¿3 ¿3ˆ¿3¸¿4#¿4O¿4U¿4É¿4¿¿4∆¿5¿5b¿5§¿5…¿5Î¿5Ò¿6¿6J¿6P¿6y¿6£¿6©¿6’¿7¿7¿78¿7j¿7p¿7ö¿7∆¿7Ã¿7¯¿8(¿8.¿8X¿8Ñ¿8ä¿8¥¿8‡¿8Ê¿9¿90¿96¿9[¿9}¿9É¿9™¿9–¿9÷¿:¿:h¿:n¿:≠¿;¿;	¿;B¿;å¿;í¿;Ã¿<¿<¿<L¿<Ä¿<Ü¿<Ø¿<Ÿ¿<ﬂ¿=¿=h¿=n¿=©¿=˜¿=˝¿>3¿>~¿>Ñ¿>à¿>â¿>†¿>ø¿>√¿>ƒ¿>·¿?¿?
¿?¿?&¿?I¿?M¿?N¿?l¿?í¿?ñ¿?ó¿?∂¿?›¿?·¿?‚¿?˛¿@"¿@&¿@'¿@E¿@k¿@o¿@p¿@å¿@∞¿@¥¿@µ¿@—¿@ı¿@˘¿@˙¿A¿A2¿A6¿A7¿AN¿Am¿Aq¿Ar¿Aã¿A¨¿A∞¿A±¿Aı¿B<¿B@¿BA¿BÜ¿BŒ¿B“¿B”¿C¿CT¿CX¿CY¿Cô¿C‹¿C‡¿C·¿D¿DI¿DM¿DN¿Dt¿Dõ¿Dü¿D†¿DÕ¿E¿E¿E¿E4¿Ei¿Em¿Eo¿Ep¿Eø¿E€¿Eﬂ¿F.¿Fb¿Fñ¿FÂ¿FÚ¿G¿G!¿G;¿GX¿Gm¿Gn¿Gª¿H¿H-¿H?¿H\¿Hz¿Hà¿Hé¿H•¿H≈¿H…¿H ¿H÷¿I¿IO¿Ií¿Iñ¿Ió¿I£¿IË¿J¿JX¿J\¿J^¿J_¿J¢¿JÂ¿J˘¿J˝¿KD¿Kã¿KΩ¿KÒ¿L?¿L|¿L}¿Lâ¿L–¿M¿M¿M/¿M_¿Mc¿Me¿Mf¿Mò¿Mú¿MÎ¿N¿N¿NR¿Nç¿N√¿O¿O'¿O=¿OX¿Ow¿Oå¿Oç¿O“¿Oˆ¿P	¿P'¿PF¿PT¿PZ¿Pr¿Pí¿Pñ¿Pó¿P£¿P„¿P¯¿Q¿Q¿Q:¿Q>¿Q?¿QK¿Qê¿Qª¿R¿R¿R¿R	¿RF¿RJ¿Rî¿R›¿S¿S9¿S=¿SK¿SO¿Sí¿S»¿T¿T3¿TI¿Ta¿Tx¿Tç¿Té¿T¡¿T‹¿TÍ¿U¿U¿U+¿U1¿UE¿Ue¿Ui¿Uj¿Uv¿UΩ¿UÔ¿V¿V¿V¿V"¿Vg¿Ví¿V–¿V‘¿V÷¿V◊¿W¿W¿W¿W!¿W_¿W†¿W—¿X
¿X ¿X=¿XS¿Xh¿X}¿X~¿XÃ¿XÍ¿X¿YA¿Y[¿Yz¿Yç¿Y´¿Y≈¿Y”¿YŸ¿Yˆ¿Z	¿Z0¿Z^¿Zd¿Zz¿Z~¿Z¿Zã¿Z∂¿Z∑¿[¿[S¿[ï¿[≤¿[≥¿[ø¿[ÿ¿[Û¿\¿\/¿\3¿\4¿\@¿\w¿\ê¿\«¿\‘¿]¿]#¿]9¿]T¿]Z¿]ì¿]£¿]Õ¿]‡¿]Í¿]Ó¿]Ô¿]˚¿^@¿^k¿^≠¿^±¿^≥¿^¥¿_¿_5¿_9¿_Ö¿_â¿_‘¿`%¿`9¿`=¿`K¿`O¿`è¿`“¿a¿a@¿aX¿au¿aó¿a∏¿aË¿b¿b0¿bE¿br¿bã¿b∞¿bŸ¿bÓ¿bÔ¿c5¿ck¿cä¿cù¿cª¿c’¿c„¿cÈ¿c¸¿d¿d¿d¿d[¿dô¿dü¿d¿e2¿e8¿eâ¿eÿ¿f¿f>¿fX¿f}¿f£¿f±¿f∑¿f÷¿fÏ¿f¿fÒ¿g>¿gh¿gà¿gö¿g∑¿g”¿g·¿gÁ¿g¸¿h¿h¿h¿hf¿h¿hÖ¿h ¿i¿i^¿i†¿iÔ¿j0¿jr¿jõ¿j∞¿j∂¿j›¿k¿k'¿kM¿ko¿k}¿kÉ¿kû¿k¥¿k∏¿kπ¿l¿l?¿lE¿lá¿lç¿l¥¿lÁ¿m¿m,¿mP¿m^¿md¿mÅ¿mó¿mõ¿mú¿m®¿m∫¿mÃ¿m‡¿m‰¿mÂ¿mÒ¿n¿n¿nS¿n_¿nú¿nù¿nÌ¿nÛ¿oC¿ot¿o√¿o›¿oˇ¿p;¿p?¿p@¿pL¿pî¿p’¿q	¿q¿q#¿q^¿qõ¿qŸ¿qÛ¿r+¿r/¿r0¿r<¿rå¿rµ¿r›¿r˜¿s3¿su¿s~¿sÖ¿sâ¿sä¿sñ¿sÕ¿s˚¿t¿tb¿t∑¿u¿u-¿u4¿up¿uÑ¿uﬂ¿u¯¿v¿v)¿vU¿vÇ¿v¢¿v´¿v∏¿vƒ¿v€¿w	¿w8¿w[¿wa¿wx¿wÜ¿wô¿w¨¿wŸ¿x7¿xX¿xy¿xí¿x´¿x¥¿xª¿xÀ¿xı¿y¿y¿y¿y¿y#¿yd¿yì¿yó¿yò¿y§¿yÈ¿z¿zV¿z´¿zÓ¿{H¿{L¿{N¿{O¿{û¿{¢¿{∞¿{¥¿{¯¿|=¿|Ñ¿|Ö¿|Ã¿|ﬁ¿|‰¿}1¿}c¿}i¿}ò¿}≤¿}»¿}·¿}˜¿~¿~%¿~c¿~x¿~y¿~≤¿~À¿~◊¿~Ú¿¿¿$¿;¿Q¿U¿V¿™¿∆¿’¿Ô¿Ä
¿Ä¿Ä¿Ä2¿ÄH¿ÄL¿ÄM¿Äà¿Äâ¿Äï¿Ä¡¿Ä¬¿ÄŒ¿Å¿Å_¿Å¢¿ÅØ¿Å–¿Åı¿Å¸¿Ç¿ÇO¿ÇS¿ÇT¿Ç`¿Çs¿Çí¿Çß¿Ç´¿Ç≠    
Ä•Ä∫ÄºÄ‰ÄÁ  Å  Å:  Åb  Åã  Å¥  Å«  Å‹  Å˘  ÇÇ7Çö *ÇùÑsÖèÇÎ/// A base class for render boxes that resemble their children.
///
/// A proxy box has a single child and mimics all the properties of that
/// child by calling through to the child for each function in the render box
/// protocol. For example, a proxy box determines its size by asking its child
/// to layout with the same constraints and then matching the size.
///
/// A proxy box isn't useful on its own because you might as well just replace
/// the proxy box with its child. However, RenderProxyBox is a useful base class
/// for render objects that wish to mimic most, but not all, of the properties
/// of their child.
///
/// See also:
///
///  * [RenderProxySliver], a base class for render slivers that resemble their
///    children. ÖˇÅ ÜŒÜ‹Äƒ/// Creates a proxy render box.
///
/// Proxy render boxes are rarely created directly because they proxy
/// the render box protocol to [child]. Instead, consider using one of the
/// subclasses.ÜﬁÜÍ       íÛÖõì[X/// A RenderProxyBox subclass that allows you to customize the
/// hit-testing behavior. ìòÄ˝ îî6v/// Initializes member variables for subclasses.
///
/// By default, the [behavior] is [HitTestBehavior.deferToChild].î=,îC  îoî{  îMî\î]îàîçîìîéîôÅ1ï¬Å/// How to behave during hit testing when deciding how the hit test propagates
/// to children and whether to consider targets behind this one.
///
/// Defaults to [HitTestBehavior.deferToChild].
///
/// See [HitTestBehavior] for the allowed values and their meanings.  ïœÅáï‡  ïËï˙  ññ  ïœï–óZTók  ówó  óZó[ó≤Ä⁄ó√  ó◊&óÙ  ó≤ó≥ òêê∆özÅ„/// Imposes additional constraints on its child.
///
/// A render constrained box proxies most functions in the render box protocol
/// to its child, except that when laying out its child, it tightens the
/// constraints provided by its parent by enforcing the [additionalConstraints]
/// as well.
///
/// For example, if you wanted [child] to have a minimum height of 50.0 logical
/// pixels, you could use `const BoxConstraints(minHeight: 50.0)` as the
/// [additionalConstraints]. ö™Å\ õ õ4o/// Creates a render box that constrains its child.
///
/// The [additionalConstraints] argument must be valid.õ;õG  õQ-õj  õáõçõ∏õéõ£õ§õ∂õ∑õŸõ¬õ€õ˘õ˛úõˇúê%úü  ú
ÄÉú]=/// Additional constraints to apply to [child] during layout.   úπÄ◊úΩ  ú”ú„   ùîÅ≤ùß  ù¿ù»  ùîùïüJÅ≤ü]  üvü~  üJüK° Åª°  °-°5  ° °¢øÅª¢“  ¢Ï¢Ù  ¢ø¢¿§~ÅL§è   §~§•ŒÅ$•Ï  •˝$¶  •Œ•œ•⁄•€¶ˆÅtß  ßß'  ß/ß7  ¶ˆ¶˜®nÄÊ®  ®ì&®∞  ®n®o ©Xån´ŒÇo/// Constrains the child's [BoxConstraints.maxWidth] and
/// [BoxConstraints.maxHeight] if they're otherwise unconstrained.
///
/// This has the effect of giving the child a natural dimension in unbounded
/// environments. For example, by providing a [maxHeight] to a widget that
/// normally tries to be as big as possible, the widget will normally size
/// itself to fit its parent, but when placed in a vertical list, it will take
/// on the given height.
///
/// This is useful when composing widgets that normally try to match their
/// parents' size, so that they behave reasonably in lists (which are
/// unbounded). ´˙Å ¨·¨ÒÄ‹/// Creates a render box that imposes a maximum width or maximum height on its
/// child if the child is otherwise unconstrained.
///
/// The [maxWidth] and [maxHeight] arguments not be null and must be
/// non-negative.¨¯≠  ≠!≠  ≠5"≠=  ≠ ≠&≠'≠H≠N≠O≠`≠f≠v≠p≠g≠s≠Ä≠Ü≠ó≠ë≠á≠î≠´≠°≠≠≠…≠æ≠À≠›≠‚≠Ë≠„ÆgÆn  ØñØù  ≠ÓvÆNR/// The value to use for maxWidth if the incoming maxWidth constraint is infinite.   Æ{ÄöÆ  ÆàÆê   ØzØ{T/// The value to use for maxHeight if the incoming maxHeight constraint is infinite.   Ø´ÄùØØ  ØπØ¡   ∞LÅç∞[  ∞m∞}   ±›ÅC±‚  ±#≤	  ≤"≤-   ≥$Äœ≥B  ≥S$≥m  ≥$≥%≥0≥1≥˜Äò¥   ≥˜≥¯¥ìÅ1¥§  ¥∏&¥’  ¥ì¥î µ»ñ´ºJÜ{/// Attempts to size the child to a specific aspect ratio.
///
/// The render object first tries the largest width permitted by the layout
/// constraints. The height of the render object is determined by applying the
/// given aspect ratio to the width, expressed as a ratio of width to height.
///
/// For example, a 16:9 width:height aspect ratio would have a value of
/// 16.0/9.0. If the maximum width is infinite, the initial width is determined
/// by applying the aspect ratio to the maximum height.
///
/// Now consider a second example, this time with an aspect ratio of 2.0 and
/// layout constraints that require the width to be between 0.0 and 100.0 and
/// the height to be between 0.0 and 100.0. We'll select a width of 100.0 (the
/// biggest allowed) and a height of 50.0 (to match the aspect ratio).
///
/// In that same situation, if the aspect ratio is 0.5, we'll also select a
/// width of 100.0 (still the biggest allowed) and we'll attempt to use a height
/// of 200.0. Unfortunately, that violates the constraints because the child can
/// be at most 100.0 pixels tall. The render object will then take that value
/// and apply the aspect ratio again to obtain a width of 50.0. That width is
/// permitted by the constraints and the child receives a width of 50.0 and a
/// height of 100.0. If the width were not permitted, the render object would
/// continue iterating through the constraints. If the render object does not
/// find a feasible size after consulting each constraint, the render object
/// will eventually select a size for the child that meets the layout
/// constraints but fails to meet the aspect ratio constraints. ºwÅO º˝Ω/// Creates as render object with a specific aspect ratio.
///
/// The [aspectRatio] argument must be a finite, positive value.ΩΩ!  Ω+Ω<  ΩOΩUΩgΩbΩVΩdΩqΩwΩåΩxΩÉΩÑΩ£ΩñΩ•ΩπΩæΩƒΩøæªæ¬  Ω ÄÓæúÄæ/// The aspect ratio to attempt to use.
///
/// The aspect ratio is expressed as a ratio of width to height. For example,
/// a 16:9 width:height aspect ratio would have a value of 16.0/9.0.   æ“Äææ÷  æ‚æÍ   øîÄÊøß  ø¿ø»  øîøï¿ @~ÄÊ¿ @ë  ¿ @™¿ @≤  ¿ @~¿ @¿ AhÄ‰¿ A{  ¿ Aï¿ Aù  ¿ Ah¿ Ai¿ BPÄ‰¿ Bc  ¿ B}¿ BÖ  ¿ BP¿ BQ¿ C8áK¿ C=  ¿ CO¿ C_   ¿ JáÄÖ¿ J•  ¿ J∂$¿ J–  ¿ Já¿ Jà¿ Jì¿ Jî¿ KÄ†¿ K!   ¿ K¿ K¿ K¥ÄΩ¿ K≈  ¿ KŸ&¿ Kˆ  ¿ K¥¿ Kµ ¿ Luïç¿ S7Üº/// Sizes its child to the child's maximum intrinsic width.
///
/// This class is useful, for example, when unlimited width is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable width.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic width, then the child will get less width
/// than it otherwise would. Likewise, if the minimum width constraint is
/// larger than the child's maximum intrinsic width, the child will be given
/// more width than it otherwise would.
///
/// If [stepWidth] is non-null, the child's width will be snapped to a multiple
/// of the [stepWidth]. Similarly, if [stepHeight] is non-null, the child's
/// height will be snapped to a multiple of the [stepHeight].
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicWidth],
///    allowing the [RenderIntrinsicWidth]'s child to be smaller than that of
///    its parent.
///  * [Row], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the width constraints that are passed to the
///    [RenderIntrinsicWidth], allowing the [RenderIntrinsicWidth]'s child's
///    width to be smaller than that of its parent. ¿ SgÅ„ ¿ T.¿ TBÄæ/// Creates a render object that sizes itself to its child's intrinsic width.
///
/// If [stepWidth] is non-null it must be > 0.0. Similarly If [stepHeight] is
/// non-null it must be > 0.0.¿ TI¿ TR  ¿ T`¿ Ti  ¿ Tx¿ TÑ  ¿ Të¿ Tó¿ Tº¿ T™¿ T¢¿ Tò¿ T•¿ T∑¿ T≠¿ Tπ¿ T∆¿ TÃ¿ TÛ¿ T‡¿ Tÿ¿ TÕ¿ T€¿ TÓ¿ T„¿ T¿ U¿ T˝¿ U
¿ U(¿ U¿ U*¿ U=¿ UB¿ UH¿ UC¿ UÓ¿ Uˆ  ¿ WY¿ Wa  ¿ UNÄù¿ U”r/// If non-null, force the child's width to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ VÄÆ¿ V  ¿ V¿ V   ¿ V∂Ä†¿ W<s/// If non-null, force the child's height to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ WpÄ±¿ Wt  ¿ W¿ Wà   	¿ X%Ä±¿ X3  ¿ X>¿ XF  ¿ XL¿ XU   ¿ X⁄m¿ XÌ  ¿ Y¿ Y  ¿ X⁄¿ X€¿ YKÄŸ¿ Y^  ¿ Yw¿ Y  ¿ YK¿ YL¿ Z(ÅR¿ Z;  ¿ ZU¿ Z]  ¿ Z(¿ Z)¿ [~ÅR¿ [ë  ¿ [´¿ [≥  ¿ [~¿ [¿ \‘Ç¬¿ \Ÿ  ¿ \Á"¿ \ˇ  ¿ ]#¿ ]$   ¿ _öÄœ¿ _∏  ¿ _…$¿ _„  ¿ _ö¿ _õ¿ _¶¿ _ß¿ `mÄò¿ `~   ¿ `m¿ `n¿ a	Ä˜¿ a  ¿ a.&¿ aK  ¿ a	¿ a
 ¿ båö¿ gÒÖÁ/// Sizes its child to the child's intrinsic height.
///
/// This class is useful, for example, when unlimited height is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable height.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic height, then the child will get less height
/// than it otherwise would. Likewise, if the minimum height constraint is
/// larger than the child's maximum intrinsic height, the child will be given
/// more height than it otherwise would.
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicHeight],
///    allowing the [RenderIntrinsicHeight]'s child to be smaller than that of
///    its parent.
///  * [Column], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the height constraints that are passed to the
///    [RenderIntrinsicHeight], allowing the [RenderIntrinsicHeight]'s child's
///    height to be smaller than that of its parent. ¿ h"Äì ¿ hs¿ hàN/// Creates a render object that sizes itself to its child's intrinsic height.¿ hè¿ hõ  ¿ h®¿ h≠¿ h≥¿ hÆ  ¿ hπÅ¿ hÃ  ¿ hÂ¿ hÌ  ¿ hπ¿ h∫¿ i€Å¿ iÓ  ¿ j¿ j  ¿ i€¿ i‹¿ j˝m¿ k  ¿ k*¿ k2  ¿ j˝¿ j˛¿ knÅø¿ ks  ¿ kÅ"¿ kô  ¿ k•#¿ kæ   ¿ m1Äœ¿ mO  ¿ m`$¿ mz  ¿ m1¿ m2¿ m=¿ m>¿ nÄò¿ n   ¿ n¿ n ¿ n†ÅÇ¿ nÁ@/// Excludes the child from baseline computations in the parent. ¿ oÄ§ ¿ oz¿ oé`/// Create a render object that causes the parent to ignore the child for baseline computations.¿ oï¿ o°  ¿ oÆ¿ o≥¿ oπ¿ o¥  ¿ oøa¿ o”  ¿ oÛ¿ p  ¿ oø¿ o¿ ¿ p$çñ¿ rÅ‰/// Makes its child partially transparent.
///
/// This class paints its child into an intermediate buffer and then blends the
/// child back into the scene partially transparent.
///
/// For values of opacity other than 0.0 and 1.0, this class is relatively
/// expensive because it requires painting the child into an intermediate
/// buffer. For the value 0.0, the child is not painted at all. For the
/// value 1.0, the child is painted immediately without an intermediate buffer. ¿ r8Åπ ¿ r∏¿ r≈y/// Creates a partially transparent render object.
///
/// The [opacity] argument must be between 0.0 and 1.0, inclusive.¿ rÃ¿ r‘  ¿ rÊ#¿ rÏ  ¿ s¿ s   ¿ r›¿ s¿ s(¿ s.¿ sO¿ s>¿ s7¿ s/¿ s:¿ sI¿ sA¿ sL¿ sb¿ sY¿ sd¿ så¿ st¿ sé¿ s¥¿ s≠¿ s∂¿ s∏¿ sπ¿ sæ¿ sø¿ s“¿ s⁄¿ s”¿ s‰¿ sÈ¿ sÔ¿ sÍ¿ tâ
¿ tç  ¿ v ¿ v  ¿ y¿ y#  ¿ sıK¿ t
   ¿ sı¿ sˆ¿ tDA¿ tY   ¿ tD¿ tE¿ tòÅe¿ uÈÅ5/// The fraction to scale the child's alpha value.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// Values 1.0 and 0.0 are painted with a fast path. Other values
/// require painting the child into an intermediate buffer, which is
/// expensive.   ¿ vÇ ¿ v  ¿ v¿ v'   ¿ x7Ä‰¿ xÈÄû/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.   ¿ y>Ä±¿ yB  ¿ yY
¿ y_   ¿ yÛl¿ z  ¿ z¿ z  ¿ yÛ¿ yÙ¿ zcÄ«¿ z{  ¿ zí)¿ z¥  ¿ zc¿ zd¿ {.Ä¢¿ {?  ¿ {E¿ {V  ¿ {^¿ {f  ¿ {.¿ {/¿ {‘ÄÆ¿ {Â  ¿ {ˇ¿ |  ¿ {‘¿ {’¿ |ÜÅ2¿ |ó  ¿ |´&¿ |»  ¿ |Ü¿ |á ¿ å†ÇO¿ çnÄ«/// Makes its child partially transparent, driven from an [Animation].
///
/// This is a variant of [RenderOpacity] that uses an [Animation<double>] rather
/// than a [double] to control the opacity. ¿ ç Å# ¿ çˇ¿ é2/// Creates a partially transparent render object.¿ é"¿ é7  ¿ éC#¿ éI  ¿ él¿ éx  ¿ éa¿ éÖ¿ éä¿ éê¿ éã    ¿ è≤â¿ êyÄ¿/// Applies a mask generated by a [Shader] to its child.
///
/// For example, [RenderShaderMask] can be used to gradually fade out the edge
/// of a child by using a [ui.Gradient.linear] mask. ¿ ê•Å7 ¿ ê˝¿ ëU/// Creates a render object that applies a mask generated by a [Shader] to its child.¿ ë¿ ë   ¿ ë*&¿ ëC  ¿ ëV(¿ ëa  ¿ ël¿ ëu¿ ëv¿ ëó¿ ëá¿ ëô¿ ëª¿ ë∞¿ ëΩ¿ ëœ¿ ë‘¿ ë⁄¿ ë’¿ î(¿ î7  ¿ ïÙ¿ ï˛  ¿ ë‡J¿ í   ¿ ë‡¿ ë·¿ í.Å˜¿ îÅ-/// Called to creates the [Shader] that generates the mask.
///
/// The shader callback is called with the current size of the child so that
/// it can customize the shader to the size and location of the child.
///
/// The rectangle will always be at the origin when called by
/// [RenderShaderMask].   ¿ îJÄô¿ îN  ¿ î]¿ îm   ¿ îÁÅ
¿ ïŸÄ€/// The [BlendMode] to use when applying the shader to the child.
///
/// The default, [BlendMode.modulate], is useful for applying an alpha blend
/// to the child. Other blend modes can be used to create other effects.   ¿ ñÄÖ¿ ñ  ¿ ñ¿ ñ%   ¿ ñï=¿ ñ™   ¿ ñï¿ ññ¿ ñ÷ÅÂ¿ ñÁ  ¿ ñÌ¿ ñ˛  ¿ ó¿ ó  ¿ ñ÷¿ ñ◊ ¿ òøáN¿ ô{Äµ/// Applies a filter to the existing painted content and then paints [child].
///
/// This effect is relatively expensive, especially if the filter is non-local,
/// such as a blur. ¿ ô´Å# ¿ ö¿ ö%\/// Creates a backdrop filter.
/// The [blendMode] argument defaults to [BlendMode.srcOver].¿ ö(¿ ö4  ¿ ö:¿ öS  ¿ öZ'¿ öe  ¿ öp¿ öy¿ öz¿ öì¿ öã¿ öï¿ öÆ¿ ö£¿ ö∞¿ ö¡¿ ö∆¿ öÃ¿ ö«¿ ú¿ ú&  ¿ ùÖ¿ ùè  ¿ ö“R¿ ö˜   ¿ ö“¿ ö”¿ õ(ÄÏ¿ úÄº/// The image filter to apply to the existing painted content before painting
/// the child.
///
/// For example, consider using [ui.ImageFilter.blur] to create a backdrop
/// blur effect.   ¿ ú1ÄÅ¿ ú5  ¿ ú<¿ úL   ¿ ú∂ÄÃ¿ ùjÄù/// The blend mode to use to apply the filtered background content onto the background
/// surface.
///
/// {@macro flutter.widgets.BackdropFilter.blendMode}   ¿ ùùÄÖ¿ ù°  ¿ ù´¿ ù∂   ¿ û&=¿ û;   ¿ û&¿ û'¿ ûgÅ§¿ ûx  ¿ û~¿ ûè  ¿ ûó¿ ûü  ¿ ûg¿ ûh ¿ †éó¿ §qÑR/// An interface for providing custom clips.
///
/// This class is used by a number of clip widgets (e.g., [ClipRect] and
/// [ClipPath]).
///
/// The [getClip] method is called whenever the custom clip needs to be updated.
///
/// The [shouldReclip] method is called when a new instance of the class
/// is provided, to check if the new instance actually represents different
/// information.
///
/// The most efficient way to update the clip provided by this class is to
/// supply a `reclip` argument to the constructor of the [CustomClipper]. The
/// custom object will listen to this animation and update the clip whenever the
/// animation ticks, avoiding both the build and layout phases of the pipeline.
///
/// See also:
///
///  * [ClipRect], which can be customized with a [CustomClipper<Rect>].
///  * [ClipRRect], which can be customized with a [CustomClipper<RRect>].
///  * [ClipOval], which can be customized with a [CustomClipper<Rect>].
///  * [ClipPath], which can be customized with a [CustomClipper<Path>].
///  * [ShapeBorderClipper], for specifying a clip path using a [ShapeBorder].¿ §¿ §¿ §ôÄ∂ ¿ •¿ •#p/// Creates a custom clipper.
///
/// The clipper will update its clip whenever [reclip] notifies its listeners.¿ •&¿ •3  ¿ •F¿ •>¿ •H¿ •S¿ •e   ¿ •qÅU¿ ¶ÅÄÙ/// Register a closure to be notified when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ¶ç¿ ¶õ  ¿ ¶p¿ ¶q¿ ¶ Åô¿ ®Å0/// Remove a previously registered closure from the list of closures that the
/// object notifies when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ®'¿ ®5  ¿ ®¿ ®¿ ®gÄÑ¿ ®ÿj/// Returns a description of the clip given that the render object being
/// clipped is of the given size. ¿ ®‡	¿ ®Ê   ¿ ®ÔÇ¿ ™ÀÅ∆/// Returns an approximation of the clip returned by [getClip], as
/// an axis-aligned Rect. This is used by the semantics layer to
/// determine whether widgets should be excluded.
///
/// By default, this returns a rectangle that is the same size as
/// the RenderObject. If getClip returns a shape that is roughly the
/// same size as the RenderObject (e.g. it's a rounded rectangle
/// with very small arcs in the corners), then this may be adequate. ¿ ™‚	¿ ™Ë   ¿ ´ÉO¿ Æ"Ç˜/// Called whenever a new instance of the custom clipper delegate class is
/// provided to the clip object, or any time that a new clip object is created
/// with a new instance of the custom clipper delegate class (which amounts to
/// the same thing, because the latter is implemented in terms of the former).
///
/// If the new instance represents different information than the old
/// instance, then the method should return true, otherwise it should return
/// false.
///
/// If the method returns false, then the [getClip] call might be optimized
/// away.
///
/// It's possible that the [getClip] method will get called even if
/// [shouldReclip] returns false or if the [shouldReclip] method is never
/// called at all (e.g. if the box changes size). ¿ Æ/%¿ ÆK   ¿ ÆZJ¿ Æm   ¿ ÆZ¿ Æ[ ¿ Æ®Öj¿ ÆıF/// A [CustomClipper] that clips to the outer path of a [ShapeBorder]. ¿ Ø(Å• ¿ ∞Ç¿ ∞îÅG/// Creates a [ShapeBorder] clipper.
///
/// The [textDirection] argument must be provided non-null if [shape]
/// has a text direction dependency (for example if it is expressed in terms
/// of "start" and "end" instead of "left" and "right"). It may be null if
/// the border will not need the text direction to paint itself.¿ ∞õ¿ ∞™  ¿ ∞¥¿ ∞∫   ¿ ∞—V¿ ±"</// The shape border whose outer path this clipper clips to. ¿ ±,Ä‚¿ ≤Ä∑/// The text direction to use for getting the outer path for [shape].
///
/// [ShapeBorder]s can depend on the text direction (e.g having a "dent"
/// towards the start of the shape).  ¿ ≤ÄØ¿ ≤Y2/// Returns the outer path of [shape] as the clip. ¿ ≤a	¿ ≤g  ¿ ≤H¿ ≤I¿ ≤∆ÅJ¿ ≤◊  ¿ ≤‰¿ ≤˘  ¿ ≤∆¿ ≤« ¿ ¥å
¿ ¥# ¿ ¥5¿ ¥5¿ ¥SÄ≈ ¿ ¥S¿ ¥d ¿ ¥k¿ ¥w  ¿ ¥Å¿ ¥î  ¿ ¥†"¿ ¥¶  ¿ ¥¥¿ ¥∏¿ ¥π¿ ¥‘¿ ¥À¿ ¥÷¿ ¥Ù¿ ¥Ê¿ ¥ˆ¿ µ¿ µ¿ µ¿ µ¿ µá¿ µô  ¿ π&¿ π)  ¿ πﬂ¿ π‰  ¿ º7¿ º>  ¿ ºM¿ ºZ  ¿ µh¿ µp;/// If non-null, determines which clip to use on the child.   ¿ µ•Ç!¿ µ©  ¿ µ±¿ µƒ   ¿ π¿ π    ¿ π3'¿ π<    ¿ π]¿ πa  ¿ πn
¿ πt   ¿ ∑ v¿ ∑€  ¿ ∑‚¿ ∑Ò  ¿ ∑ ¿ ∑À¿ ∏Da¿ ∏U   ¿ ∏D¿ ∏E¿ ∏©c¿ ∏Æ    ¿ πˆÄß¿ ∫   ¿ πˆ¿ π˜¿ ∫°O¿ ∫¶    ¿ ∫ÙÅ?¿ ª  ¿ ª#¿ ª1  ¿ ∫Ù¿ ∫ı¿ ºhÉI¿ ºy  ¿ ºà¿ ºô  ¿ º°¿ º©  ¿ ºh¿ ºi¿ øµg¿ ø∆   ¿ øµ¿ ø∂ ¿ ¿ ág¿ ¡Äﬂ/// Clips its child using a rectangle.
///
/// By default, [RenderClipRect] prevents its child from painting outside its
/// bounds, but the size and location of the clip rect can be customized using a
/// custom [clipper]. ¿ ¡9Å& ¿ ¬¿ ¬Ä«/// Creates a rectangular clip.
///
/// If [clipper] is null, the clip will match the layout size and position of
/// the child.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ ¬"¿ ¬)  ¿ ¬3¿ ¬:  ¿ ¬F¿ ¬M    ¿ ¬c8¿ ¬x   ¿ ¬c¿ ¬d¿ ¬üÅ%¿ ¬∞  ¿ ¬∏¿ ¬   ¿ ¬”¿ ¬‰  ¿ ¬ü¿ ¬†¿ √»Åˆ¿ √Ÿ  ¿ √ﬂ¿ √  ¿ √¯¿ ƒ   ¿ √»¿ √…¿ ≈¬Å√¿ ≈”  ¿ ≈‚¿ ≈Û  ¿ ≈˚¿ ∆  ¿ ≈¬¿ ≈√ ¿ «âãæ¿ »vÄÊ/// Clips its child using a rounded rectangle.
///
/// By default, [RenderClipRRect] uses its own bounds as the base rectangle for
/// the clip, but the size and location of the clip can be customized using a
/// custom [clipper]. ¿ »´Ç# ¿ …ÿ¿ …ÁÅ/// Creates a rounded-rectangular clip.
///
/// The [borderRadius] defaults to [BorderRadius.zero], i.e. a rectangle with
/// right-angled corners.
///
/// If [clipper] is non-null, then [borderRadius] is ignored.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ …Ó¿ …ı  ¿ …ˇ5¿    ¿  :¿  A  ¿  M¿  T  ¿  e¿  u  	¿  #¿  /¿  0¿  ò¿  ä¿  ö¿  æ¿  Ø¿  ¿¿ À‰"¿ À˘  ¿ Õ¿ Õ+  ¿  “Å¿ À√ÄÀ/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This value is ignored if [clipper] is non-null.   ¿ Ã
Äô¿ Ã  ¿ Ã¿ Ã1   ¿ Ãßr¿ Ã˘</// The text direction with which to resolve [borderRadius].   ¿ Õ=Äñ¿ ÕA  ¿ ÕO¿ Õ_   ¿ Õ◊g¿ ÕÌ   ¿ Õ◊¿ Õÿ¿ ŒBÅ%¿ ŒS  ¿ Œ[¿ Œm  ¿ Œv¿ Œá  ¿ ŒB¿ ŒC¿ œkÇ¿ œ|  ¿ œÇ¿ œì  ¿ œõ¿ œ£  ¿ œk¿ œl¿ —ÉÅ¬¿ —î  ¿ —£¿ —¥  ¿ —º¿ —ƒ  ¿ —É¿ —Ñ ¿ ”Iâ›¿ ‘WÅ/// Clips its child using an oval.
///
/// By default, inscribes an axis-aligned oval into its layout dimensions and
/// prevents its child from painting outside that oval, but the size and
/// location of the clip oval can be customized using a custom [clipper]. ¿ ‘äÅ3 ¿ ’k¿ ’yÄ‘/// Creates an oval-shaped clip.
///
/// If [clipper] is null, the oval will be inscribed into the layout size and
/// position of the child.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ ’Ä¿ ’á  ¿ ’ë¿ ’ò  ¿ ’§¿ ’´   ¿ ’¡¿ ’«  ¿ ’÷¿ ’‡  ¿ ÷†8¿ ÷µ   ¿ ÷†¿ ÷°¿ ’Ä¨¿ ’ı  ¿ ÷	¿ ÷   ¿ ÷‹ÇC¿ ÷Ì  ¿ ÷ı¿ ◊  ¿ ◊¿ ◊!  ¿ ÷‹¿ ÷›¿ Ÿ#Ç¿ Ÿ4  ¿ Ÿ:¿ ŸK  ¿ ŸS¿ Ÿ[  ¿ Ÿ#¿ Ÿ$¿ €=ÅÁ¿ €N  ¿ €]¿ €n  ¿ €v¿ €~  ¿ €=¿ €> ¿ ›(à‘¿ ﬁ˚ÅÃ/// Clips its child using a path.
///
/// Takes a delegate whose primary method returns a path that should
/// be used to prevent the child from painting outside the path.
///
/// Clipping to a path is expensive. Certain shapes have more
/// optimized render objects:
///
///  * To clip to a rectangle, consider [RenderClipRect].
///  * To clip to an oval or circle, consider [RenderClipOval].
///  * To clip to a rounded rectangle, consider [RenderClipRRect]. ¿ ﬂ.Åø ¿ ‡õ¿ ‡©Å\/// Creates a path clip.
///
/// If [clipper] is null, the clip will be a rectangle that matches the layout
/// size and location of the child. However, rather than use this default,
/// consider using a [RenderClipRect], which can achieve the same effect more
/// efficiently.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ ‡∞¿ ‡∑  ¿ ‡¡¿ ‡»  ¿ ‡‘¿ ‡€    ¿ ‡ÒI¿ ·   ¿ ‡Ò¿ ‡Ú¿ ·>Å%¿ ·O  ¿ ·W¿ ·i  ¿ ·r¿ ·É  ¿ ·>¿ ·?¿ ‚gÇ¿ ‚x  ¿ ‚~¿ ‚è  ¿ ‚ó¿ ‚ü  ¿ ‚g¿ ‚h¿ ‰Å{¿ ‰ê  ¿ ‰ü¿ ‰∞  ¿ ‰∏¿ ‰¿  ¿ ‰¿ ‰Ä ¿ Â˛àÅ¿ Ê‹ÄŒ/// A physical model layer casts a shadow based on its [elevation].
///
/// The concrete implementations [RenderPhysicalModel] and [RenderPhysicalShape]
/// determine the actual shape of the physical model.¿ Êı¿ Êı¿ ÁÅt ¿ ÁO¿ Ág3/// The [elevation] parameter must be non-negative.¿ Án¿ Á~  ¿ Áà¿ Áô  ¿ Áß¿ Á∑  ¿ Á¡¿ Á—  ¿ Á·¿ ÁË  ¿ Ë¿ Ë  ¿ Áˆ¿ Á˙¿ Á˚¿ Ë¿ Ë!¿ Ë2¿ Ë,¿ Ë"¿ Ë/¿ ËG¿ Ë<¿ ËI¿ Ëb¿ Ë[¿ Ëd¿ Ë¿ Ër¿ ËÅ¿ ÈØ¿ È∂  ¿ ÎF¿ ÎL  ¿ Ï¿ Ï%  ¿ ËëÅ¿ ÈîÄÎ/// The z-coordinate relative to the parent at which to place this material.
///
/// The value is non-negative.
///
/// If [debugDisableShadows] is set, this value is ignored and no shadow is
/// drawn (an outline is rendered instead).   ¿ ÈƒÅ=¿ È»  ¿ È“¿ È⁄   ¿ Î>¿ Î'/// The shadow color.   ¿ Î\ÄÜ¿ Î`  ¿ Îl¿ Îs   ¿ ÎÊ6¿ Ï/// The background color.   ¿ Ï/t¿ Ï3  ¿ Ï9¿ Ï@   ¿ ÏßÄ®¿ Ï∏  ¿ Ï◊¿ ÏÔ  ¿ Ïß¿ Ï®¿ ÌSÅ*¿ Ìd  ¿ Ìx'¿ Ìï  ¿ ÌS¿ ÌT ¿ ÓÅê‚¿ Ô#Äõ/// Creates a physical model layer that clips its child to a rounded
/// rectangle.
///
/// A physical model layer casts a shadow based on its [elevation]. ¿ ÔcÅ’ ¿ ÔÓ¿ ÄÄ/// Creates a rounded-rectangular clip.
///
/// The [color] is required.
///
/// The [elevation] parameter must be non-negative.¿ ¿   ¿ #¿ #  ¿ B¿ I  ¿ Z¿ i  ¿ z¿ Å  ¿ ï¿ •  ¿ Ø+¿ ∂  ¿ *¿ 2¿ 3¿ å¿ √¿ …¿ Œ¿ Ÿ¿ œ¿ „¿ È¿ ˙¿ Ù¿ Í¿ ˜¿ Ò¿ Ò¿ Ò¿ Ò)¿ Ò¿ Ò+¿ ÒÁ¿ Ò  ¿ Û’¿ Û„  ¿ Ò<Ä®¿ Ò‘ÄÇ/// The shape of the layer.
///
/// Defaults to [BoxShape.rectangle]. The [borderRadius] affects the corners
/// of the rectangle.   ¿ Ò˙w¿ Ò˛  ¿ Ú¿ Ú   ¿ ÚuÅ]¿ Û¥Å/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This property is ignored if the [shape] is not [BoxShape.rectangle].
///
/// The value null is treated like [BorderRadius.zero].   ¿ ÛÙÄë¿ Û¯  ¿ Ù¿ Ù   ¿ ÙâÅH¿ Ùü   ¿ Ùâ¿ Ùä¿ ı’Å%¿ ıÊ  ¿ ıÓ¿ ˆ   ¿ ˆ	¿ ˆ  ¿ ı’¿ ı÷¿ ˆ˛áF¿ ˜  ¿ ˜¿ ˜&  ¿ ˜.¿ ˜6  ¿ ˆ˛¿ ˆˇ¿ ˛HÅ¿ ˛Y  ¿ ˛m'¿ ˛ä  ¿ ˛H¿ ˛I ¿ ˇeå"¿ jÄ˛/// Creates a physical shape layer that clips its child to a [Path].
///
/// A physical shape layer casts a shadow based on its [elevation].
///
/// See also:
///
///  * [RenderPhysicalModel], which is optimized for rounded rectangles and
///    circles. ¿ ©Åó ¿K¿^Äó/// Creates an arbitrary shape clip.
///
/// The [color] and [clipper] parameters are required.
///
/// The [elevation] parameter must be non-negative.¿e¿l  ¿v*¿ö  ¿¶¿≠  ¿æ¿≈  ¿Ÿ¿È  ¿Û+¿˙  ¿–¿¿¿¿¿¿'¿-¿>¿8¿.¿; ¿DI¿Y   ¿D¿E¿ëÅ%¿¢  ¿™¿º  ¿≈¿÷  ¿ë¿í¿∫Üı¿À  ¿—¿‚  ¿Í¿Ú  ¿∫¿ª¿
≥Ä“¿
ƒ  ¿
ÿ'¿
ı  ¿
≥¿
¥ ¿Uí¿ûB/// Paints a [Decoration] either before or after its child paints. ¿ÃÇ| ¿˛¿Å#/// Creates a decorated box.
///
/// The [decoration], [position], and [configuration] arguments must not be
/// null. By default the decoration paints behind the child.
///
/// The [ImageConfiguration] will be passed to the decoration (with the size
/// filled in) to let it resolve images.¿¿,  ¿;;¿O  ¿|;¿ê  ¿Ω¿…  ¿Y¿k¿l¿ü¿±¿≤¿‚¿÷¿‰¿¿˜¿¿#¿¿%¿;¿@¿F¿A¿L¿X  ¿Ÿ¿‰  ¿)¿<  ¿J!¿]  ¿eq¿ºA/// What decoration to paint.
///
/// Commonly a [BoxDecoration].   ¿ÛÄ∑¿˜  ¿¿   ¿Æx¿H/// Whether to paint the box decoration behind or in front of the child.   ¿IÄã¿M  ¿V¿j   ¿ÿÅo¿'Å+/// The settings to pass to the decoration when painting, so that it can
/// resolve images appropriately. See [ImageProvider.resolve] and
/// [BoxPainter.paint].
///
/// The [ImageConfiguration.textDirection] field is also used by
/// direction-sensitive [Decoration]s for painting and hit-testing.   ¿oÄö¿s  ¿Å¿ï   ¿Åÿ¿   ¿¿¿ÈN¿˙   ¿È¿Í¿;Äè¿L  ¿X¿`  ¿;¿<¿ŒÜ}¿ﬂ  ¿Â¿ˆ  ¿˛¿  ¿Œ¿œ¿OÅ!¿`  ¿t&¿ë  ¿O¿P ¿t£ß¿≤7/// Applies a transformation before painting its child. ¿›Å· ¿¿%6/// Creates a render object that transforms its child.¿,¿>  ¿L¿U  ¿`¿t  ¿Ç¿í  ¿§¿™  ¿«¿◊  ¿È¿ı  ¿Ω¿ ¿ ¿ ¿ ¿"¿"  ¿%ã¿%û  ¿']¿'l  ¿(ìÅv¿)¯ÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// [applyPaintTransform], and therefore [localToGlobal] and [globalToLocal],
/// always honor the transformation, regardless of the value of this property. ¿*¿*  ¿-¿-  ¿ ¬Å>¿!ÓÅ/// The origin of the coordinate system (relative to the upper left corner of
/// this render object) in which to apply the matrix.
///
/// Setting an origin is equivalent to conjugating the transform matrix by a
/// translation. This property is provided just for convenience.   ¿"Äö¿"  ¿"!¿"*   ¿"¥Ç‘¿%pÇé/// The alignment of the origin, relative to the size of the box.
///
/// This is equivalent to setting an origin based on the size of the box.
/// If it is specified at the same time as an offset, both are applied.
///
/// An [AlignmentDirectional.centerStart] value is the same as an [Alignment]
/// whose [Alignment.x] value is `-1.0` if [textDirection] is
/// [TextDirection.ltr], and `1.0` if [textDirection] is [TextDirection.rtl].
/// Similarly [AlignmentDirectional.centerEnd] is the same as an [Alignment]
/// whose [Alignment.x] value is `1.0` if [textDirection] is
/// [TextDirection.ltr], and `-1.0` if [textDirection] is [TextDirection.rtl].   ¿%¨ÄÆ¿%∞  ¿%∫¿%Œ   ¿&^Ä¸¿':Ä¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿'~Ä∂¿'Ç  ¿'ê¿'†   ¿(8W¿(M   ¿(8¿(9¿*%Ç¿+]Å'/// The matrix to transform the child by during painting. The provided value
/// is copied on assignment.
///
/// There is no getter for [transform], because [Matrix4] is mutable, and
/// mutations outside of the control of the render object could not reliably
/// be reflected in the rendering. ¿+g¿+p   ¿,7ÄÀ¿,‚Äë/// The filter quality with which to apply the transform as a bitmap operation.
///
/// {@macro flutter.widgets.Transform.optional.FilterQuality}   ¿-&Å8¿-*  ¿-8¿-H   ¿2ÊÇÓ¿2Û    ¿.bÄû¿.ò./// Sets the transform to the identity matrix.   ¿/ÄΩ¿/L@/// Concatenates a rotation about the x axis into the transform. ¿/T¿/\   ¿/≈ÄΩ¿0@/// Concatenates a rotation about the y axis into the transform. ¿0¿0   ¿0ÜÄΩ¿0Œ@/// Concatenates a rotation about the z axis into the transform. ¿0÷¿0ﬁ   ¿1GÄﬁ¿1é?/// Concatenates a translation by (x, y, z) into the transform. ¿1ò¿1†  ¿1§¿1¨  ¿1¥¿1º  ¿1Ø¿1ø¿2)Äπ¿2],/// Concatenates a scale into the transform. ¿2c¿2k  ¿2o	¿2x  ¿2z	¿2É   ¿5ÿÅY¿5È  ¿5Ò¿6  ¿6¿6  ¿5ÿ¿5Ÿ¿75ÅÆ¿7F  ¿7V¿7h  ¿7q¿7Ç  ¿75¿76¿8ÁÜó¿8¯  ¿8˛¿9  ¿9¿9  ¿8Á¿8Ë¿?Ç|¿?ì  ¿?ß¿?≤  ¿?∏¿?¡  ¿?Ç¿?É¿@Ç¿@  ¿@'&¿@D  ¿@¿@ ¿B¢ ¿BhD/// Scales and positions its child within itself according to [fit]. ¿BìÅà ¿B«¿B÷1/// Scales and positions its child within itself.¿B›¿BÂ  ¿B˛.¿C  ¿C2¿CB  ¿CT¿C`  ¿Cj¿Cp  ¿BÍ¿B¿BÒ¿C¿C%¿C&¿C~¿CÇ¿CÉ¿Cï¿Cê¿Có¿CÆ¿C£¿C∞¿C—¿C¬¿C”¿C˜¿CÈ¿C˘¿D¿D¿D¿D¿D¿D*  ¿F¥¿Fª  ¿Iè¿I°  ¿K[¿Kj  ¿UI¿UO  ¿Ue¿Un  ¿V¿V ¿V¿V¿V¿FR_¿F•E/// How to inscribe the child into the space allocated during layout.   ¿F√Å¿F«  ¿FÀ¿F”   ¿G·Å´¿ItÅl/// How to align the child within its parent's bounds.
///
/// An alignment of (0.0, 0.0) aligns the child to the top-left corner of its
/// parent's bounds. An alignment of (1.0, 0.5) aligns the child to the middle
/// of the right edge of its parent's bounds.
///
/// If this is set to an [AlignmentDirectional] object, then
/// [textDirection] must not be null.   ¿IØÄ©¿I≥  ¿IΩ¿I–   ¿J\Ä¸¿K8Ä¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿K|Ä≤¿KÄ  ¿Ké¿Kû   ¿U}ÄÇ¿U·T/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none].   ¿V$Ä°¿V(  ¿V5
¿V;   ¿DAÄä¿DF    ¿DœU¿D‘    ¿E(Å&¿E-  ¿E?
¿EG   ¿LtÖ…¿Lí  ¿L£$¿LΩ  ¿Lt¿Lu¿LÄ¿LÅ¿RAÉ¿RR   ¿RA¿RB¿V…R¿VŒ    ¿WÑD¿W$    ¿[gÅ‰¿[w  ¿[ê¿[°  ¿[©¿[±   ¿]OÇW¿]`  ¿]f¿]w  ¿]¿]á  ¿]O¿]P¿_™Å∑¿_ª  ¿_À¿_›  ¿_Ê¿_˜  ¿_™¿_´¿aeÄÜ¿av  ¿aÇ¿aç  ¿ae¿af¿aÔÄ‹¿b   ¿b¿b  ¿b%¿b.  ¿aÔ¿a¿bœÅl¿b‡  ¿bÙ&¿c  ¿bœ¿b– ¿d?åU¿e˛Å∏/// Applies a translation transformation before painting its child.
///
/// The translation is expressed as an [Offset] scaled to the child's size. For
/// example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.
///
/// Hit tests will only be detected inside the bounds of the
/// [RenderFractionalTranslation], even if the contents are offset such that
/// they overflow. ¿f5ÄÛ ¿fy¿fîA/// Creates a render object that translates its child's painting.¿fõ¿f¨  ¿fº¿f¬  ¿fﬂ¿fÎ  ¿f’¿g¿f¯¿g¿g¿g ¿g&¿g!¿h-¿h4  ¿jYÅv¿kæÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// applyPaintTransform(), and therefore localToGlobal() and globalToLocal(),
/// always honor the transformation, regardless of the value of this property. ¿g,Ä˛¿hÄŒ/// The translation to apply to the child, scaled to the child's size.
///
/// For example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.   ¿hDÄ®¿hH  ¿hT¿h\   ¿hÅe¿i  ¿i	¿i  ¿i$¿i5  ¿h¿hÒ¿k‘Å ¿kÂ  ¿kı¿l  ¿l¿l!  ¿k‘¿k’¿m¢Å¿m≥  ¿mπ¿m   ¿m“¿m⁄  ¿m¢¿m£¿n∏Äµ¿n…  ¿n›¿nË  ¿nÓ¿n˜  ¿n∏¿nπ¿oqÅ!¿oÇ  ¿oñ&¿o≥  ¿oq¿or ¿v…èl¿x˝Ç-/// Calls callbacks in response to common pointer events.
///
/// It responds to events that can construct gestures, such as when the
/// pointer is pointer is pressed and moved, and then released or canceled.
///
/// It does not respond to events that are exclusive to mouse, such as when the
/// mouse enters and exits a region without pressing any buttons. For
/// these events, use [RenderMouseRegion].
///
/// If it has a child, defers to the child for sizing behavior.
///
/// If it does not have a child, grows to fit the parent-provided constraints. ¿yAÅÕ ¿y⁄¿yÔÄí/// Creates a render object that forwards pointer events to callbacks.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿yˆ¿y¸  ¿z¿z  ¿z&¿z,  ¿z<¿zB  ¿zU¿z[  ¿zo¿zu  ¿zè¿zï  ¿z∞¿z∂  ¿zŒ¿z‘  ¿zË¿zÔ  ¿z¸¿{   	¿{Ä“¿{◊Ä§/// Called when a pointer comes into contact with the screen (for touch
/// pointers), or has its button pressed (for mouse pointers) at this widget's
/// location. ¿{Èw¿|SM/// Called when a pointer that triggered an [onPointerDown] changes position. ¿|eÄê¿|Íh/// Called when a pointer that triggered an [onPointerDown] is no longer in
/// contact with the screen. ¿|˙w¿}cK/// Called when a pointer that has not an [onPointerDown] changes position. ¿}vÄ´¿~{/// Called when the input from a pointer that triggered an [onPointerDown] is
/// no longer directed towards this receiver. ¿~&|¿~çB/// Called when a pan/zoom begins such as from a trackpad gesture. ¿~ßb¿~Û&/// Called when a pan/zoom is updated. ¿Z¿U$/// Called when a pan/zoom finishes. ¿mg¿≈9/// Called when a pointer signal occurs over this object.  ¿Ÿh¿Í  ¿Ä ¿Ä  ¿Ÿ¿⁄¿ÄEÉû¿ÄV  ¿Äb¿Äp  ¿Äv¿ÄÑ  ¿ÄE¿ÄF¿ÉÁÇL¿É¯  ¿Ñ&¿Ñ)  ¿ÉÁ¿ÉË ¿Ü7î5¿âÇ›/// Calls callbacks in response to pointer events that are exclusive to mice.
///
/// It responds to events that are related to hovering, i.e. when the mouse
/// enters, exits (with or without pressing buttons), or moves over a region
/// without pressing buttons.
///
/// It does not respond to common events that construct gestures, such as when
/// the pointer is pressed, moved, then released or canceled. For these events,
/// use [RenderPointerListener].
///
/// If it has a child, it defers to the child for sizing behavior.
///
/// If it does not have a child, it grows to fit the parent-provided constraints.
///
/// See also:
///
///  * [MouseRegion], a widget that listens to hover events using
///    [RenderMouseRegion]. ¿â}Çí ¿äc¿ätÄ›/// Creates a render object that forwards pointer events to callbacks.
///
/// All parameters are optional. By default this method creates an opaque
/// mouse region with no callbacks and cursor being [MouseCursor.defer].¿ä{¿äÅ  ¿äç¿äì  ¿äü¿ä•  ¿ä∞&¿äΩ  ¿ä‹ ¿ä‚  ¿ã¿ã  ¿ã¿ã!  ¿ã+9¿ã=  ¿ä≈¿ä–¿ä—¿ä¯¿ã¿ãN¿ã]¿ã^¿ãu¿ãm¿ãw¿ãú¿ãÜ¿ãû¿ã√¿ãª¿ã≈¿ã‘¿ãŸ¿å¿ã‚¿ã⁄¿ãÙ¿ã‰¿ã˜¿å¿å¿êc¿êh  ¿íÌ.¿ì ¿íÌ¿íÓ¿ì ÄŒ¿ìÁÄ£/// Triggered when a pointer has moved onto or within the region without
/// buttons pressed.
///
/// This callback is not triggered by the movement of the object. ¿ìÛ,¿î ¿ìÛ¿ìÙ¿îU¿îa  ¿ï´¿ï∞  ¿çÑÇ‹¿êNÇ§/// Whether this object should prevent [RenderMouseRegion]s visually behind it
/// from detecting the pointer, thus affecting how their [onHover], [onEnter],
/// and [onExit] behave.
///
/// If [opaque] is true, this object will absorb the mouse pointer and
/// prevent this object's siblings (or any other objects that are not
/// ancestors or descendants of this object) from detecting the mouse
/// pointer even when the pointer is within their areas.
///
/// If [opaque] is false, this object will not affect how [RenderMouseRegion]s
/// behind it behave, which will detect the mouse pointer as long as the
/// pointer is within their areas.
///
/// This defaults to true.   ¿êsÄ∫¿êw  ¿ê~
¿êÑ   ¿ë1Äò¿ë≠`/// How to behave during hit testing.
///
/// This defaults to [HitTestBehavior.opaque] if null.   ¿ëÃÅ¿ë–  ¿ë‡¿ëÚ   ¿î$.¿î@   ¿î$¿î%¿îlÄı¿îp  ¿îw¿îÑ   ¿ïeC¿ïz   ¿ïe¿ïf¿åÄñ¿å$  ¿å,¿å>  ¿åG¿åX  ¿å¿å¿å≠Ä”¿åæ  ¿å ¿åÿ  ¿åﬁ¿åÏ  ¿å≠¿åÆ¿ï m¿ï€  ¿ï‚¿ïÒ  ¿ï ¿ïÀ¿ñ;Å$¿ñL   ¿ñ;¿ñ<¿óch¿ót  ¿óä¿óö  ¿óc¿ód¿óœÇõ¿ó‡  ¿óÙ&¿ò  ¿óœ¿ó– ¿ön™T¿†…ÜT/// Creates a separate display list for its child.
///
/// This render object creates a separate display list for its child, which
/// can improve performance if the subtree repaints at different times than
/// the surrounding parts of the tree. Specifically, when the child does not
/// repaint but its parent does, we can re-use the display list we recorded
/// previously. Similarly, when the child repaints but the surround tree does
/// not, we can re-record its display list without re-recording the display list
/// for the surround tree.
///
/// In some cases, it is necessary to place _two_ (or more) repaint boundaries
/// to get a useful effect. Consider, for example, an e-mail application that
/// shows an unread count and a list of e-mails. Whenever a new e-mail comes in,
/// the list would update, but so would the unread count. If only one of these
/// two parts of the application was behind a repaint boundary, the entire
/// application would repaint each time. On the other hand, if both were behind
/// a repaint boundary, a new e-mail would only change those two parts of the
/// application and the rest of the application would not repaint.
///
/// To tell if a particular RenderRepaintBoundary is useful, run your
/// application in debug mode, interacting with it in typical ways, and then
/// call [debugDumpRenderTree]. Each RenderRepaintBoundary will include the
/// ratio of cases where the repaint boundary was useful vs the cases where it
/// was not. These counts can also be inspected programmatically using
/// [debugAsymmetricPaintCount] and [debugSymmetricPaintCount] respectively. ¿†˙l ¿°+¿°@./// Creates a repaint boundary around [child].¿°C¿°O  ¿°Y¿°^¿°d¿°_¿∑,!¿∑0 ¿∑L¿∫b"¿∫f ¿∫É¿°j/¿°   ¿°j¿°k¿¥ûÇã¿∂ÛÇ6/// The number of times that this render object repainted at the same time as
/// its parent. Repaint boundaries are only useful when the parent and child
/// paint at different times. When both paint at the same time, the repaint
/// boundary is redundant, and may be actually making performance worse.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugAsymmetricPaintCount]
/// for the corresponding count of times where only the parent or only the
/// child painted.   ¿∑RÉ¿∫'Ç≤/// The number of times that either this render object repainted without the
/// parent being painted, or the parent repainted without this object being
/// painted. When a repaint boundary is used at a seam in the render tree
/// where the parent tends to repaint at entirely different times than the
/// child, it can improve performance by reducing the number of paint
/// operations that have to be recorded each frame.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugSymmetricPaintCount] for
/// the corresponding count of times where both the parent and the child
/// painted together.   ¿°ùâ>¿™áÁ/// Capture an image of the current state of this render object and its
/// children.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImage], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to a PNG:
///
/// ```dart
/// class PngHome extends StatefulWidget {
///   const PngHome({super.key});
///
///   @override
///   State<PngHome> createState() => _PngHomeState();
/// }
///
/// class _PngHomeState extends State<PngHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   Future<void> _capturePng() async {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = await boundary.toImage();
///     final ByteData? byteData = await image.toByteData(format: ui.ImageByteFormat.png);
///     final Uint8List pngBytes = byteData!.buffer.asUint8List();
///     print(pngBytes);
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _capturePng,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImage] for a similar API at the layer level.
///  * [dart:ui.Scene.toImage] for more information about the image returned. ¿™¿™  ¿™*¿™ﬂâª¿≥√àb/// Capture an image of the current state of this render object and its
/// children synchronously.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImageSync], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// This API functions like [toImage], except that rasterization begins eagerly
/// on the raster thread and the image is returned before this is completed.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to an image handle:
///
/// ```dart
/// class ImageCaptureHome extends StatefulWidget {
///   const ImageCaptureHome({super.key});
///
///   @override
///   State<ImageCaptureHome> createState() => _ImageCaptureHomeState();
/// }
///
/// class _ImageCaptureHomeState extends State<ImageCaptureHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   void _captureImage() {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = boundary.toImageSync();
///     print('Image dimensions: ${image.width}x${image.height}');
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _captureImage,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImageSync] for a similar API at the layer level.
///  * [dart:ui.Scene.toImageSync] for more information about the image returned. ¿≥—¿≥Ÿ  ¿≥Â¿∫âÅI¿ªAÄ™/// Resets the [debugSymmetricPaintCount] and [debugAsymmetricPaintCount]
/// counts to zero.
///
/// Only valid when asserts are enabled. Does nothing in release builds.   ¿ª÷Å6¿ªÁ  ¿º¿º  ¿º'¿º-  ¿ª÷¿ª◊¿º!¿º<¿Ωá∞¿Ω!  ¿Ω5&¿ΩR  ¿Ω¿Ω ¿ƒƒçà¿«°Ç÷/// A render object that is invisible during hit testing.
///
/// When [ignoring] is true, this render object (and its subtree) is invisible
/// to hit testing. It still consumes space during layout and paints its child
/// as usual. It just cannot be the target of located events, because its render
/// object returns false from [hitTest].
///
/// ## Semantics
///
/// Using this class may also affect how the semantics subtree underneath is
/// collected.
///
/// {@macro flutter.widgets.IgnorePointer.semantics}
///
/// {@macro flutter.widgets.IgnorePointer.ignoringSemantics}
///
/// See also:
///
///  * [RenderAbsorbPointer], which takes the pointer events but prevents any
///    nodes in the subtree from seeing them. ¿«–Å• ¿»¿»#=/// Creates a render object that is invisible to hit testing.¿»*¿»6  ¿»@¿»F  ¿»ZÄπ¿…  ¿»P¿»Z¿»[¿»e¿»ˆ¿»m¿»Ω¿…&¿…¿…(¿…L¿…9¿…N¿…h¿…m¿…s¿…n¿ º¿ ¡  ¿ÕO¿ÕU  ¿…yÅ@¿ £Å/// Whether this render object is ignored during hit testing.
///
/// Regardless of whether this render object is ignored during hit testing, it
/// will still consume space during layout and be visible during painting.
///
/// {@macro flutter.widgets.IgnorePointer.semantics}   ¿ ŒÄ¥¿ “  ¿ €
¿ ·   ¿ÀÜÅ∆¿Õ$ÄÔ/// Whether the semantics of this render object is ignored when compiling the semantics tree.
///
/// {@macro flutter.widgets.IgnorePointer.ignoringSemantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿ÃÄ¿ÃÅ¿Ãã¿Õ¿Ãë¿Ãﬂ¿ÕkÄ£¿Õo  ¿ÕÅ¿Õà   ¿ŒÄò¿Œ#  ¿Œ+¿Œ=  ¿ŒF¿ŒW  ¿Œ¿Œ¿ŒÆÄ∂¿Œø  ¿ŒŸ¿ŒÓ  ¿ŒÆ¿ŒØ¿œhÅB¿œy  ¿œò¿œ∞  ¿œh¿œi¿–ÆÅú¿–ø  ¿–”&¿–  ¿–Æ¿–Ø ¿“Nç¿”Ä∂/// Lays the child out as if it was in the tree, but without painting anything,
/// without making the child available for hit testing, and without taking any
/// room in the parent. ¿”5Äõ ¿”^¿”l&/// Creates an offstage render object.¿”s¿”y  ¿”ç¿”ô  ¿”É¿”∞¿”¶¿”≤¿”√¿”»¿”Œ¿”…¿’E¿’J  ¿”‘Ån¿’,Å@/// Whether the child is hidden from the rest of the tree.
///
/// If true, the child is laid out as if it was in the tree, but without
/// painting anything, without making the child available for hit testing, and
/// without taking any room in the parent.
///
/// If false, the child is included in the tree as normal.   ¿’WÄî¿’[  ¿’d
¿’j   ¿Ÿ8/¿ŸM   ¿Ÿ8¿Ÿ9¿’ÔÄü¿÷  ¿÷¿÷#  ¿’Ô¿’¿÷íÄü¿÷•  ¿÷æ¿÷∆  ¿÷í¿÷ì¿◊5Äü¿◊H  ¿◊b¿◊j  ¿◊5¿◊6¿◊ÿÄü¿◊Î  ¿ÿ¿ÿ  ¿◊ÿ¿◊Ÿ¿ÿ{Äπ¿ÿè  ¿ÿØ¿ÿΩ  ¿ÿ{¿ÿ|¿ŸkÄ«¿Ÿâ  ¿Ÿö$¿Ÿ¥  ¿Ÿk¿Ÿl¿Ÿw¿Ÿx¿⁄6W¿⁄G   ¿⁄6¿⁄7¿⁄ëÄå¿⁄¢   ¿⁄ë¿⁄í¿€!Äò¿€2  ¿€:¿€L  ¿€U¿€f  ¿€!¿€"¿€Ωk¿€Œ  ¿€⁄¿€Â  ¿€Ω¿€æ¿‹,Äé¿‹=  ¿‹C¿‹T  ¿‹\¿‹d  ¿‹,¿‹-¿‹æÄ£¿‹œ  ¿‹È¿‹˛  ¿‹æ¿‹ø¿›eÄ¬¿›v  ¿›ä&¿›ß  ¿›e¿›f¿ﬁ+Å<¿ﬁM   ¿ﬁ+¿ﬁ, ¿ﬂké9¿‚©É7/// A render object that absorbs pointers during hit testing.
///
/// When [absorbing] is true, this render object prevents its subtree from
/// receiving pointer events by terminating hit testing at itself. It still
/// consumes space during layout and paints its child as usual. It just prevents
/// its children from being the target of located events, because its render
/// object returns true from [hitTest].
///
/// ## Semantics
///
/// Using this class may also affect how the semantics subtree underneath is
/// collected.
///
/// {@macro flutter.widgets.AbsorbPointer.semantics}
///
/// {@macro flutter.widgets.AbsorbPointer.ignoringSemantics}
///
/// See also:
///
///  * [RenderIgnorePointer], which has the opposite effect: removing the
///    subtree from considering entirely for the purposes of hit testing. ¿‚ÿÅ∞ ¿„ ¿„3E/// Creates a render object that absorbs pointers during hit testing.¿„:¿„F  ¿„P¿„V  ¿„kÄπ¿‰  ¿„a¿„k¿„l¿„v¿‰¿„~¿„Œ¿‰8¿‰-¿‰:¿‰_¿‰L¿‰a¿‰{¿‰Ä¿‰Ü¿‰Å¿Â„¿ÂË  ¿ËÄ¿ËÜ  ¿‰åÅT¿Â»Å$/// Whether this render object absorbs pointers during hit testing.
///
/// Regardless of whether this render object absorbs pointers during hit
/// testing, it will still consume space during layout and be visible during
/// painting.
///
/// {@macro flutter.widgets.AbsorbPointer.semantics}   ¿ÂˆÄ∑¿Â˙  ¿Ê
¿Ê
   ¿Ê±ÅÃ¿ËUÄÛ/// Whether the semantics of this render object is ignored when compiling the
/// semantics tree.
///
/// {@macro flutter.widgets.AbsorbPointer.ignoringSemantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿Á±¿Á≤¿Áº¿ËG¿Á¬¿Ë¿ËúÄ£¿Ë†  ¿Ë≤¿Ëπ   ¿ÈCÄ¡¿ÈT  ¿È\¿Èn  ¿Èw¿Èà  ¿ÈC¿ÈD¿ÍÄ∂¿Í  ¿Í3¿ÍH  ¿Í¿Í	¿Í¬ÅB¿Í”  ¿ÍÚ¿Î
  ¿Í¬¿Í√¿ÏÅö¿Ï  ¿Ï-&¿ÏJ  ¿Ï¿Ï	 ¿Ì¶És¿ÓÒÅD/// Holds opaque meta data in the render tree.
///
/// Useful for decorating the render tree with information that will be consumed
/// later. For example, you could store information in the render tree that will
/// be used when the user interacts with the render tree but has no visual
/// impact prior to the interaction. ¿Ô.Äÿ ¿Ô∏¿Ô∆ÄÉ/// Creates a render object that hold opaque meta data.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿ÔÕ¿Ô”  ¿Ô‡¿ÔÁ  ¿ÔÙ¿Ô˚   ¿
C¿E0/// Opaque meta data ignored by the render tree.  ¿RÄ≈¿c  ¿w&¿î  ¿R¿S ¿Òöë¿ÒÑb/// Listens for the specified gestures from the semantics server (e.g.
/// an accessibility tool). ¿Ò–Ç
 ¿Ú¿Ú8H/// Creates a render object that listens for specific semantic gestures.¿Ú?¿ÚF  ¿ÚP¿Úe  ¿Úo%¿Úä  ¿Úö1¿Ú∂  ¿Ú—/¿ÚÌ  ¿Û¿Û  ¿Û#¿Û*  ¿Û¿ÛA¿Û:¿ÛC¿Û^¿ÛQ¿Û`¿Ûå¿Ût¿Ûé¿Û√¿Û≠¿Û≈¿ˆ#¿˜  ¿¯:¿¯N  ¿˘÷&¿˘  ¿˚†2¿˚ª  ¿˝é0¿˝©  ¿˛ÛÅ2¿ Å/// The fraction of the dimension of this render box to use when
/// scrolling. For example, if this is 0.8 and the box is 200 pixels
/// wide, then when a left-scroll action is received from the
/// accessibility system, it will translate into a 160 pixel
/// leftwards drag. 
¿ÛﬁÉ¿ˆœÇº/// If non-null, the set of actions to allow. Other actions will be omitted,
/// even if their callback is provided.
///
/// For example, if [onTap] is non-null but [validActions] does not contain
/// [SemanticsAction.tap], then the semantic description of this node will
/// not claim to support taps.
///
/// This is normally used to filter the actions made available by
/// [onHorizontalDragUpdate] and [onVerticalDragUpdate]. Normally, these make
/// both the right and left, or up and down, actions available. For example,
/// if [onHorizontalDragUpdate] is set but [validActions] only contains
/// [SemanticsAction.scrollLeft], then the [SemanticsAction.scrollRight]
/// action will be omitted.   ¿˜Äæ¿˜  ¿˜(¿˜?   ¿˜Ÿ^¿¯'3/// Called when the user taps on the render object.   ¿¯XÄÍ¿¯\  ¿¯b¿¯w   ¿˘FÄç¿˘∑P/// Called when the user presses on the render object for a long period of time.   ¿˙ Å¿˙  ¿˙¿˙+   ¿˚Äë¿˚k=/// Called when the user scrolls to the left or to the right.   ¿˚÷Å5¿˚⁄  ¿˚Ò ¿¸   ¿˝|¿˝],/// Called when the user scrolls up or down.   ¿˝¬Å-¿˝∆  ¿˝€ ¿˝˜   ¿ *É¶¿ ;  ¿ Z¿ r  ¿ *¿ +¿‘t¿Ÿ  ¿Ë¿˘   ¿LÅW¿Q    ¿ßÅW¿¨    ¿ÅR¿    ¿XÅS¿]    ¿	ØÅ˚¿	¿  ¿	‘&¿	Ò  ¿	Ø¿	∞ ¿Æπ¿¿Ò</// Add annotations to the [SemanticsNode] for this subtree. ¿'Ç˘ ¿€¿ıÄ≠/// Creates a render object that attaches a semantic annotation.
///
/// If the [SemanticsProperties.attributedLabel] is not null, the [textDirection] must also not be null.¿¸¿  ¿'¿0  ¿?¿E  ¿[¿a  ¿Ä¿Ü  ¿£¿©  ¿∆¿÷  ¿P¿u¿ò¿ª¿˜¿Ï¿˘¿ ¿¿"¿P¿>¿R¿~¿l¿Ä¿©¿ö¿´¿Œ¿¬¿–¿‰¿È¿Ô¿Í¿ß¿ª  ¿9¿>  ¿Ã¿—  ¿¿  ¿Ô¿Ù  ¿ Z"¿ l  ¿ Ä"¿ í  ¿ ¶+¿ ∏  ¿ ’+¿ Á  ¿!!¿!  ¿"ﬁ¿"Ì  ¿$ÄÄ¿äK/// All of the [SemanticsProperties] for this [RenderSemanticsAnnotations].   ¿ Ä∆¿Œ  ¿Ÿ¿Ó   ¿îÅ¢¿År/// If 'container' is true, this [RenderObject] will introduce a new
/// node in the semantics tree. Otherwise, the semantics will be
/// merged with the semantics of any ancestors.
///
/// Whether descendants of this [RenderObject] can add their semantic information
/// to the [SemanticsNode] introduced by this configuration is controlled by
/// [explicitChildNodes].   ¿LÄâ¿P  ¿Z
¿`   ¿ŸÇ¿üÇ¢/// Whether descendants of this [RenderObject] are allowed to add semantic
/// information to the [SemanticsNode] annotated by this widget.
///
/// When set to false descendants are allowed to annotate [SemanticsNode]s of
/// their parent with the semantic information they want to contribute to the
/// semantic tree.
/// When set to true the only way for descendants to contribute semantic
/// information to the semantic tree is to introduce new explicit
/// [SemanticsNode]s to the tree.
///
/// This setting is often used in combination with
/// [SemanticsConfiguration.isSemanticBoundary] to create semantic boundaries
/// that are either writable or not for children.   ¿ËÄ•¿Ï  ¿ˇ
¿   ¿ëÅ~¿ÈÅB/// Whether descendants of this [RenderObject] should have their semantic
/// information ignored.
///
/// When this flag is set to true, all child semantics nodes are ignored.
/// This can be used as a convenience for cases where a child is wrapped in
/// an [ExcludeSemantics] widget and then another [Semantics] widget.   ¿,Äü¿0  ¿A
¿G   ¿œÅ¿∆Ä„/// Whether to block user interactions for the semantics subtree.
///
/// Setting this true prevents user from activating pointer related
/// [SemanticsAction]s, such as [SemanticsAction.tap] or
/// [SemanticsAction.longPress].   ¿	Äü¿  ¿
¿$   ¿!*Å±¿"ªÅm/// If non-null, sets the [SemanticsNode.textDirection] semantic to the given
/// value.
///
/// This must not be null if [SemanticsProperties.attributedLabel],
/// [SemanticsProperties.attributedHint],
/// [SemanticsProperties.attributedValue],
/// [SemanticsProperties.attributedIncreasedValue], or
/// [SemanticsProperties.attributedDecreasedValue] are not null.   ¿"ˇÄü¿#  ¿#¿#!   ¿¨Å|¿±  ¿…¿ﬁ   ¿,Ä∑¿>  ¿X¿m   ¿ÁÄ∑¿˘  ¿¿(   ¿¢Ä˙¿¥  ¿ﬁ¿Û   ¿†Äˇ¿≤  ¿‹¿Ò   ¿£Ä≥¿µ  ¿Œ¿„   ¿#¢Ä´¿#≥  ¿#Õ¿#‚  ¿#¢¿#£¿$Qö6¿$b  ¿$Å¿$ô  ¿$Q¿$R¿>ã7¿>ê    ¿>∆C¿>À    ¿??¿?    ¿?PE¿?U    ¿?ôG¿?û    ¿?‰A¿?È    ¿@)E¿@.    ¿@rA¿@w    ¿@∑A¿@º    ¿@¸9¿A    ¿A97¿A>    ¿At;¿Ay    ¿A≥Äå¿A∏  ¿A›¿A„   ¿BCÄé¿BH  ¿Bn¿Bt   ¿B’ÄÇ¿B⁄  ¿B˙¿C    ¿C[ÄÑ¿C`  ¿CÅ¿Cá   ¿C„i¿CË  ¿C˝¿D   ¿DPN¿DU  ¿De¿Dm   ¿D¢c¿Dß    ¿E	c¿E     ¿EpÑÌ¿FhÄÒ/// Causes the semantics of all earlier render objects below the same semantic
/// boundary to be dropped.
///
/// This is useful in a stack where an opaque mask should prevent interactions
/// with the render objects painted below the mask. ¿FòÄ‘ ¿FÙ¿GW/// Create a render object that blocks semantics for nodes below it in paint
/// order.¿G¿G  ¿G%¿G+  ¿G5¿GL¿GB¿GN¿G_¿Gd¿Gj¿Ge¿H/¿H4  ¿GpÄº¿HÄò/// Whether this render object is blocking semantics of previously painted
/// [RenderObject]s below a common semantics boundary from the semantic tree.   ¿HAÄá¿HE  ¿HN
¿HT   ¿HÃÄ…¿H›  ¿H¸¿I  ¿HÃ¿HÕ¿IôÄ¬¿I™  ¿Iæ&¿I€  ¿Iô¿Iö ¿J_É¿K√Å]/// Causes the semantics of all descendants to be merged into this
/// node such that the entire subtree becomes a single leaf in the
/// semantics tree.
///
/// Useful for combining the semantics of multiple render objects that
/// form part of a single conceptual widget, e.g. a checkbox, a label,
/// and the gesture detector that goes with them. ¿KÛÄà ¿LA¿LUK/// Creates a render object that merges the semantics from its descendants.¿LX¿Ld  ¿Ln¿Ls¿Ly¿Lt  ¿LÄ„¿Lê  ¿LØ¿L«  ¿L¿LÄ ¿MfÑ°¿NìÅ&/// Excludes this subtree from the semantic tree.
///
/// When [excluding] is true, this render object (and its subtree) is excluded
/// from the semantic tree.
///
/// Useful e.g. for hiding text that is redundant with other text next
/// to it (e.g. text included only for the visual effect). ¿N≈Ä∆ ¿O¿O$F/// Creates a render object that ignores the semantics of its subtree.¿O+¿O7  ¿OA¿OG  ¿OR¿Oj¿O_¿Ol¿O~¿OÉ¿Oâ¿OÑ¿O¯¿O˝  ¿Oèf¿O›B/// Whether this render object is excluded from the semantic tree.   ¿PÄä¿P  ¿P
¿P   ¿PôÄ§¿P™  ¿Pƒ¿PŸ  ¿Pô¿Pö¿QAÄƒ¿QR  ¿Qf&¿QÉ  ¿QA¿QB ¿R	ÑÃ¿SòÅà/// A render objects that annotates semantics with an index.
///
/// Certain widgets will automatically provide a child index for building
/// semantics. For example, the [ScrollView] uses the index of the first
/// visible child semantics node to determine the
/// [SemanticsConfiguration.scrollIndex].
///
/// See also:
///
///  * [CustomScrollView], for an explanation of scroll semantics. ¿S Ä¬ ¿T¿T0M/// Creates a render object that annotates the child semantics with an index.¿T7¿TC  ¿TM¿T[  ¿To¿Th¿Tq¿T¿TÑ¿Tä¿TÖ¿Tﬁ
¿T‚  ¿TêK¿TÀ0/// The index used to annotated child semantics.   ¿TÏ|¿T  ¿Tˆ	¿T˚   ¿UlÄ®¿U}  ¿Uú¿U¥  ¿Ul¿Um¿VÄª¿V)  ¿V=&¿VZ  ¿V¿V ¿V◊á€¿W¶Ä»/// Provides an anchor for a [RenderFollowerLayer].
///
/// See also:
///
///  * [CompositedTransformTarget], the corresponding widget.
///  * [LeaderLayer], the layer that this render object creates. ¿W”Ä© ¿X¿X6/// Creates a render object that uses a [LeaderLayer].¿X$¿X8  ¿XA¿XM  ¿X`¿XZ¿Xb¿Xo¿Xt¿Xz¿Xu¿Y|¿YÜ  ¿[ó¿[ù  ¿XÄÄ˘¿YkÄ“/// The link object that connects this [RenderLeaderLayer] with one or more
/// [RenderFollowerLayer]s.
///
/// The object must not be associated with another [RenderLeaderLayer] that is
/// also being painted.   ¿YèÄÓ¿Yì  ¿Yò¿Y£   ¿ZÅ4¿Zñ   ¿ZÅ¿ZÇ¿[µ}¿[∆   ¿[µ¿[∂¿\6Å∑¿\G  ¿\M¿\^  ¿\f¿\n  ¿\6¿\7¿]ÒÄø¿^  ¿^&¿^3  ¿]Ò¿]Ú ¿^¥úô¿`ÿÇ/// Transform the child so that its origin is [offset] from the origin of the
/// [RenderLeaderLayer] with the same [LayerLink].
///
/// The [RenderLeaderLayer] in question must be earlier in the paint order.
///
/// Hit testing on descendants of this render object will only work if the
/// target position is within the box that this render object's parent considers
/// to be hittable.
///
/// See also:
///
///  * [CompositedTransformFollower], the corresponding widget.
///  * [FollowerLayer], the layer that this render object creates. ¿aÅÊ ¿aB¿aU8/// Creates a render object that uses a [FollowerLayer].¿a\¿ap  ¿ay¿a  ¿aõ¿a£  ¿aº*¿a«  ¿aÏ,¿a˜  ¿b¿b*  ¿aë¿a´¿a±¿a≤¿a’¿aﬁ¿aﬂ¿b¿b¿b¿b=¿b7¿b?¿b^¿bL¿b`¿bÅ¿by¿bÉ¿b†¿bí¿b¢¿b«¿b∑¿b…¿b‡¿bÂ¿bÎ¿bÊ¿cå¿cñ  ¿f@¿fE  ¿gä¿gë  ¿k¿k  ¿lÈ¿lÛ  ¿bÒÄò¿c{w/// The link object that connects this [RenderFollowerLayer] with a
/// [RenderLeaderLayer] earlier in the paint order.   ¿cüv¿c£  ¿c®¿c≥   ¿dÇ$¿fÅ‚/// Whether to show the render object's contents when there is no
/// corresponding [RenderLeaderLayer] with the same [link].
///
/// When the render object is linked, the child is positioned such that it has
/// the same global position as the linked [RenderLeaderLayer].
///
/// When the render object is not linked, then: if [showWhenUnlinked] is true,
/// the child is visible and not repositioned; if it is false, then child is
/// hidden, and its hit testing is also disabled.   ¿fZÄï¿f^  ¿fo
¿fu   ¿fÛÄî¿gur/// The offset to apply to the origin of the linked [RenderLeaderLayer] to
/// obtain this render object's origin.   ¿gúy¿g†  ¿gß¿gØ   ¿hÇÚ¿jÌÇ©/// The anchor point on the linked [RenderLeaderLayer] that [followerAnchor]
/// will line up with.
///
/// {@template flutter.rendering.RenderFollowerLayer.leaderAnchor}
/// For example, when [leaderAnchor] and [followerAnchor] are both
/// [Alignment.topLeft], this [RenderFollowerLayer] will be top left aligned
/// with the linked [RenderLeaderLayer]. When [leaderAnchor] is
/// [Alignment.bottomLeft] and [followerAnchor] is [Alignment.topLeft], this
/// [RenderFollowerLayer] will be left aligned with the linked
/// [RenderLeaderLayer], and its top edge will line up with the
/// [RenderLeaderLayer]'s bottom edge.
/// {@endtemplate}
///
/// Defaults to [Alignment.topLeft].   ¿k)Äé¿k-  ¿k:¿kE   ¿kªÅ+¿lƒÄÓ/// The anchor point on this [RenderFollowerLayer] that will line up with
/// [followerAnchor] on the linked [RenderLeaderLayer].
///
/// {@macro flutter.rendering.RenderFollowerLayer.leaderAnchor}
///
/// Defaults to [Alignment.topLeft].   ¿mÄî¿m
  ¿m¿m$   ¿mÁ4¿m¸   ¿mÁ¿mË¿n|¿nt3/// The layer we created when we were last painted.  ¿nU¿nV¿mûE¿mØ   ¿mû¿mü¿nüÅü¿oÁÅ3/// Return the transform that was used in the last composition phase, if any.
///
/// If the [FollowerLayer] has not yet been created, was never composited, or
/// was unable to determine the transform (see
/// [FollowerLayer.getLastTransform]), this returns the identity matrix (see
/// [Matrix4.identity].   ¿pBÅÏ¿pS  ¿p[¿pm  ¿pv¿pá  ¿pB¿pC¿r2ÅV¿rC  ¿rS¿re  ¿rn¿r  ¿r2¿r3¿såÖâ¿sù  ¿s£¿s¥  ¿sº¿sƒ  ¿så¿sç¿y}¿y*  ¿y>¿yI  ¿yO¿yX  ¿y¿y¿yöÅ±¿y´  ¿yø&¿y‹  ¿yö¿yõ ¿{Oá]¿|CÄÌ/// Render object which inserts an [AnnotatedRegionLayer] into the layer tree.
///
/// See also:
///
///  * [Layer.find], for an example of how this value is retrieved.
///  * [AnnotatedRegionLayer], the layer this render object creates.¿|Y¿|Y¿|áÅ ¿}ö¿}ØÅ/// Creates a new [RenderAnnotatedRegion] to insert [value] into the
/// layer tree.
///
/// If [sized] is true, the layer is provided with the size of this render
/// object to clip the results of [Layer.find].
///
/// Neither [value] nor [sized] can be null.¿}∂¿}¬  ¿}Ã¿}€  ¿}Â¿}Ò  ¿~¿}˛¿~¿~¿~¿~¿~9¿~,¿~;¿~F¿~^¿~G¿~[¿~]¿~\¿~_¿~`¿~j¿~o¿~u¿~p¿~Õ¿~œ  ¿»¿Õ  ¿ÄO7¿Äz  ¿Äã4¿Ä¢ ¿Äã¿Äå¿Äª¿~{O¿~∫6/// A value which can be retrieved using [Layer.find].   ¿~Ÿ{¿~›  ¿~‰
¿~Á   ¿Xm¿µQ/// Whether the render object will pass its [size] to the [AnnotatedRegionLayer].   ¿◊t¿€  ¿·
¿Á   ¿ÄƒÅé¿Ä’  ¿Ä€¿ÄÏ  ¿ÄÙ¿Ä¸  ¿Äƒ¿Ä≈¿ÇVT¿Çg   ¿ÇV¿ÇW  ê¡Ç0êÍ#/// How to behave during hit tests.  ê˛ÄñëàÄÖ/// Targets that defer to their children receive events within their bounds
/// only if one of their children is hit by the hit test. ëôÄΩíPÄ∞/// Opaque targets can be hit by hit tests, causing them to both receive
/// events within their bounds and prevent targets visually behind them from
/// also receiving events. í[Äìí„ÄÉ/// Translucent targets both receive events within their bounds and permit
/// targets visually behind them to also receive events.    ¿âÄ ¿≥$/// Where to paint a box decoration.  ¿ >¿˛1/// Paint the box decoration behind the children. ¿C¿F6/// Paint the box decoration in front of the children.         	¿ éÒÄø¿ èÇÄà/// Signature for a function that creates a [Shader] for a given [Rect].
///
/// Used by [RenderShaderMask] and the [ShaderMask] widget.  ¿ è£¿ è©   ¿pñÄª¿qq/// Signature for listening to [PointerDownEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿q9¿qK   ¿qSÄª¿qÕq/// Signature for listening to [PointerMoveEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿qˆ¿r   ¿rÄµ¿rào/// Signature for listening to [PointerUpEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿rØ¿rø   ¿r«Ä¡¿sCs/// Signature for listening to [PointerCancelEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿sn¿sÇ   ¿säÄ”¿ty/// Signature for listening to [PointerPanZoomStartEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿t=¿tW   ¿t_Ä÷¿t‚z/// Signature for listening to [PointerPanZoomUpdateEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿u¿u/   ¿u7ÄÕ¿u∑w/// Signature for listening to [PointerPanZoomEndEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿uÊ¿u˛   ¿vÄ¡¿vÇs/// Signature for listening to [PointerSignalEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿v≠¿v¡   áâ≠à≠ÅÇ/// Implementation of [RenderProxyBox].
///
/// Use this mixin in situations where the proxying behavior
/// of [RenderProxyBox] is desired but inheriting from [RenderProxyBox] is
/// impractical (e.g. because you want to inherit from a different class).
///
/// If a class already inherits from [RenderProxyBox] and also uses this mixin,
/// you can safely delete the use of the mixin.à¡à¡   âÅâ  â'â5  ââäwä  ä7ä?  äääÜwäô  ä≤ä∫  äÜäáãwã  ã.ã6  ããã|wãè  ã©ã±  ã|ã}ã˜Äƒå  å+å9  ã˜ã¯åøÄ≠å›  åÓ$ç  åøå¿åÀåÃçpÄ¶çÅ   çpçqéÄÍé¨Äà/// Calculate the size the [RenderProxyBox] would have under the given
/// [BoxConstraints] for the case where it does not have a child. é¬é“   èÄùè  è)è;  èDèU  èè	è©Oè∫  èŒè‹  è‚èÎ  è©è™è¸Ä¡ê  êê$  ê,ê4  è¸è˝àïàñ¿ }ºé‚¿ ~˝Å:/// Implementation of [RenderAnimatedOpacity] and [RenderSliverAnimatedOpacity].
///
/// This mixin allows the logic of animating opacity to be used with different
/// layout models, e.g. the way that [RenderAnimatedOpacity] uses it for [RenderBox]
/// and [RenderSliverAnimatedOpacity] uses it for [RenderSliver].¿ ¿  ¿ U¿ Z  ¿ ¿!¿ ∆  ¿ Çµ¿ Ç»  ¿ ÖÖ¿ Öã  ¿ eX¿ z   ¿ e¿ f¿ Ä∆ÅÏ¿ ÇùÅ¨/// The animation that drives this render object's opacity.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// To change the opacity of a child in a static manner, not animated,
/// consider [RenderOpacity] instead.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ Ç‘Å(¿ Çÿ  ¿ Ç‡¿ ÇÛ   ¿ Ñ ÅÇ¿ ÖOÅ5/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ Ö¶Ä±¿ Ö™  ¿ Ö¡
¿ Ö«   ¿ ÊÄ‹¿ ˛  ¿ Ä)¿ Ä7  ¿ Ê¿ Á¿ Ü[Äª¿ Ül  ¿ Üs¿ ÜÇ  ¿ Ü[¿ Ü\¿ á_¿ á+   ¿ á¿ á¿ á}Ç¿ áÇ    ¿ âëv¿ â¢  ¿ âÆ¿ âº  ¿ âë¿ âí¿ äÄë¿ ä  ¿ ä"¿ ä3  ¿ ä;¿ äC  ¿ ä¿ ä¿ ä†ÄÆ¿ ä±  ¿ äÀ¿ ä‡  ¿ ä†¿ ä°¿ ãRÅJ¿ ãc  ¿ ãw&¿ ãî  ¿ ãR¿ ãS    ì¡ <ÄÜÄ§Ä•ÄÊÄÁÅÅ:ÅbÅãÅ≥Å¥Å«Å‹Å˘ÇÇÇ<ÇRÇfÇvÇäÇúÇùÇ›Ç·É*ÉxÉ«ÑÑÑ^ÑØÑ˛ÖÖÖ$Ö(ÖxÖâÖ˝ÜÜ%ÜmÜ∫ÜÃÜÛááááá:á>á{á∆àààeàïàßâââ=âââ¨â◊â˛äää	ääHääÉäÑäêä√ä˙ä˛äˇãã>ãuãyãzãÜãπããÙãıååDå|å∏åºåΩå…å÷ççiçmçnçzçìçÿéééééaé•é‡èèèèèbè¢è¶èßè≥è˘è˙êê=êfêêçêìê∫êæê¿ê¡êÂê¸ëJëÜëñëóë‚í1íNíXíYí¶í·ííÚíÛì2ìLìñì…ìœîî9îkîÅîñîóîËï+ï1ïcïiï∞ïÃïÕïŸñ!ñ=ñ`ñ∏ñ˙ó/ó7ó=óSóWóXódóØó∞óºòò,òâòçòèòêò¡ò≈ôô]ô≠ô∫ôæööWötö®öﬁö‰õõ7õMõÄõªõÚúúúHúéú∑úÎùù>ùLùRùvùçùëùíùûù—û+ûYû_û†ûºûü+ü1üCüGüHüTüáü·†††V†r†¶†·†Á†˘†˝†˛°
°=°ô°»°Œ¢¢-¢b¢ü¢•¢∏¢º¢Ω¢…¢¸£X£á£ç£œ£Ï§!§^§d§w§{§|§à§°§⁄§Û•K•e•r•¡•«•À•Ã•ÿ•Â¶%¶>¶ç¶ö¶È¶Ô¶Û¶Ùß ß@ßkß{ßîß∆ßﬁ®®B®J®]®g®k®l®x®Ω®Ë©Q©U©W©X©ë©‘©ÿ™%™p™ª´
´#´'´r´∏´»´¯¨I¨~¨Ñ¨À¨ﬂ¨Ù≠
≠1≠Y≠y≠ö≠∑≠÷≠Î≠ÏÆAÆeÆyÆòÆ≤Æ–ÆﬁÆ‰Æ˚ØØØØnØîØ©Ø…Ø„∞∞∞∞.∞E∞I∞J∞ã∞¶∞Ã±7±_±œ±÷±⁄±€≤=≤V≤®≤◊≤›≥≥!≥"≥.≥;≥{≥î≥¥≥È≥≥Ù≥ı¥¥¥3¥S¥Ö¥å¥ê¥ë¥ù¥‚µµfµ¡µ≈µ«µ»∂∂∂S∂¢∂∂Ù∑<∑å∑ƒ∑»∏∏c∏≤∏˘∏˝πIπöπÎ∫9∫á∫’ª#ªqªæººDºuº≤º∏º˚ΩΩ'ΩHΩjΩèΩ≤Ω«Ω»ΩÚΩ¯æHæèæπæ–æÚøø'øHøVø\øvøçøëøíøûø—øÏ¿ @¿ @¿ @/¿ @a¿ @g¿ @w¿ @{¿ @|¿ @à¿ @ª¿ @÷¿ @˙¿ A ¿ A¿ AK¿ AQ¿ Aa¿ Ae¿ Af¿ Ar¿ A•¿ Aø¿ A‚¿ AË¿ B¿ B3¿ B9¿ BI¿ BM¿ BN¿ BZ¿ Bç¿ Bß¿ B ¿ B–¿ BÈ¿ C¿ C!¿ C1¿ C5¿ C6¿ Cm¿ Cõ¿ C´¿ Cˆ¿ D¿ DH¿ Dü¿ D¿ EB¿ E`¿ Ek¿ Es¿ EÜ¿ Eê¿ Eë¿ E∞¿ E”¿ EŸ¿ E⁄¿ F¿ F¿ F¿ Fd¿ F∞¿ F«¿ F·¿ G¿ G¿ G9¿ G^¿ Gd¿ Ge¿ G≥¿ G˝¿ HI¿ H`¿ Ha¿ Hâ¿ H≠¿ H“¿ Hÿ¿ HŸ¿ I¿ I)¿ IN¿ IT¿ IU¿ I}¿ I°¿ I∆¿ IÃ¿ IÕ¿ I˜¿ J¿ JB¿ JH¿ JI¿ JÄ¿ JÑ¿ JÖ¿ Jë¿ Jû¿ Jﬁ¿ K	¿ K¿ K¿ K¿ K3¿ K]¿ Kv¿ Kß¿ K≠¿ K±¿ K≤¿ Kæ¿ L¿ L.¿ Ln¿ Lr¿ Lt¿ Lu¿ L±¿ Lµ¿ M¿ MR¿ MÜ¿ Mä¿ M÷¿ N&¿ Nr¿ Nº¿ O	¿ O1¿ O5¿ OÖ¿ O—¿ P¿ P¿ P`¿ PÆ¿ P˝¿ Q¿ Q¿ Q&¿ Q*¿ Qy¿ Q¿¿ R¿ R!¿ Rm¿ R∞¿ R˝¿ S1¿ Se¿ Sµ¿ Sª¿ T¿ T,¿ TE¿ T\¿ Tt¿ Tä¿ Tø¿ Tˆ¿ U¿ U6¿ UK¿ UL¿ Uó¿ Uù¿ U≈¿ UÏ¿ V¿ V#¿ VM¿ Vl¿ Vz¿ VÄ¿ Vò¿ VØ¿ V≥¿ V¥¿ W ¿ W¿ W.¿ WW¿ Wn¿ Wê¿ W∫¿ W⁄¿ WË¿ WÓ¿ X¿ X¿ X"¿ X#¿ X\¿ Xx¿ Xê¿ X§¿ X™¿ X”¿ X◊¿ Xÿ¿ X‰¿ Y¿ YD¿ YH¿ YI¿ YU¿ Yà¿ Y°¿ Y≥¿ Yπ¿ Y˜¿ Z!¿ Z%¿ Z&¿ Z2¿ Ze¿ Z~¿ Zê¿ Zñ¿ Z±¿ ZÍ¿ Z¿ [¿ [K¿ [w¿ [{¿ [|¿ [à¿ [ª¿ [‘¿ [Ê¿ [Ï¿ \¿ \@¿ \F¿ \b¿ \°¿ \Õ¿ \—¿ \“¿ ]3¿ ]L¿ ]t¿ ]≈¿ ]Â¿ ^6¿ ^>¿ ^_¿ ^±¿ ^“¿ _&¿ _.¿ _]¿ _j¿ _ç¿ _ì¿ _ó¿ _ò¿ _§¿ _±¿ _Ò¿ `
¿ `?¿ `_¿ `f¿ `j¿ `k¿ `w¿ `ê¿ `©¿ `€¿ `˚¿ a¿ a¿ a¿ a¿ aX¿ aÉ¿ aø¿ a˝¿ b¿ b¿ b¿ b9¿ b=¿ bã¿ b€¿ c¿ c¿ c`¿ c∞¿ c˛¿ dI¿ dó¿ d¿¿ dƒ¿ e¿ e_¿ eÆ¿ e≈¿ e…¿ e◊¿ e€¿ f*¿ fr¿ f¡¿ f‘¿ g#¿ gg¿ g∂¿ gÎ¿ h ¿ hq¿ hã¿ h°¿ h∂¿ h∑¿ h√¿ hˆ¿ i¿ i!¿ i'¿ iC¿ iÅ¿ iá¿ i§¿ i‘¿ iÿ¿ iŸ¿ iÂ¿ j¿ j1¿ jC¿ jI¿ je¿ j£¿ j©¿ j∆¿ jˆ¿ j˙¿ j˚¿ k¿ k:¿ kg¿ kk¿ kl¿ kÕ¿ kÊ¿ l¿ la¿ lÇ¿ lΩ¿ l≈¿ lÙ¿ m¿ m$¿ m*¿ m.¿ m/¿ m;¿ mH¿ mà¿ m°¿ m÷¿ mˆ¿ m˝¿ n¿ n¿ n¿ n'¿ n@¿ nr¿ ní¿ nô¿ nù¿ nü¿ n†¿ n·¿ o¿ ox¿ oë¿ oß¿ oº¿ oΩ¿ o…¿ p¿ p¿ p!¿ p#¿ p$¿ pO¿ pS¿ p£¿ pÿ¿ p‹¿ q'¿ qq¿ qπ¿ r	¿ r6¿ rk¿ rq¿ r∂¿ r»¿ r‚¿ s¿ s!¿ sR¿ sm¿ s¶¿ s›¿ sÚ¿ sÛ¿ sˇ¿ tA¿ tB¿ tN¿ tÜ¿ tá¿ tï¿ tñ¿ tÀ¿ t—¿ u!¿ u:¿ u@¿ uÑ¿ uÀ¿ u‹¿ u˛¿ v¿ v/¿ vY¿ vv¿ vÑ¿ vä¿ v∆¿ vÔ¿ w¿ w:¿ wr¿ wö¿ w†¿ w∆¿ x¿ x*¿ x0¿ x4¿ x5¿ x{¿ xÅ¿ xø¿ x≈¿ xﬁ¿ y¿ y<¿ yg¿ yì¿ y°¿ yß¿ yÃ¿ yÏ¿ y¿ yÒ¿ y˝¿ z#¿ zE¿ z\¿ z`¿ za¿ zm¿ z¿¿ z˚¿ {¿ {'¿ {+¿ {,¿ {8¿ {o¿ {ó¿ {•¿ {´¿ {Õ¿ {—¿ {“¿ {ﬁ¿ |¿ |b¿ |y¿ |¿ |É¿ |Ñ¿ |ê¿ |’¿ } ¿ }8¿ }µ¿ }π¿ }ª¿ }º¿ ~¿ ~¿ ~`¿ ~µ¿ ~˜¿ S¿ b¿ c¿ o¿ æ¿ „¿ ‰¿ ¿ ÄC¿ ÄÖ¿ Ä¶¿ Äø¿ Ä√¿ Äƒ¿ Å¿ Å¿ ÅX¿ Åq¿ Åw¿ Å¿¿ ÅË¿ ÅÓ¿ Ç>¿ ÇÖ¿ Ç≥¿ Ç“¿ Ç˚¿ É¿ É&¿ É,¿ ÉT¿ ÉÇ¿ Éà¿ Éû¿ É≤¿ É›¿ É„¿ É˘¿ É˝¿ É˛¿ ÑD¿ ÑJ¿ Ñà¿ Ñé¿ Ñß¿ Ñ≠¿ Ñ˝¿ ÖD¿ ÖÉ¿ Ö§¿ Öœ¿ Ö˚¿ Ü	¿ Ü¿ Ü4¿ ÜT¿ ÜX¿ ÜY¿ Üe¿ Üä¿ Ü£¿ ÜÃ¿ á¿ á¿ á¿ á$¿ á6¿ áb¿ áv¿ áz¿ á{¿ áï¿ á∑¿ áÒ¿ à¿ àS¿ àÑ¿ à‘¿ à˛¿ â¿ â.¿ âX¿ â|¿ âÑ¿ âä¿ âé¿ âè¿ âõ¿ âƒ¿ âÊ¿ ä¿ ä¿ ä	¿ ä¿ äL¿ äc¿ äq¿ äw¿ äô¿ äù¿ äû¿ ä™¿ äÍ¿ ã.¿ ãE¿ ãK¿ ãO¿ ãP¿ ã\¿ ã°¿ ãÃ¿ å¿ åô¿ åù¿ åü¿ å†¿ åÁ¿ åÎ¿ ç<¿ çh¿ ç»¿ ç˝¿ é¿ é?¿ éh¿ é~¿ éî¿ é∞¿ éÍ¿ éÓ¿ é¿ éÒ¿ è:¿ è>¿ èz¿ è±¿ è≤¿ èÎ¿ èÔ¿ ê>¿ ês¿ ê£¿ ê˚¿ ë¿ ë&¿ ëR¿ ëÄ¿ ë©¿ ë»¿ ë›¿ ëﬁ¿ ëÍ¿ í+¿ í,¿ íj¿ íp¿ íø¿ ì¿ ì¿ ìN¿ ìh¿ ì∂¿ ìÓ¿ î&¿ îH¿ îu¿ îô¿ îß¿ î≠¿ î ¿ î‡¿ î‰¿ îÂ¿ ï)¿ ï/¿ ï~¿ ï…¿ ïÚ¿ ñ
¿ ñ-¿ ñL¿ ñZ¿ ñ`¿ ñx¿ ñé¿ ñí¿ ñì¿ ñü¿ ñ”¿ ñ‘¿ ñ‡¿ ó¿ ó0¿ óP¿ ós¿ óÄ¿ ó∑¿ ó⁄¿ ó¸¿ ò2¿ òD¿ òp¿ òÖ¿ òë¿ òû¿ ò≤¿ ò∏¿ òº¿ òæ¿ òø¿ ô¿ ô¿ ôa¿ ôu¿ ô©¿ ô ¿ ôœ¿ ö¿ öÖ¿ öù¿ öª¿ öœ¿ ö–¿ ö‹¿ õ%¿ õ&¿ õv¿ õá¿ õç¿ õ⁄¿ õÌ¿ ú¿ ú/¿ úT¿ úp¿ ú~¿ úÑ¿ úô¿ úØ¿ ú≥¿ ú¥¿ ù¿ ù¿ ù"¿ ùZ¿ ùÉ¿ ùõ¿ ùæ¿ ù›¿ ùÎ¿ ùÒ¿ û	¿ û¿ û#¿ û$¿ û0¿ ûd¿ ûe¿ ûq¿ û®¿ û¡¿ û·¿ ü¿ ü'¿ üL¿ üÇ¿ üî¿ ü¿¿ ü’¿ ü·¿ üÓ¿ †¿ †¿ †¿ †¿ †¿ †<¿ †@¿ †â¿ †ö¿ †û¿ †Ô¿ †Û¿ °<¿ °à¿ °ô¿ °ù¿ °Ë¿ ¢6¿ ¢á¿ ¢◊¿ ¢€¿ ¢È¿ ¢Ì¿ £6¿ £Å¿ £ ¿ §¿ §b¿ §ó¿ §∑¿ §Ω¿ •¿ •P¿ •Q¿ •n¿ •o¿ •≤¿ •∏¿ ¶¿ ¶W¿ ¶n¿ ¶z¿ ¶«¿ ¶»¿ ß¿ ßI¿ ßO¿ ßû¿ ßÓ¿ ®¿ ®¿ ®d¿ ®e¿ ®∞¿ ®‘¿ ®Ï¿ ®Ì¿ ©2¿ ©u¿ ©©¿ ©Ø¿ ©Û¿ ™:¿ ™}¿ ™ƒ¿ ´¿ ´¿ ´R¿ ´£¿ ´Ù¿ ¨E¿ ¨K¿ ¨ì¿ ¨‚¿ ¨Ô¿ ¨ı¿ ≠C¿ ≠O¿ ≠U¿ ≠õ¿ ≠Á¿ Æ¿ ÆW¿ ÆX¿ Æd¿ Æ•¿ Æß¿ Æ®¿ ÆÔ¿ Ø&¿ ØM¿ ØS¿ Øõ¿ ØÍ¿ ∞7¿ ∞z¿ ∞ó¿ ∞∞¿ ∞»¿ ∞Œ¿ ∞œ¿ ±¿ ±)¿ ±*¿ ±r¿ ±x¿ ±√¿ ±Í¿ ≤¿ ≤¿ ≤F¿ ≤R¿ ≤n¿ ≤ø¿ ≤√¿ ≤ƒ¿ ≤–¿ ≥¿ ≥>¿ ≥Q¿ ≥W¿ ≥®¿ ≥“¿ ¥¿ ¥¿ ¥¿ ¥¿ ¥Q¿ ¥g¿ ¥}¿ ¥ú¿ ¥ƒ¿ ¥ﬂ¿ µ¿ µ¿ µ¿ µX¿ µÖ¿ µ£¿ µ—¿ µÛ¿ ∂¿ ∂¿ ∂:¿ ∂U¿ ∂ã¿ ∂ø¿ ∂˚¿ ∑*¿ ∑B¿ ∑H¿ ∑\¿ ∑é¿ ∑Ω¿ ∑√¿ ∑«¿ ∑»¿ ∑‘¿ ∑˘¿ ∏¿ ∏=¿ ∏A¿ ∏B¿ ∏N¿ ∏`¿ ∏é¿ ∏¢¿ ∏¶¿ ∏ß¿ ∏¡¿ ∏”¿ ∏È¿ π	¿ π¿ π¿ π$¿ π0¿ π1¿ π[¿ π|¿ πû¿ πª¿ π”¿ πŸ¿ π›¿ πÛ¿ πÙ¿ ∫ ¿ ∫¿ ∫J¿ ∫e¿ ∫Ä¿ ∫î¿ ∫ö¿ ∫û¿ ∫ü¿ ∫∂¿ ∫Ì¿ ∫Ò¿ ∫Ú¿ ∫˛¿ ª9¿ ªU¿ ªk¿ ªÄ¿ ªö¿ ªµ¿ ª›¿ º*¿ º0¿ º4¿ º5¿ ºK¿ ºf¿ ºr¿ º≤¿ º¬¿ º‡¿ Ω¿ Ω¿ ΩB¿ Ωπ¿ ΩÂ¿ æ¿ æ¿ æ(¿ æP¿ ær¿ æê¿ æ•¿ æ¡¿ æÁ¿ ø¿ ø¿ ø!¿ øs¿ ø}¿ øë¿ ø§¿ øÆ¿ ø≤¿ ø≥¿ øø¿ ø“¿ øÌ¿ ¿¿ ¿¿ ¿¿ ¿¿ ¿ ¿ ¿G¿ ¿K¿ ¿ô¿ ¿Í¿ ¡ ¿ ¡7¿ ¡Y¿ ¡_¿ ¡Ø¿ ¡¿¿ ¡∆¿ ¬¿ ¬¿ ¬/¿ ¬B¿ ¬Z¿ ¬`¿ ¬a¿ ¬m¿ ¬ú¿ ¬ù¿ ¬©¿ ¬Ò¿ √¿ √"¿ √?¿ √g¿ √}¿ √Ö¿ √ã¿ √¡¿ √≈¿ √∆¿ √“¿ ƒ	¿ ƒ"¿ ƒI¿ ƒ`¿ ƒÜ¿ ƒ¢¿ ƒ¥¿ ƒ∆¿ ƒ›¿ ≈¿ ≈0¿ ≈;¿ ≈J¿ ≈v¿ ≈å¿ ≈î¿ ≈°¿ ≈µ¿ ≈ª¿ ≈ø¿ ≈¿¿ ≈Ã¿ ∆¿ ∆¿ ∆7¿ ∆f¿ ∆è¿ ∆÷¿ «S¿ «]¿ «e¿ «x¿ «Ç¿ «Ü¿ «à¿ «â¿ «∏¿ «º¿ »¿ »Z¿ »p¿ »©¿ »”¿ »Ÿ¿ …)¿ …E¿ …K¿ …ã¿ …ë¿ …÷¿ …Í¿ …˚¿  6¿  I¿  a¿  É¿  ®¿  œ¿  –¿ À ¿ À¿ ÀQ¿ Àl¿ Àr¿ À®¿ À‚¿ Ã¿ Ã9¿ Ã[¿ Ãi¿ Ão¿ Ãä¿ Ã†¿ Ã§¿ Ã•¿ Ã‰¿ Õ¿ Õ;¿ Õg¿ Õä¿ Õò¿ Õû¿ Õ∫¿ Õ–¿ Õ‘¿ Õ’¿ Õ·¿ Œ?¿ Œ@¿ ŒL¿ Œî¿ Œ∞¿ Œ≈¿ Œ‚¿ œ
¿ œ ¿ œ(¿ œ.¿ œd¿ œh¿ œi¿ œu¿ œ¨¿ œ≈¿ œÏ¿ –¿ –*¿ –F¿ –X¿ –t¿ –Ü¿ –ù¿ –√¿ –Ò¿ –¸¿ —¿ —7¿ —M¿ —U¿ —b¿ —v¿ —|¿ —Ä¿ —Å¿ —ç¿ —Õ¿ —›¿ —¯¿ “'¿ “P¿ “ò¿ ”¿ ”¿ ”%¿ ”8¿ ”B¿ ”F¿ ”H¿ ”I¿ ”l¿ ”p¿ ”æ¿ ‘¿ ‘Q¿ ‘à¿ ‘´¿ ‘±¿ ’¿ ’¿ ’$¿ ’i¿ ’|¿ ’ç¿ ’†¿ ’∏¿ ’æ¿ ’ø¿ ’‘¿ ’Ì¿ ’Ó¿ ÷¿ ÷.¿ ÷H¿ ÷{¿ ÷Å¿ ÷ô¿ ÷ù¿ ÷û¿ ÷™¿ ÷Ÿ¿ ÷⁄¿ ÷Ê¿ ◊.¿ ◊A¿ ◊\¿ ◊Ö¿ ◊—¿ ◊Û¿ ÿ#¿ ÿT¿ ÿ[¿ ÿê¿ ÿÃ¿ ÿ‡¿ ÿÊ¿ Ÿ¿ Ÿ ¿ Ÿ!¿ Ÿ-¿ Ÿd¿ Ÿ}¿ Ÿ§¿ Ÿª¿ Ÿ·¿ Ÿ˝¿ ⁄¿ ⁄!¿ ⁄A¿ ⁄X¿ ⁄~¿ ⁄´¿ ⁄∂¿ ⁄≈¿ ⁄Ò¿ €¿ €¿ €¿ €0¿ €6¿ €:¿ €;¿ €G¿ €á¿ €ó¿ €≤¿ €·¿ ‹
¿ ‹_¿ ‹Ú¿ ‹¸¿ ›¿ ›¿ ›!¿ ›%¿ ›'¿ ›(¿ ›J¿ ›N¿ ›ì¿ ›‘¿ ›ÿ¿ ﬁ¿ ﬁ4¿ ﬁ8¿ ﬁr¿ ﬁ≤¿ ﬁı¿ ﬂ,¿ ﬂG¿ ﬂM¿ ﬂû¿ ﬂÎ¿ ‡;¿ ‡N¿ ‡T¿ ‡ô¿ ‡¨¿ ‡Ω¿ ‡–¿ ‡Ë¿ ‡Ó¿ ‡Ô¿ ‡˚¿ ·;¿ ·<¿ ·H¿ ·ê¿ ·¨¿ ·¡¿ ·ﬁ¿ ‚¿ ‚¿ ‚$¿ ‚*¿ ‚`¿ ‚d¿ ‚e¿ ‚q¿ ‚®¿ ‚¡¿ ‚Ë¿ ‚ˇ¿ „%¿ „A¿ „S¿ „q¿ „É¿ „ö¿ „¿¿ „Ì¿ „¯¿ ‰¿ ‰3¿ ‰I¿ ‰Q¿ ‰^¿ ‰r¿ ‰x¿ ‰|¿ ‰}¿ ‰â¿ ‰…¿ ‰Ÿ¿ ‰Ù¿ Â#¿ ÂL¿ Âì¿ Â»¿ Â“¿ Â⁄¿ ÂÌ¿ Â˜¿ Â˚¿ Â˝¿ Â˛¿ ÊB¿ ÊF¿ Êó¿ ÊÕ¿ Á¿ ÁM¿ Áj¿ ÁÑ¿ Á£¿ ÁΩ¿ Á›¿ Ë¿ Ë¿ Ë5¿ ËT¿ Ëk¿ Ëé¿ Ëè¿ Ëﬁ¿ Ë‰¿ È¿ È¿ ÈY¿ Èá¿ È≠¿ È¬¿ È‚¿ È¸¿ Í¿ Í(¿ Í.¿ Íj¿ ÍÇ¿ Í∫¿ Í‚¿ ÍË¿ Í˛¿ Î¿ Î¿ Î¿ ÎD¿ ÎZ¿ Î{¿ Îõ¿ Î©¿ ÎØ¿ Î…¿ Îﬂ¿ Î„¿ Î‰¿ Ï ¿ Ï¿ Ï-¿ ÏH¿ Ïb¿ Ïp¿ Ïv¿ Ïä¿ Ï†¿ Ï§¿ Ï•¿ Ï±¿ Ï¯¿ Ì*¿ ÌL¿ ÌP¿ ÌQ¿ Ì]¿ Ì£¿ Ìœ¿ Ó¿ Ó@¿ Óz¿ Ó~¿ ÓÄ¿ ÓÅ¿ Ó∆¿ Ó’¿ ÓŸ¿ Ô¿ Ôa¿ Ôã¿ Ôë¿ Ô∞¿ Ô∂¿ ÔÏ¿ ¿ ¿ >¿ V¿ v¿ ë¿ ´¿ ‹¿ ˝¿ Ò¿ Ò9¿ Ò:¿ ÒX¿ Ò^¿ Ò≠¿ Ò≈¿ ÒÂ¿ Ò¯¿ Ú¿ Ú0¿ Ú>¿ ÚD¿ ÚX¿ Ún¿ Úr¿ Ús¿ Ú£¿ Ú©¿ ÚÙ¿ Û¿ Û¿ Û`¿ Ûf¿ Û†¿ Û”¿ ÛÚ¿ Ù¿ Ù=¿ ÙK¿ ÙQ¿ Ùl¿ ÙÇ¿ ÙÜ¿ Ùá¿ Ùì¿ ÙÆ¿ Ù√¿ ÙÌ¿ ı¿ ı"¿ ıd¿ ıÄ¿ ı»¿ ıŒ¿ ı“¿ ı”¿ ıﬂ¿ ˆ'¿ ˆC¿ ˆX¿ ˆu¿ ˆù¿ ˆ≥¿ ˆª¿ ˆ¡¿ ˆ˜¿ ˆ˚¿ ˆ¸¿ ˜¿ ˜?¿ ˜X¿ ˜l¿ ˜z¿ ˜Ä¿ ˜Å¿ ˜î¿ ˜»¿ ¯
¿ ¯(¿ ¯8¿ ¯Y¿ ¯x¿ ¯ú¿ ¯µ¿ ¯…¿ ¯Ì¿ ˘¿ ˘I¿ ˘V¿ ˘`¿ ˘~¿ ˘Ü¿ ˘ô¿ ˘£¿ ˘§¿ ˘Œ¿ ˘˙¿ ˙¿ ˙.¿ ˙C¿ ˙V¿ ˙s¿ ˙|¿ ˙Ç¿ ˙Œ¿ ˙Ë¿ ˚ ¿ ˚¿ ˚4¿ ˚=¿ ˚C¿ ˚f¿ ˚~¿ ˚å¿ ˚¶¿ ˚¥¿ ˚Â¿ ¸¿ ¸>¿ ¸ç¿ ¸‹¿ ˝ ¿ ˝]¿ ˝g¿ ˝ç¿ ˝ñ¿ ˝¿¿ ˝‚¿ ˝È¿ ˝Í¿ ˝˙¿ ˛$¿ ˛7¿ ˛A¿ ˛E¿ ˛F¿ ˛R¿ ˛ò¿ ˛ƒ¿ ˇ¿ ˇ^¿ ˇb¿ ˇd¿ ˇe¿ ˇ™¿ ˇÆ¿ ˇÚ¿ ˇˆ¿ ¿ ¿ T¿ d¿ ß¿ Œ¿ ‘¿¿¿I¿a¿r¿¢¿∫¿’¿Ô¿ ¿A¿B¿N¿é¿è¿õ¿„¿ˇ¿¿1¿Y¿o¿w¿}¿≥¿∑¿∏¿ƒ¿˚¿¿(¿6¿<¿=¿P¿Ç¿†¿∞¿—¿¿¿+¿?¿c¿ê¿ø¿Ã¿÷¿Ù¿¸¿¿¿¿D¿p¿â¿ù¿≤¿≈¿‚¿Î¿Ò¿=¿W¿n¿Ç¿°¿™¿∞¿“¿Í¿¯¿¿ ¿Q¿n¿™¿˘¿	H¿	å¿	…¿	”¿	˘¿
¿
+¿
M¿
T¿
U¿
e¿
è¿
¢¿
¨¿
∞¿
±¿
Ω¿¿/¿Ç¿Ü¿à¿â¿Æ¿»¿¸¿
¿¿D¿R¿T¿U¿ò¿ ¿È¿Ô¿=¿|¿Ç¿—¿¸¿¿7¿x¿π¿œ¿¿¿4¿I¿J¿b¿c¿É¿â¿´¿◊¿Ò¿¿6¿D¿J¿c¿x¿ë¿ß¿´¿¨¿˜¿'¿G¿r¿ê¿û¿§¿ª¿—¿’¿÷¿!¿e¿¿Ö¿»¿¿H¿m¿ù¿¿¿Œ¿‘¿¿¿
¿¿¿)¿B¿W¿k¿∞¿˘¿E¿ë¿Ã¿‚¿Ê¿Á¿Û¿¿¿4¿8¿9¿E¿k¿«¿À¿Ã¿ÿ¿¿N¿•¿⁄¿ı¿¿?¿T¿`¿§¿∂¿ı¿/¿ó¿µ¿¿q¿Œ¿›¿W¿Ã¿⁄¿‰¿˘¿¿'¿K¿S¿Y¿{¿∞¿Ù¿¿:¿B¿H¿L¿M¿Y¿û¿…¿¿m¿q¿s¿t¿¨¿€¿¿(¿H¿\¿~¿†¿√¿Â¿˚¿ ¿ 1¿ Q¿ y¿ °¿ ª¿ ø¿ ¿¿!¿!H¿!N¿!ù¿!‡¿"¿"¿"2¿"N¿"\¿"b¿"w¿"ç¿"≠¿"±¿"≤¿"ˆ¿"¸¿#H¿#í¿#ò¿#Ë¿$(¿$x¿$«¿%¿%W¿%â¿%™¿%÷¿%ı¿&¿&	¿&!¿&7¿&W¿&[¿&\¿&ò¿&û¿&Ì¿'%¿'[¿'|¿'®¿'À¿'Ÿ¿'ﬂ¿'˚¿(¿(1¿(5¿(6¿(B¿(ê¿(ë¿(ﬁ¿)'¿)J¿)P¿)†¿)Ò¿*¿*¿*#¿*r¿*ë¿*ó¿*„¿+2¿+W¿+°¿+¿¿+Œ¿+‘¿+˙¿,¿,0¿,4¿,5¿,á¿,ç¿,Õ¿-¿-$¿-P¿-s¿-Å¿-á¿-√¿-ﬂ¿.¿.?¿.E¿.[¿._¿.`¿.ë¿.®¿.«¿.›¿.˝¿/¿/¿/E¿/f¿/à¿/û¿/æ¿/¬¿/√¿0¿0'¿0I¿0_¿0¿0É¿0Ñ¿0«¿0Ë¿1
¿1 ¿1@¿1D¿1E¿1á¿1»¿1Ï¿2¿2"¿2&¿2'¿2V¿2â¿2©¿2ø¿2ﬂ¿2„¿2‰¿3	¿3U¿3ç¿3¶¿3¨¿3€¿3ˆ¿4(¿4.¿4G¿4l¿4£¿4€¿4·¿5¿5(¿5c¿5i¿5Ñ¿5∏¿5æ¿5—¿5’¿5÷¿5‚¿6*¿6a¿6û¿6‹¿6ˆ¿7.¿72¿73¿7?¿7è¿7Œ¿7˜¿88¿8R¿8é¿8–¿8Ÿ¿8‡¿8‰¿8Â¿8Ò¿9(¿9A¿9w¿9ö¿9Á¿:
¿:_¿:£¿:Ÿ¿;¿;¿;2¿;>¿;g¿;Ö¿;ô¿;∞¿;…¿<¿<'¿<8¿<n¿<Ü¿<ê¿<ü¿<ˇ¿=C¿=Ä¿=¶¿=œ¿=⁄¿>¿>N¿>z¿>ã¿>ƒ¿>Œ¿?¿?¿?H¿?_¿?m¿?u¿?{¿?¿?Ä¿?å¿?Õ¿?˚¿?ˇ¿@ ¿@¿@Q¿@|¿@√¿A¿AZ¿Aø¿B¿B¿B¿B¿Bb¿Bë¿B≈¿BŸ¿B˙¿C.¿CP¿Cf¿Câ¿Cú¿Cª¿C‚¿D¿D¿D¿D>¿D?¿DS¿Dy¿Dá¿Dç¿D»¿DÃ¿DÕ¿DÏ¿E¿E!¿E%¿E&¿EM¿E`¿E}¿Eí¿E≠¿E∆¿Eﬁ¿E˚¿F¿F/¿FE¿FK¿FO¿FP¿Fò¿F≤¿F¡¿F€¿FÙ¿G¿G¿G)¿G;¿G}¿Gñ¿G£¿Gº¿G‘¿G⁄¿Gﬁ¿Gﬂ¿H¿H¿Hn¿Hø¿HÔ¿Hı¿I4¿I\¿Iç¿I≠¿Iÿ¿I˜¿J¿J¿J#¿J:¿JU¿JY¿JZ¿Jñ¿Jú¿JÎ¿K#¿KY¿Kz¿K¶¿K…¿K◊¿K›¿K˘¿L¿L+¿L/¿L0¿Lq¿Lr¿L~¿Lã¿LÀ¿L‰¿M.¿M/¿M{¿M…¿N¿N6¿N[¿Nm¿NŒ¿NÒ¿N˚¿O¿O¿O:¿Of¿O¶¿O≤¿OÃ¿O‘¿O’¿OÍ¿P	¿PP¿P¬¿P˝¿Q¿Q5¿QO¿Qn¿Qå¿Q¶¿Q¸¿R¿R¿R4¿R:¿R>¿R?¿RK¿Rd¿R}¿R¿¿R’¿RÙ¿S;¿SØ¿SÍ¿T¿T"¿T<¿T[¿Ty¿Tì¿TÎ¿TÛ¿U¿U¿U<¿UB¿UF¿UG¿Uc¿Uz¿U{¿U±¿U∑¿U÷¿V ¿V"¿VC¿Ve¿VÇ¿Vö¿Vº¿V¬¿V∆¿V«¿V‚¿W¿W¿W¿W¿W9¿WW¿We¿Wk¿Wl¿WÖ¿Wß¿WŒ¿W€¿WÌ¿X¿X[¿X•¿XÒ¿YT¿Yº¿Z#¿ZU¿Z≤¿Z◊¿[¿[Z¿[`¿[d¿[e¿[∫¿\¿\$¿\H¿\b¿\r¿\á¿\ú¿\È¿\Ú¿\ˇ¿]1¿]7¿]H¿]L¿]M¿]Y¿]ê¿]–¿]ﬁ¿]‰¿]¸¿^¿^S¿^w¿^ë¿^°¿^Ω¿^ﬂ¿_*¿_N¿_W¿_d¿_ù¿_£¿_ß¿_®¿_¥¿`¿`>¿`R¿`X¿`p¿`ô¿`∂¿`–¿a¿aN¿aW¿a^¿ab¿ac¿ao¿aï¿a∑¿aË¿aÏ¿aÌ¿a˘¿b:¿bY¿bt¿bÅ¿bõ¿b¬¿b»¿bÃ¿bÕ¿bŸ¿c¿cI¿c¿c”¿d8¿d<¿d>¿d?¿dÉ¿dá¿d◊¿e ¿eW¿e[¿eò¿eÂ¿e¯¿f3¿fw¿fó¿f∏¿f€¿fÒ¿g¿g)¿g*¿gs¿gy¿g»¿h¿h+¿hB¿hd¿hÖ¿hì¿hô¿h≥¿h…¿hÈ¿hÌ¿hÓ¿h˙¿iB¿iÖ¿i¬¿j ¿j¿jR¿jV¿jW¿j§¿jÌ¿k¿k¿kf¿k∑¿k—¿k“¿kﬁ¿l.¿lM¿ls¿lì¿l·¿lÛ¿m¿mI¿mã¿mî¿mõ¿mü¿m†¿m¨¿m„¿n¿n¿n>¿no¿n°¿n´¿n±¿nµ¿n∂¿n¬¿o¿o¿o?¿oc¿oj¿on¿oo¿o{¿o¿¿oÎ¿p8¿pè¿pì¿pï¿pñ¿p–¿p‘¿q¿qR¿qS¿qç¿që¿q≈¿r¿r¿rH¿rL¿rÄ¿r∆¿r«¿s¿s¿s;¿sâ¿sä¿sÃ¿s–¿t¿t^¿t_¿t¢¿t¶¿t⁄¿u6¿u7¿uw¿u{¿uØ¿v¿v¿vB¿vF¿vz¿v»¿v…¿w¿w¿wO¿wõ¿wü¿wÔ¿x5¿x`¿xd¿x§¿x®¿x˜¿y?¿yà¿yé¿yÿ¿yÚ¿z
¿z"¿z8¿zQ¿zk¿zã¿z¨¿z ¿z‰¿z¯¿{	¿{¿{¿{Z¿{´¿{ª¿{Ê¿{Á¿|7¿|b¿|c¿|±¿|–¿|˜¿|¯¿}F¿}s¿}t¿}ƒ¿}Ù¿~#¿~$¿~i¿~§¿~•¿~Œ¿¿¿3¿j¿k¿ß¿÷¿◊¿„¿Ä¿Ä>¿ÄB¿ÄC¿ÄO¿Äå¿Ä∏¿Ä›¿Å¿Å¿Å1¿ÅZ¿Å`¿ÅÉ¿Å™¿Å∞¿Å÷¿Ç ¿Ç¿Ç-¿ÇX¿Ç^¿Çã¿Çº¿Ç¬¿Ç¿É"¿É(¿ÉS¿ÉÇ¿Éà¿ÉØ¿É⁄¿É‡¿É‰¿ÉÂ¿ÉÒ¿Ñ6¿Ña¿Ñç¿Ñ†¿Ñª¿Ñ⁄¿Ñ˘¿Ö¿Ö5¿ÖX¿Öá¿Ö∏¿Ö„¿Ü¿Ü¿Ü(¿Ü0¿Ü4¿Ü6¿Ü7¿ÜÖ¿Üâ¿Ü’¿á"¿á@¿áD¿áì¿á„¿à¿à¿àK¿àO¿à°¿à•¿à≥¿à∑¿à˘¿â¿â{¿âƒ¿â ¿ä¿äa¿äw¿äâ¿äõ¿ä¨¿äÿ¿ä˛¿ã¿ã'¿ãf¿ã¿ã¥¿ãÕ¿å¿å¿å¿åe¿å¶¿å™¿å´¿å∑¿åÙ¿ç ¿çY¿çw¿ç}¿çÅ¿çÇ¿ç”¿é$¿é?¿éE¿éé¿é÷¿è¿èY¿è_¿è∞¿è˚¿ê ¿ê&¿êC¿êa¿êq¿êå¿ê®¿êø¿ë¿ë$¿ë*¿ë.¿ë/¿ëW¿ë]¿ëñ¿ë ¿ë˙¿í@¿í`¿í{¿í»¿í‡¿íÊ¿íÍ¿íÎ¿í˜¿ì¿ì¿ìi¿ìÄ¿ìÜ¿ì ¿ì¿ìÒ¿ì˝¿î!¿î"¿î.¿îS¿îj¿îå¿î®¿îø¿ï¿ï@¿ïX¿ï^¿ïb¿ïc¿ïo¿ï©¿ï«¿ï»¿ï‘¿ï˘¿ñ¿ñ4¿ñ8¿ñ9¿ñE¿ñW¿ñ¢¿ñ˝¿ó%¿óH¿ó\¿ó`¿óa¿óm¿ó®¿ó»¿óÃ¿óÕ¿óŸ¿ò¿òI¿òu¿òà¿ò£¿òΩ¿ò◊¿òÔ¿ò¯¿ô¿ô¿ôÇ¿ô◊¿ög¿ök¿öm¿ön¿ö°¿ö•¿öÒ¿õ=¿õä¿õ÷¿ú$¿úu¿úê¿úî¿ú„¿ù1¿ùÇ¿ù—¿û¿ûl¿û∫¿û˝¿ü¿üG¿üî¿ü‡¿†/¿†v¿†√¿†¯¿°)¿°g¿°h¿°t¿°ö¿°õ¿°Â¿°ı¿°˚¿¢K¿¢á¿¢ç¿¢ﬁ¿£¿£¿£`¿£ô¿£Ë¿§7¿§Y¿§_¿§u¿§{¿§¬¿§‰¿§Í¿§¯¿•%¿•I¿•O¿•a¿•ö¿•¢¿•®¿•€¿¶¿¶¿¶7¿¶∞¿¶Î¿ßH¿ßç¿ß®¿ß≤¿ß∏¿ß ¿ß˜¿®¿®5¿®P¿®q¿®ô¿®Ì¿®˛¿©¿©¿©$¿©,¿©6¿©H¿©N¿©^¿©d¿©©¿©˘¿™3¿™Q¿™å¿™ÿ¿™‹¿™›¿´'¿´E¿´K¿´õ¿´◊¿´›¿¨2¿¨`¿¨f¿¨¥¿¨Ì¿≠<¿≠ã¿≠≠¿≠≥¿Æ¿ÆT¿ÆZ¿Æp¿Æv¿ÆΩ¿ÆÈ¿ÆÔ¿Æ˝¿Ø3¿Ø`¿Øf¿Øx¿Ø√¿ØÀ¿Ø—¿∞¿∞A¿∞G¿∞f¿∞ﬂ¿±¿±]¿±g¿±m¿±¿±¨¿±Œ¿±Í¿≤¿≤&¿≤P¿≤§¿≤µ¿≤ƒ¿≤—¿≤€¿≤„¿≤Ì¿≤ˇ¿≥¿≥¿≥¿≥d¿≥∏¿≥Ó¿¥¿¥G¿¥ó¿¥õ¿¥ú¿¥Ï¿µ;¿µâ¿µ‘¿µ⁄¿∂'¿∂3¿∂9¿∂á¿∂‘¿∂È¿∑*¿∑O¿∑P¿∑ü¿∑Ì¿∏9¿∏Ü¿∏Œ¿π¿π
¿πW¿πc¿πi¿π∫¿∫¿∫¿∫`¿∫Ü¿∫á¿∫”¿∫È¿∫Ô¿ª:¿ªW¿ªg¿ªå¿ª≤¿ª≈¿ªœ¿ª”¿ª‘¿ª‡¿ºG¿ºW¿ºÑ¿º¨¿ºª¿º‰¿ºÏ¿ºˇ¿Ω	¿Ω¿Ω¿Ω¿Ω_¿Ωä¿Ω©¿Ωπ¿Ω÷¿æ¿æÜ¿æï¿ø	¿ø)¿øq¿ø…¿øÓ¿¿V¿¿{¿¿…¿¿Ô¿¡å¿¡±¿¬¿¬P¿¬±¿¬¬¿√&¿√0¿√À¿ƒ¿ƒ¿ƒ'¿ƒ1¿ƒJ¿ƒ∑¿ƒΩ¿ƒ¡¿ƒ√¿ƒƒ¿ƒ˛¿≈¿≈Q¿≈†¿≈Ò¿∆¿∆¿∆/¿∆3¿∆Ä¿∆è¿∆ì¿∆»¿∆Ã¿«	¿«¿«¿«¿«m¿«õ¿«Œ¿»¿»&¿»<¿»V¿»g¿»∑¿»Ú¿»¯¿…¿…2¿…a¿…v¿…w¿…∑¿…Ω¿ ¿ [¿ a¿ ò¿ ∫¿ Ã¿ È¿À¿À¿À¿À2¿ÀW¿Ày¿À¿ÀÉ¿ÀÑ¿À‰¿ÀÍ¿Ã)¿Ã/¿Ã~¿Ãç¿Ã€¿Õ¿Õ¿ÕM¿Õi¿Õê¿Õ∑¿Õ≈¿ÕÀ¿ÕÎ¿Œ¿Œ¿Œ¿Œ¿Œd¿Œß¿Œ´¿Œ¨¿Œ∏¿Œ¯¿œ¿œ-¿œ3¿œa¿œe¿œf¿œr¿œπ¿œÎ¿–<¿–Y¿–ß¿–´¿–¨¿–∏¿–˝¿—(¿—n¿—Ç¿—£¿—¿¿—‹¿“7¿“@¿“G¿“K¿“M¿“N¿“û¿“Ì¿”¿”3¿”\¿”o¿”â¿”ü¿”º¿”—¿”“¿‘¿‘¿‘`¿‘±¿‘ﬁ¿‘‰¿’!¿’C¿’U¿’r¿’ê¿’û¿’§¿’ª¿’Ë¿’Ï¿’Ì¿’˘¿÷,¿÷@¿÷R¿÷X¿÷ã¿÷è¿÷ê¿÷ú¿÷œ¿÷„¿÷ı¿÷˚¿◊.¿◊2¿◊3¿◊?¿◊r¿◊Ü¿◊ò¿◊û¿◊—¿◊’¿◊÷¿◊‚¿ÿ¿ÿ)¿ÿ;¿ÿA¿ÿt¿ÿx¿ÿy¿ÿÖ¿ÿ»¿ÿ‹¿ÿÔ¿ÿı¿Ÿ1¿Ÿ5¿Ÿ6¿ŸB¿Ÿh¿Ÿi¿Ÿu¿ŸÇ¿Ÿ¬¿Ÿ÷¿Ÿ˘¿Ÿˇ¿⁄/¿⁄3¿⁄4¿⁄@¿⁄Y¿⁄o¿⁄ä¿⁄é¿⁄è¿⁄õ¿⁄¥¿⁄»¿⁄Í¿⁄˜¿€¿€¿€¿€¿€+¿€s¿€∂¿€∫¿€ª¿€«¿€Ì¿‹¿‹%¿‹)¿‹*¿‹6¿‹m¿‹Å¿‹è¿‹ï¿‹∑¿‹ª¿‹º¿‹»¿›¿›¿›*¿›0¿›^¿›b¿›c¿›o¿›¥¿›ﬂ¿ﬁ$¿ﬁ(¿ﬁ)¿ﬁ5¿ﬁg¿ﬁÄ¿ﬁ¢¿ﬁ®¿ﬁ∆¿ﬁÊ¿ﬁ˝¿ﬂT¿ﬂ]¿ﬂd¿ﬂh¿ﬂj¿ﬂk¿ﬂ©¿ﬂ≠¿ﬂ¯¿‡D¿‡ï¿‡‚¿·
¿·¿·¿·#¿·p¿·¿·É¿·∏¿·º¿·˘¿·˝¿‚¿‚¿‚Y¿‚£¿‚÷¿„¿„6¿„L¿„g¿„x¿„»¿‰¿‰	¿‰&¿‰E¿‰t¿‰â¿‰ä¿‰–¿‰÷¿Â!¿Âp¿ÂÄ¿ÂÜ¿ÂΩ¿Â·¿ÂÙ¿Ê¿Ê1¿Ê?¿ÊE¿Ê]¿ÊÇ¿Ê§¿Ê™¿ÊÆ¿ÊØ¿Êˇ¿Á¿Á¿ÁZ¿Á`¿ÁØ¿Áæ¿Ë¿ËE¿ËI¿Ë~¿Ëö¿Ë¡¿ËË¿Ëˆ¿Ë¸¿È¿È<¿È@¿ÈA¿ÈM¿Èï¿È™¿ÈÃ¿Í¿Í¿Í¿Í¿ÍR¿Íy¿Íá¿Íç¿Íª¿Íø¿Í¿¿ÍÃ¿Î¿ÎE¿Îñ¿Î≥¿Ï¿Ï¿Ï¿Ï¿ÏW¿ÏÇ¿Ï…¿Ï›¿Ï˛¿Ì¿Ì6¿Ìè¿Ìò¿Ìü¿Ì£¿Ì•¿Ì¶¿Ì’¿ÌŸ¿Ó*¿Ó{¿Ó∆¿ÓÎ¿Ô,¿Ôf¿Ôl¿Ô∂¿Ô…¿Ô‹¿Ô¿¿¿¿;¿O¿P¿\¿°¿Ã¿Ò¿Ò¿Ò¿Ò¿Òb¿Ò~¿ÒŒ¿Ú¿Ú;¿ÚL¿Úk¿Úñ¿ÚÕ¿Û¿Û¿Û3¿ÛJ¿Ûm¿Û¶¿Û€¿Û‹¿Ù+¿ÙU¿Ù[¿Ù©¿Ùˆ¿ı¿ı¿ıa¿ı±¿ˆ ¿ˆJ¿ˆï¿ˆ≥¿ˆÓ¿˜¿˜G¿˜É¿˜ë¿˜ó¿˜≤¿˜“¿˜÷¿˜◊¿¯¿¯8¿¯V¿¯¿¯ö¿¯®¿¯Æ¿¯⁄¿¯Ó¿˘¿˘9¿˘?¿˘C¿˘D¿˘ó¿˘‘¿˘˛¿˙3¿˙T¿˙b¿˙h¿˙ö¿˙¥¿˙›¿˙ˇ¿˚¿˚	¿˚
¿˚J¿˚û¿˚‘¿¸¿¸A¿¸O¿¸U¿¸í¿¸∑¿¸‡¿˝¿˝¿˝¿˝¿˝<¿˝å¿˝¿¿˝ˇ¿˛)¿˛7¿˛=¿˛x¿˛õ¿˛ƒ¿˛Ê¿˛Ï¿˛¿˛Ò¿ˇ4¿ˇ{¿ˇª¿ˇ˙¿ ¿ '¿ (¿ 4¿ {¿ ≠¿ Æ¿ Ó¿
¿¿\¿Ñ¿ä¿¥¿Ì¿)¿1¿i¿£¿´¿±¿Ÿ¿¿E¿M¿Ö¿ø¿«¿Õ¿—¿“¿¿E¿I¿J¿p¿ö¿ÿ¿	¿O¿ê¿ö¿†¿§¿•¿Ã¿ˆ¿3¿d¿™¿Î¿ı¿˚¿ˇ¿ ¿$¿L¿ã¿∫¿ ¿A¿K¿Q¿U¿V¿|¿§¿‚¿	¿	W¿	ò¿	¢¿	®¿	¨¿	≠¿	π¿	˛¿
)¿
U¿
u¿
¢¿
·¿¿#¿?¿]¿c¿ß¿´¿≠¿Æ¿Î¿%¿h¿n¿Ÿ¿¯¿¿;¿W¿|¿ü¿¬¿‰¿¿6¿d¿í¿∫¿‹¿Û¿¿!¿"¿p¿•¿»¿ˆ¿¿$¿*¿C¿m¿ç¿ë¿í¿Ÿ¿¿N¿T¿®¿˜¿¿7¿J¿h¿Ü¿î¿ö¿≤¿“¿÷¿◊¿$¿g¿m¿Ω¿¿"¿m¿±¿’¿€¿¿`¿î¿ ¿Ê¿¿5¿C¿I¿j¿ä¿é¿è¿€¿ˆ¿¸¿H¿ñ¿ﬁ¿¿*¿O¿u¿É¿â¿®¿»¿Ã¿Õ¿¿¿]¿ò¿ª¿Ì¿¿,¿R¿`¿f¿Ö¿•¿©¿™¿Ê¿¿X¿£¿Ó¿%¿)¿*¿u¿ô¿‡¿‰¿Â¿0¿T¿õ¿ü¿†¿ÿ¿˚¿(¿N¿a¿ô¿ù¿û¿÷¿˘¿+¿Q¿d¿ú¿†¿°¿Î¿ ¿ S¿ W¿ X¿ ~¿ §¿ ”¿!¿!'¿!(¿!x¿!Ö¿!ã¿!—¿!˝¿"*¿"c¿"¶¿"‹¿"˝¿#)¿#K¿#Y¿#_¿#{¿#õ¿#ü¿#†¿#¨¿#Ï¿$¿$¿$¿$J¿$N¿$O¿$[¿$¢¿$‘¿$ˇ¿%3¿%h¿%t¿%›¿&%¿&,¿&8¿&É¿&Ã¿&”¿&‘¿&˚¿')¿'/¿'V¿'Ñ¿'ä¿'Ø¿'„¿'È¿(¿(>¿(D¿(l¿(ù¿(£¿(…¿(ˆ¿(¸¿)$¿)T¿)Z¿)~¿)ß¿)≠¿)”¿* ¿*¿*1¿*h¿*n¿*î¿*¡¿*«¿*¿+#¿+)¿+Q¿+Ç¿+à¿+±¿+‰¿+Í¿,¿,@¿,F¿,~¿,œ¿,’¿,˝¿-.¿-4¿-]¿-ê¿-ñ¿-º¿-È¿-Ô¿.¿.?¿.E¿.o¿.¢¿.®¿.Ã¿.˛¿/¿/(¿/Z¿/`¿/ç¿/—¿/◊¿0¿0H¿0N¿0q¿0°¿0ß¿0Œ¿0˚¿1¿1W¿1è¿1ï¿1¿¿1ı¿1˚¿2%¿2X¿2^¿2à¿2ª¿2¡¿2Ô¿3)¿3/¿3a¿3£¿3©¿3 ¿3ˆ¿3¸¿4#¿4O¿4U¿4É¿4¿¿4∆¿5¿5b¿5§¿5…¿5Î¿5Ò¿6¿6J¿6P¿6y¿6£¿6©¿6’¿7¿7¿78¿7j¿7p¿7ö¿7∆¿7Ã¿7¯¿8(¿8.¿8X¿8Ñ¿8ä¿8¥¿8‡¿8Ê¿9¿90¿96¿9[¿9}¿9É¿9™¿9–¿9÷¿:¿:h¿:n¿:≠¿;¿;	¿;B¿;å¿;í¿;Ã¿<¿<¿<L¿<Ä¿<Ü¿<Ø¿<Ÿ¿<ﬂ¿=¿=h¿=n¿=©¿=˜¿=˝¿>3¿>~¿>Ñ¿>à¿>â¿>†¿>ø¿>√¿>ƒ¿>·¿?¿?
¿?¿?&¿?I¿?M¿?N¿?l¿?í¿?ñ¿?ó¿?∂¿?›¿?·¿?‚¿?˛¿@"¿@&¿@'¿@E¿@k¿@o¿@p¿@å¿@∞¿@¥¿@µ¿@—¿@ı¿@˘¿@˙¿A¿A2¿A6¿A7¿AN¿Am¿Aq¿Ar¿Aã¿A¨¿A∞¿A±¿Aı¿B<¿B@¿BA¿BÜ¿BŒ¿B“¿B”¿C¿CT¿CX¿CY¿Cô¿C‹¿C‡¿C·¿D¿DI¿DM¿DN¿Dt¿Dõ¿Dü¿D†¿DÕ¿E¿E¿E¿E4¿Ei¿Em¿Eo¿Ep¿Eø¿E€¿Eﬂ¿F.¿Fb¿Fñ¿FÂ¿FÚ¿G¿G!¿G;¿GX¿Gm¿Gn¿Gª¿H¿H-¿H?¿H\¿Hz¿Hà¿Hé¿H•¿H≈¿H…¿H ¿H÷¿I¿IO¿Ií¿Iñ¿Ió¿I£¿IË¿J¿JX¿J\¿J^¿J_¿J¢¿JÂ¿J˘¿J˝¿KD¿Kã¿KΩ¿KÒ¿L?¿L|¿L}¿Lâ¿L–¿M¿M¿M/¿M_¿Mc¿Me¿Mf¿Mò¿Mú¿MÎ¿N¿N¿NR¿Nç¿N√¿O¿O'¿O=¿OX¿Ow¿Oå¿Oç¿O“¿Oˆ¿P	¿P'¿PF¿PT¿PZ¿Pr¿Pí¿Pñ¿Pó¿P£¿P„¿P¯¿Q¿Q¿Q:¿Q>¿Q?¿QK¿Qê¿Qª¿R¿R¿R¿R	¿RF¿RJ¿Rî¿R›¿S¿S9¿S=¿SK¿SO¿Sí¿S»¿T¿T3¿TI¿Ta¿Tx¿Tç¿Té¿T¡¿T‹¿TÍ¿U¿U¿U+¿U1¿UE¿Ue¿Ui¿Uj¿Uv¿UΩ¿UÔ¿V¿V¿V¿V"¿Vg¿Ví¿V–¿V‘¿V÷¿V◊¿W¿W¿W¿W!¿W_¿W†¿W—¿X
¿X ¿X=¿XS¿Xh¿X}¿X~¿XÃ¿XÍ¿X¿YA¿Y[¿Yz¿Yç¿Y´¿Y≈¿Y”¿YŸ¿Yˆ¿Z	¿Z0¿Z^¿Zd¿Zz¿Z~¿Z¿Zã¿Z∂¿Z∑¿[¿[S¿[ï¿[≤¿[≥¿[ø¿[ÿ¿[Û¿\¿\/¿\3¿\4¿\@¿\w¿\ê¿\«¿\‘¿]¿]#¿]9¿]T¿]Z¿]ì¿]£¿]Õ¿]‡¿]Í¿]Ó¿]Ô¿]˚¿^@¿^k¿^≠¿^±¿^≥¿^¥¿_¿_5¿_9¿_Ö¿_â¿_‘¿`%¿`9¿`=¿`K¿`O¿`è¿`“¿a¿a@¿aX¿au¿aó¿a∏¿aË¿b¿b0¿bE¿br¿bã¿b∞¿bŸ¿bÓ¿bÔ¿c5¿ck¿cä¿cù¿cª¿c’¿c„¿cÈ¿c¸¿d¿d¿d¿d[¿dô¿dü¿d¿e2¿e8¿eâ¿eÿ¿f¿f>¿fX¿f}¿f£¿f±¿f∑¿f÷¿fÏ¿f¿fÒ¿g>¿gh¿gà¿gö¿g∑¿g”¿g·¿gÁ¿g¸¿h¿h¿h¿hf¿h¿hÖ¿h ¿i¿i^¿i†¿iÔ¿j0¿jr¿jõ¿j∞¿j∂¿j›¿k¿k'¿kM¿ko¿k}¿kÉ¿kû¿k¥¿k∏¿kπ¿l¿l?¿lE¿lá¿lç¿l¥¿lÁ¿m¿m,¿mP¿m^¿md¿mÅ¿mó¿mõ¿mú¿m®¿m∫¿mÃ¿m‡¿m‰¿mÂ¿mÒ¿n¿n¿nS¿n_¿nú¿nù¿nÌ¿nÛ¿oC¿ot¿o√¿o›¿oˇ¿p;¿p?¿p@¿pL¿pî¿p’¿q	¿q¿q#¿q^¿qõ¿qŸ¿qÛ¿r+¿r/¿r0¿r<¿rå¿rµ¿r›¿r˜¿s3¿su¿s~¿sÖ¿sâ¿sä¿sñ¿sÕ¿s˚¿t¿tb¿t∑¿u¿u-¿u4¿up¿uÑ¿uﬂ¿u¯¿v¿v)¿vU¿vÇ¿v¢¿v´¿v∏¿vƒ¿v€¿w	¿w8¿w[¿wa¿wx¿wÜ¿wô¿w¨¿wŸ¿x7¿xX¿xy¿xí¿x´¿x¥¿xª¿xÀ¿xı¿y¿y¿y¿y¿y#¿yd¿yì¿yó¿yò¿y§¿yÈ¿z¿zV¿z´¿zÓ¿{H¿{L¿{N¿{O¿{û¿{¢¿{∞¿{¥¿{¯¿|=¿|Ñ¿|Ö¿|Ã¿|ﬁ¿|‰¿}1¿}c¿}i¿}ò¿}≤¿}»¿}·¿}˜¿~¿~%¿~c¿~x¿~y¿~≤¿~À¿~◊¿~Ú¿¿¿$¿;¿Q¿U¿V¿™¿∆¿’¿Ô¿Ä
¿Ä¿Ä¿Ä2¿ÄH¿ÄL¿ÄM¿Äà¿Äâ¿Äï¿Ä¡¿Ä¬¿ÄŒ¿Å¿Å_¿Å¢¿ÅØ¿Å–¿Åı¿Å¸¿Ç¿ÇO¿ÇS¿ÇT¿Ç`¿Çs¿Çí¿Çß¿Ç´¿Ç≠    .RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderIgnoreBaselineRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipOvalRenderClipPath_RenderPhysicalModelBaseRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegion Í~