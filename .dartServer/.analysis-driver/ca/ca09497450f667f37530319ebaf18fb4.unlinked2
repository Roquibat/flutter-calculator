Äˆpoint	direction==toStringhashCode_currentOffset_currentLine_currentTextPosition_lineMetrics	_editable_isValidisValid_positionCache_getTextPositionForLinecurrentmoveNextmovePreviousmoveByOffset_foregroundRenderObject_backgroundRenderObjectdispose_updateForegroundPainterforegroundPainter_foregroundPainter_updatePainterpainter_painter_caretPainter_selectionPainter_autocorrectHighlightPainter_builtInForegroundPainters _cachedBuiltInForegroundPainters _createBuiltInForegroundPainters_builtInPainters_cachedBuiltInPainters_createBuiltInPainters_textLayoutLastMaxWidth_textLayoutLastMinWidthdebugAssertLayoutUpToDateignorePointertextHeightBehaviortextWidthBasisdevicePixelRatio_devicePixelRatioobscuringCharacter_obscuringCharacterobscureText_obscureTextselectionHeightStyleselectionWidthStyletextSelectionDelegateselectionStartInViewport_selectionStartInViewportselectionEndInViewport_selectionEndInViewport_getTextPositionVerticalgetLineAtOffsetgetWordBoundarygetTextPositionAbovegetTextPositionBelow!_updateSelectionExtentsVisibility_setTextEditingValue_setSelectionmarkNeedsPaintmarkNeedsTextLayoutsystemFontsDidChange	plainTexttext_textPainter_cachedAttributedValue_cachedCombinedSemanticsInfos	textAligntextDirectionlocale
strutStylecursorColorbackgroundCursorColor_disposeShowCursor
showCursor_showCursor_showHideCursorhasFocus	_hasFocus	forceLine
_forceLinereadOnly	_readOnlymaxLines	_maxLinesminLines	_minLinesexpands_expandsselectionColortextScaleFactor
textScaler	selection
_selectionoffset_offsetcursorWidth_cursorWidthcursorHeight_cursorHeightpaintCursorAboveText_paintCursorOnTopcursorOffsetcursorRadiusstartHandleLayerLink_startHandleLayerLinkendHandleLayerLink_endHandleLayerLinkfloatingCursorAddedMargin_floatingCursorOn_floatingCursorTextPositionenableInteractiveSelection_enableInteractiveSelectionselectionEnabledpromptRectColorsetPromptRectRangemaxScrollExtent_maxScrollExtent_caretMarginclipBehavior_clipBehavior_semanticsInfo_cachedChildNodesgetBoxesForSelectiondescribeSemanticsConfiguration_handleSetTextassembleSemanticsNode_createShowOnScreenFor_handleSetSelection#_handleMoveCursorForwardByCharacter$_handleMoveCursorBackwardByCharacter_handleMoveCursorForwardByWord_handleMoveCursorBackwardByWord_getNextWord_getPreviousWord_onlyWhitespaceattachdetachredepthChildrenvisitChildren_isMultiline_viewportAxis_paintOffset_viewportExtent_getMaxScrollExtent_hasVisualOverflowgetEndpointsForSelectiongetRectForComposingRangegetPositionForPointgetLocalRectForCaretcomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthpreferredLineHeight_cachedLineBreakCount_countHardLineBreaks_preferredHeightcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeightcomputeDistanceToActualBaselinehitTestSelfhitTestChildren_tap
_longPresshandleEvent_lastTapDownPosition_lastSecondaryTapDownPositionlastSecondaryTapDownPositionhandleSecondaryTapDownhandleTapDown_handleTapDown	handleTap
_handleTaphandleDoubleTaphandleLongPress_handleLongPressselectPositionselectPositionAtwordBoundaries
selectWordselectWordsInRangeselectWordEdgegetWordAtOffset_placeholderDimensions_layoutText_computeTextMetricsIfNeeded_caretPrototype_computeCaretPrototype_snapToPhysicalPixel$_canComputeDryLayoutForInlineWidgets_canComputeIntrinsicsCached_canComputeIntrinsicscomputeDryLayoutperformLayout_relativeOrigin_previousOffset_shouldResetOrigin_resetOriginOnLeft_resetOriginOnRight_resetOriginOnTop_resetOriginOnBottom"_resetFloatingCursorAnimationValue_calculateAdjustedCursorOffset$calculateBoundedFloatingCursorOffsetsetFloatingCursor_lineNumberForstartVerticalCaretMovement_paintContents_leaderLayerHandler_paintHandleLayersapplyPaintTransformpaint_clipRectLayerdescribeApproximatePaintClipdebugFillPropertiesdebugDescribeChildrenparentisRepaintBoundarysizedByParentshouldRepainthighlightPainthighlightColor_highlightColorhighlightedRange_highlightedRange_selectionHeightStyle_selectionWidthStyleshouldPaint_shouldPaintshowRegularCaret
caretPaintfloatingCursorPaint
caretColor_caretColor_cursorRadius_cursorOffset_backgroundCursorColorfloatingCursorRect_floatingCursorRectpaintRegularCursorpaintersaddListenerremoveListener
_kCaretGap_kCaretHeightOffset_kFloatingCursorSizeIncrease_kFloatingCursorRadius6_kShortestDistanceSquaredWithFloatingAndRegularCursorsTextSelectionPointVerticalCaretMovementRunRenderEditable_RenderEditableCustomPaintRenderEditablePainter_TextHighlightPainter_CaretPainter_CompositeRenderEditablePainterÅûBoxHeightStyleBoxWidthStyleLineMetricsPlaceholderAlignmentTextBoxdouble
EdgeInsets	symmetric
horizontalverticalRadiuscircular	immutableOffsetTextDirectionoverrideboolObject	identicalruntimeTypepoint	directionStringltrrtlinthashTextPositioncurrentIteratorList_textPaintercomputeLineMetricsMapMapEntrydxbaselinegetPositionForOffsetlengthkeyvaluedy	RenderBox"RelayoutWhenSystemFontsChangeMixinContainerRenderObjectMixinTextParentData%RenderInlineChildrenContainerDefaultsTextLayoutMetrics	TextAlignstartViewportOffsetzero
InlineSpanColorValueNotifier	LayerLink
StrutStyle
Deprecated
TextScaler	noScalingTextSelectionTextHeightBehaviorTextWidthBasisparentLocaletightfromLTRB	TextRangeCliphardEdge
charactersTextPaintertext	textAligntextDirection
textScalerlinearlocalemaxLines
strutStyletextHeightBehaviortextWidthBasishighlightColorhighlightedRangeselectionHeightStyleselectionWidthStylepromptRectRange
caretColorcursorRadiuscursorOffsetbackgroundCursorColoraddAllchildrenvoidlayerdisposepainterspainter
adoptChildconstraintsmaxWidthminWidthmarkNeedsLayoutmarkNeedsSemanticsUpdateTextSelectionDelegateValueListenablegetOffsetForCaret	translategetLineBoundary
baseOffsetextentOffsetendgetWordBoundarypreferredLineHeightisValidRectsizeoffsetaffinityinflatecontainsTextEditingValueSelectionChangedCauseuserUpdateTextEditingValuetextEditingValuecopyWithmin	selectionmarkNeedsPaint	protectedsystemFontsDidChange	plainTextAttributedStringInlineSpanSemanticsInformationjustifyCupertinoColorsinactiveGrayattachedremoveListeneraddListenershouldPainttextScaleFactorCompositedTransformTarget_combineSemanticsInfoLinkedHashMapKeySemanticsNodegetBoxesForSelectionmap	fromLTRBDtextBoxlefttoprightbottomtoListSemanticsConfigurationdescribeSemanticsConfigurationgetSemanticsInformationanyinfo
recognizerdefaultTargetPlatformTargetPlatformmacOSisSemanticBoundaryexplicitChildNodesStringBufferStringAttributesemanticsLabelstringAttributesinfoAttributerangeaddcopywritetoString
attributesattributedValue
isObscuredisMultiline	isFocusedisTextField
isReadOnlyonSetSelection	onSetTexttextSelectiongetOffsetBeforeonMoveCursorBackwardByWordonMoveCursorBackwardByCharactergetOffsetAfteronMoveCursorForwardByWordonMoveCursorForwardByCharacter	collapsedkeyboardIterable
isNotEmpty
firstChildcombineSemanticsInfoisPlaceholder	elementAtisTagged PlaceholderSpanIndexSemanticsTag
parentData
childAfterisEmptyfirsttoRectskipexpandToIncludefromLTWHmaxwidthheight	maxHeightfloorToDoubleceilToDoublesortKeyOrdinalSortKeyattributedLabelGestureRecognizerTapGestureRecognizeronTapisLinkDoubleTapGestureRecognizeronDoubleTapLongPressGestureRecognizeronLongPressparentPaintClipRect	intersectisHiddenremovekeys	UniqueKeyshowOnScreen
updateWithconfigrectchildrenInInversePaintOrderVoidCallback
descendantextentisCollapsedi
codeUnitAtisWhitespacePipelineOwnerattach
debugOwner	onTapDowndetachRenderObjectredepthChildredepthChildrenRenderObjectVisitorvisitChildrenAxispixelshasSizeSizeboxHeightStyleboxWidthStyleclampDoublelastfoldaccumincomingshiftglobalToLocaliOSgetFullHeightForCaret
fullHeight
heightDiffandroidfuchsialinuxwindowstopLeftsetPlaceholderDimensionslayoutInlineChildreninfinityBoxConstraintschildgetMinIntrinsicWidthminIntrinsicWidthgetMaxIntrinsicWidthmaxIntrinsicWidthindexminLinesChildLayoutHelperdryLayoutChildTextBaselinecomputeDistanceToActualBaselineBoxHitTestResultposition	GlyphInfogetClosestGlyphForOffsetgraphemeClusterLayoutBoundsgetSpanForPositiongraphemeClusterCodeUnitRangeHitTestTargetHitTestEntryspanhitTestInlineChildrenPointerEventBoxHitTestEntrydebugHandleEventPointerDownEventdebugNeedsLayout
addPointerTapDownDetailsglobalPositioncausetap	doubleTap	longPressEditableTextTextEditingControllerfromtoWordBoundarywordBoundariesbaseTextAffinityupstreamvisibleForTestingfromPosition
downstreamPlaceholderDimensionslayoutlocalToGlobalisFiniteroundPlaceholderSpan	alignmentaboveBaselinebelowBaselinemiddledebugCannotComputeDryLayoutreasonconstrainWidthconstrainHeightlayoutChildpositionInlineChildreninlinePlaceholderBoxesapplyViewportDimensionapplyContentDimensionsshouldResetOriginFloatingCursorDragStateEndresetLerpValuelerpfloatingCursorRectinflateRectshowRegularCaretlineMetrics
lineNumberdescent_PaintingContext
paintChildpaintcanvaspaintInlineChildrenLayerHandleLeaderLayerlink	pushLayerMatrix4defaultApplyPaintTransformnonepushClipRectneedsCompositingclipBehavioroldLayerClipRectLayer	antiAliasantiAliasWithSaveLayerDiagnosticPropertiesBuilderdebugFillPropertiesColorPropertyDiagnosticsPropertyIntPropertydefaultValueDiagnosticsNodetoDiagnosticsNodenamestyleDiagnosticsTreeStyle
transitionshouldRepaint_computeTextMetricsIfNeededbiggestnotifyListenersforegroundPainterCustomPainterRenderCustomPaintChangeNotifierCanvasPaintcolordrawRectbox_paintOffsetgetLocalRectForCaretcenterdistanceSquaredRRectfromRectAndRadius	drawRRect_floatingCursorTextPositionwithOpacityiteratormoveNextIterator	RenderBox"RelayoutWhenSystemFontsChangeMixinContainerRenderObjectMixin%RenderInlineChildrenContainerDefaultsTextLayoutMetricsChangeNotifierRenderEditablePainter^ü≈ıˆ|∞ú/2¡    Ä¶  dart:collection  Ä¿  Ä“mathÄ’	dart:mathÄÚÅ@BoxHeightStyleBoxWidthStyleLineMetricsPlaceholderAlignmentTextBox Ä‹  ÄÏuiÄÔdart:ui  ÅD  "package:characters/characters.dart  Åq  package:flutter/foundation.dart  Åõ  package:flutter/gestures.dart  Å√  package:flutter/semantics.dart  ÅÏ  package:flutter/services.dart  Ç  box.dart  Ç(  custom_paint.dart  ÇD  
layer.dart  ÇY  layout_helper.dart  Çv  object.dart  Çå  paragraph.dart  Ç•  viewport_offset.dart    	dart:core¿ Æ« ¿Ωıã‚ <ÄÜÄ§Ä•ÄøÄ€ÅBÅCÅpÅöÅ¬ÅÎÇÇÇ'ÇCÇXÇuÇãÇ§Ç√ÇƒÇÌÉÉ ÉnÉ°ÑÑÑ?Ñ{Ñ|Ñ€ÖÖjÖ™ÖÛÜFÜGÜêÜﬂÜ¯áááZáíáìáﬂàà4à5àpàíàìàüà¬à‰à˜à˝â)â=âCâjâäâ≥â∑â∏âƒâ⁄âÛää.äLäiäzäìäôäùäûä™äﬂä‡ä‚ä„ã1ã}ãïãôã„å0å}åÃççjçñçöçËé7éáé÷è$èBèFèmèwèèâèŸê&êuê≈ëë`ëqëuë√íí_íÖíòíúí›ì'ìwì»îîî]îwî{î…ïïgïÉï∆ï‰ï¯ññ.ñEñ^ñcñdñ}ñëñ∂ñ∑ñ‚óóóó_óeó≥ó…óœòò[òpòÖòôòüò¸ôLôàôºô‘ô⁄ôÔôÛôÙö_ö`ö´ö¿ö›õ4õVõsõyõ°õ¢õ˝ú^úŒú˘ùùùùù<ùQùrùvùwùÉùóù¨ùﬂùÛù˘ûXûoûíûΩûŒû“û”û¸üü:üRügüÑüòüûü˝††7†b†s†w†x†∫†”†Ÿ°°%°]°Ç°≥°Ã¢
¢%¢6¢@¢H¢U¢ì¢≤¢√¢Õ¢’¢€£££££[£Ñ£à£“§"§K§O§û§Ì•=•ã•⁄•Ò•ı¶E¶ñ¶⁄ß¶ß¯ß˛®<®B®ë®ó®Â©3©v©|©≈©÷©È©ˇ™)™T™l™é™≥™«™Ù´´6´I´c´´ö´´´Ã¨;¨w¨}¨ü¨—¨Ô≠≠3≠N≠i≠ï≠–≠ıÆÆ'ÆEÆ_ÆyÆ†Æ«ÆÍØ0ØsØôØÂ∞∞!∞H∞q∞ï∞√∞‚±±D±S±†±‘±ﬁ±Ì≤*≤o≤y≤à≤ÿ≥8≥B≥|≥ü≥€≥˛¥¥2¥Y¥ƒ¥›µ
µ+µ\µÖµèµŒµÎ∂∂#∂B∂[∂~∂£∂‘∑∑B∑w∑®∑Ÿ∑¸∏∏8∏]∏É∏¥∏Î∏Ïπ#πWπöπ€π‹∫∫d∫e∫ë∫¿∫Ôª0ª1ªbªªïªôªöªµªÏº#º$º0ºCºiºëºµº›ΩΩ"ΩSΩzΩ£Ω Ωˆææ4æPænæãæ≠æ≥æ»æÃæÕøøbøÖø–øı¿ @
¿ @¿ @¿ @@¿ @∑¿ @·¿ A¿ A&¿ Aa¿ Ag¿ Aå¿ Aê¿ Aë¿ A“¿ A˘¿ Aˇ¿ BK¿ Bë¿ Bº¿ C¿ C/¿ Cl¿ Cò¿ C¶¿ C¨¿ C÷¿ C⁄¿ C€¿ D¿ Df¿ D¿ DÈ¿ DÍ¿ E¿ Eå¿ E∂¿ EÓ¿ E˚¿ F6¿ F<¿ FW¿ F[¿ F\¿ F§¿ FÀ¿ F—¿ G¿ Gh¿ GÉ¿ Gµ¿ Gÿ¿ H¿ H-¿ H;¿ HA¿ Ha¿ He¿ Hf¿ H{¿ H≈¿ I¿ I¿ I ¿ Ik¿ I¡¿ I¬¿ JO¿ Jî¿ J€¿ K¿ K0¿ Ka¿ Kj¿ Kq¿ Ku¿ Kv¿ KÂ¿ L ¿ L]¿ Lâ¿ L≤¿ Lÿ¿ LÛ¿ M%¿ M.¿ M5¿ M9¿ M:¿ M]¿ MÄ¿ MÅ¿ M¬¿ MÁ¿ MÛ¿ N,¿ Nc¿ O¿ O¿ O¿ O¿ O\¿ Ol¿ Or¿ Oø¿ P
¿ P:¿ P@¿ Pè¿ Pœ¿ P’¿ Q¿ Q¿ Q¿ QI¿ Qö¿ Q–¿ R¿ R¿ R¿ RE¿ R`¿ Rd¿ Re¿ R†¿ R‰¿ S¿ SA¿ SO¿ SU¿ S~¿ Sô¿ Sù¿ Sû¿ SÀ¿ S—¿ T¿ TO¿ Tk¿ Tí¿ T∑¿ T≈¿ TÀ¿ TÍ¿ U¿ U	¿ U
¿ UL¿ UR¿ U{¿ U≥¿ U—¿ U˙¿ V"¿ V0¿ V6¿ V`¿ VÅ¿ Vò¿ Vú¿ Vù¿ V‡¿ W¿ W¿ W=¿ W^¿ Wl¿ Wr¿ Wå¿ WØ¿ Wœ¿ W”¿ W‘¿ X¿ X$¿ Xc¿ Xª¿ XÒ¿ Y%¿ Y)¿ Y*¿ Yt¿ Yz¿ Y∏¿ Z¿ ZA¿ Zt¿ Zx¿ Zy¿ Z«¿ [¿ [¿ [^¿ [Å¿ [∞¿ [±¿ \¿ \¿ \Z¿ \™¿ \ı¿ ]¿ ]¿ ][¿ ]¶¿ ]√¿ ^¿ ^i¿ ^j¿ ^ø¿ ^≈¿ _¿ _Z¿ _©¿ _√¿ _…¿ `¿ `a¿ `~¿ `Õ¿ a¿ a¿ a_¿ a∑¿ b¿ bf¿ b´¿ bØ¿ b∞¿ bŒ¿ bœ¿ c¿ c¿ cV¿ cw¿ c∫¿ d¿ d¿ di¿ do¿ dπ¿ dΩ¿ dæ¿ d˙¿ e¿ e;¿ en¿ er¿ es¿ e∫¿ e∆¿ f¿ fM¿ fò¿ f◊¿ g ¿ g^¿ gù¿ g°¿ g¢¿ gÈ¿ gı¿ h2¿ h|¿ h«¿ i¿ iO¿ iå¿ iÀ¿ iœ¿ i–¿ iÏ¿ iÌ¿ j0¿ jO¿ jn¿ jù¿ j ¿ jÿ¿ jﬁ¿ k¿ k¿ kQ¿ kû¿ kµ¿ kº¿ l¿ lS¿ l°¿ l€¿ m,¿ my¿ m£¿ m◊¿ m˘¿ n)¿ n*¿ nh¿ n≥¿ n ¿ n—¿ o¿ o%¿ oS¿ oW¿ oX¿ oÆ¿ oı¿ o˘¿ o˙¿ pK¿ pl¿ p∫¿ q	¿ qV¿ q¢¿ qÛ¿ r+¿ r4¿ rÖ¿ r÷¿ s¿ sH¿ sê¿ sô¿ sü¿ sπ¿ t
¿ t¿ t¿ t"¿ t#¿ t/¿ tI¿ te¿ t≠¿ t‹¿ u¿ u¿ u¿ u`¿ uz¿ uÄ¿ u°¿ uÆ¿ uÕ¿ uÒ¿ v¿ v,¿ v0¿ v1¿ v=¿ v]¿ v¿ v£¿ v«¿ vÎ¿ vÔ¿ v¿ w1¿ w7¿ wv¿ w§¿ wÔ¿ x!¿ x"¿ xb¿ xh¿ xÆ¿ x€¿ x˝¿ y)¿ yp¿ yê¿ y∂¿ yƒ¿ y ¿ yÏ¿ z¿ z.¿ zX¿ zÄ¿ zõ¿ zª¿ zø¿ z¿¿ zÛ¿ {(¿ {K¿ {v¿ {Ñ¿ {ä¿ {Æ¿ {…¿ {Õ¿ {Œ¿ {Ù¿ {˙¿ |=¿ |~¿ |Ñ¿ |“¿ }!¿ }o¿ }∏¿ ~¿ ~¿ ~W¿ ~û¿ ~Ê¿ (¿ S¿ Ç¿ ê¿ ñ¿ æ¿ Ÿ¿ ˘¿ ˝¿ ˛¿ ÄO¿ Ä[¿ Äa¿ Ä∂¿ Å¿ ÅT¿ Å|¿ ÅÇ¿ ÅŒ¿ Åﬁ¿ Ç¿ Ç)¿ ÇQ¿ Ç_¿ Çe¿ ÇÜ¿ Ç°¿ Ç•¿ Ç¶¿ ÇÓ¿ É¿ ÉI¿ Éo¿ Éõ¿ É©¿ ÉØ¿ É‘¿ ÉÔ¿ ÉÛ¿ ÉÙ¿ Ñ%¿ Ñ[¿ Ñ}¿ Ñ£¿ Ñß¿ Ñ®¿ ÑÚ¿ Ö¿ Ö¿ Öb¿ Öh¿ Ö•¿ Ö¿ Ü¿ ÜM¿ ÜQ¿ ÜR¿ Üm¿ Ün¿ Üë¿ Ü∆¿ ÜÈ¿ á¿ á7¿ áE¿ áK¿ á_¿ áí¿ áò¿ á∂¿ á”¿ áı¿ á˚¿ à¿ à(¿ àA¿ àq¿ àw¿ à{¿ à|¿ àó¿ à…¿ àÕ¿ àŒ¿ àˇ¿ â!¿ â;¿ âX¿ âv¿ âÑ¿ âä¿ â°¿ â¡¿ â≈¿ â∆¿ ä¿ ä?¿ äZ¿ äx¿ äó¿ ä•¿ ä´¿ ä√¿ ä⁄¿ äﬁ¿ äﬂ¿ ã¿ ã3¿ ãM¿ ãj¿ ãà¿ ãñ¿ ãú¿ ã≥¿ ã”¿ ã◊¿ ãÿ¿ å'¿ å-¿ åw¿ åì¿ åô¿ å⁄¿ å‡¿ ç.¿ ç~¿ çª¿ ç›¿ çÔ¿ éB¿ é_¿ éá¿ é§¿ é≤¿ é∏¿ éœ¿ é–¿ è ¿ èp¿ èö¿ èÕ¿ èË¿ èÏ¿ èÌ¿ ê"¿ êD¿ êV¿ ê©¿ ê∆¿ êÓ¿ ë¿ ë¿ ë¿ ë6¿ ëQ¿ ëU¿ ëV¿ ëä¿ ë™¿ ëª¿ ë◊¿ ëÛ¿ í¿ í¿ í¿ í8¿ í<¿ í=¿ íq¿ í≤¿ í◊¿ ì¿ ì	¿ ì
¿ ìP¿ ìl¿ ìr¿ ì™¿ ì∞¿ î¿ î ¿ î/¿ îN¿ îª¿ îı¿ î˘¿ ï7¿ ïF¿ ïe¿ ï“¿ ñ¿ ñ¿ ñ6¿ ña¿ ñe¿ ñf¿ ñù¿ ñ’¿ ñ˙¿ ó&¿ ó4¿ ó:¿ ó_¿ óz¿ ó~¿ ó¿ ó≤¿ ó∏¿ ó˙¿ ò ¿ òD¿ òo¿ òù¿ ò∫¿ ò‚¿ ô¿ ô¿ ô¿ ô-¿ ô]¿ ôs¿ ôì¿ ôó¿ ôò¿ ôŒ¿ ô‘¿ ö$¿ öp¿ ö∏¿ ö‡¿ ö˙¿ õ¿ õ;¿ õI¿ õO¿ õc¿ õë¿ õó¿ õ¨¿ õ¿¿ õÎ¿ õÒ¿ ú¿ ú¿ ú¿ ú1¿ ú[¿ úx¿ úö¿ úª¿ ú…¿ úœ¿ úÈ¿ ù ¿ ù¿ ù¿ ù(¿ ù.¿ ùã¿ ùë¿ ùÏ¿ û;¿ ûß¿ ûÍ¿ ü¿ ü'¿ üI¿ üW¿ ü]¿ üx¿ üè¿ üì¿ üî¿ ü‹¿ †'¿ †-¿ †y¿ †°¿ †∂¿ †Ï¿ °¿ °/¿ °U¿ °c¿ °i¿ °à¿ °»¿ °ı¿ ¢¿ ¢^¿ ¢ê¿ ¢Æ¿ ¢≤¿ ¢≥¿ ¢Û¿ £A¿ £G¿ £ã¿ £‘¿ §%¿ §m¿ §Ç¿ §ª¿ §ﬁ¿ •¿ •
¿ •¿ •B¿ •H¿ •y¿ •≥¿ •◊¿ •ˇ¿ ¶¿ ¶¿ ¶5¿ ¶;¿ ¶Ü¿ ¶‹¿ ß¿ ß>¿ ßl¿ ßñ¿ ß§¿ ß™¿ ßÕ¿ ß„¿ ßÁ¿ ßË¿ ®¿ ®¿ ®h¿ ®º¿ ®˜¿ ©¿ ©D¿ ©l¿ ©z¿ ©Ä¿ ©°¿ ©∑¿ ©ª¿ ©º¿ ™¿ ™)¿ ™/¿ ™{¿ ™£¿ ™§¿ ™∆¿ ™˜¿ ™¯¿ ´1¿ ´7¿ ´{¿ ´æ¿ ´Ê¿ ¨$¿ ¨g¿ ¨ú¿ ¨¢¿ ¨Ê¿ ≠!¿ ≠W¿ ≠y¿ ≠¿¿ ≠Â¿ Æ¿ ÆE¿ ÆS¿ ÆY¿ ÆÇ¿ Æù¿ ÆΩ¿ Æ¡¿ Æ¬¿ Ø	¿ Ø?¿ ØE¿ Øâ¿ ØÃ¿ ØÙ¿ ∞2¿ ∞u¿ ∞™¿ ∞∞¿ ± ¿ ±$¿ ±*¿ ±}¿ ±∆¿ ±Ã¿ ≤¿ ≤U¿ ≤ú¿ ≤⁄¿ ≤¯¿ ≥/¿ ≥3¿ ≥4¿ ≥h¿ ≥n¿ ≥Ω¿ ¥¿ ¥g¿ ¥™¿ ¥˜¿ µ ¿ µ\¿ µ`¿ µa¿ µæ¿ µ˙¿ ∂ ¿ ∂O¿ ∂U¿ ∂≤¿ ∑¿ ∑4¿ ∑r¿ ∑v¿ ∑w¿ ∑Ø¿ ∑µ¿ ∑˛¿ ∏F¿ ∏f¿ ∏ò¿ ∏∑¿ ∏∏¿ ∏Ô¿ ∏¿ π&¿ π,¿ πO¿ πy¿ πü¿ π¿¿ π‚¿ πˇ¿ ∫¿ ∫9¿ ∫?¿ ∫C¿ ∫D¿ ∫Ö¿ ∫¿¿ ∫¯¿ ∫˘¿ ªE¿ ªî¿ ª”¿ ª˝¿ º5¿ º6¿ ºÅ¿ º»¿ ºı¿ º˚¿ Ω:¿ Ωz¿ Ωù¿ Ω’¿ æ¿ æS¿ æå¿ æ«¿ ø¿ ø/¿ øT¿ øX¿ øY¿ øe¿ ø¨¿ øﬁ¿ ¿!¿ ¿p¿ ¿æ¿ ¿›¿ ¡¿ ¡u¿ ¡Æ¿ ¡÷¿ ¬'¿ ¬M¿ ¬Z¿ ¬~¿ ¬£¿ ¬±¿ ¬∑¿ ¬·¿ ¬˙¿ √T¿ √c¿ √ó¿ √Ø¿ √ı¿ ƒB¿ ƒÉ¿ ƒ“¿ ≈¿ ≈/¿ ≈Q¿ ≈π¿ ≈ ¿ ≈Ÿ¿ ≈Â¿ ∆¿ ∆&¿ ∆0¿ ∆é¿ ∆ñ¿ ∆ú¿ ∆ß¿ ∆Ÿ¿ ∆˙¿ «¿ «C¿ «`¿ «{¿ «ö¿ «õ¿ «√¿ «ˆ¿ «¸¿ «˝¿ »¿ »G¿ »M¿ »N¿ »ã¿ »≥¿ »˛¿ …¿ …V¿ …™¿ …≤¿ …¸¿  ¿  R¿  §¿  ¨¿  ≤¿  ∂¿  ∑¿  ‹¿ À¿ À*¿ À>¿ À¿ Àà¿ ÀÆ¿ Àµ¿ Àπ¿ À∫¿ À∆¿ Ã:¿ Ã|¿ Ãª¿ ÃÔ¿ Õ¿ Õ¿ Õ2¿ ÕP¿ Õh¿ Õã¿ ÕÏ¿ Œ9¿ Œë¿ Œ∆¿ Œ·¿ œ¿ œ¿ œ;¿ œ<¿ œ\¿ œ™¿ œÒ¿ – ¿ –é¿ –ÿ¿ —*¿ —W¿ —}¿ —ò¿ —¢¿ —∆¿ —Â¿ —Ù¿ “5¿ “ä¿ “ß¿ “ª¿ “≈¿ “Ô¿ ”!¿ ”[¿ ”î¿ ”ƒ¿ ”Œ¿ ‘¿ ‘U¿ ‘s¿ ‘ó¿ ‘∫¿ ‘¿ ’(¿ ’3¿ ’Å¿ ’“¿ ’˜¿ ÷"¿ ÷L¿ ÷w¿ ÷£¿ ÷Æ¿ ÷¸¿ ◊,¿ ◊Y¿ ◊Œ¿ ÿ¿ ÿ/¿ ÿc¿ ÿè¿ ÿ≈¿ ÿ¿ ÿ˛¿ Ÿ?¿ Ÿq¿ Ÿ≠¿ Ÿÿ¿ ŸÊ¿ ⁄'¿ ⁄Y¿ ⁄õ¿ ⁄©¿ ⁄º¿ €¿ €¿ €¿ €L¿ €ü¿ €Ì¿ €˜¿ ‹"¿ ‹X¿ ‹®¿ ‹π¿ ‹Ê¿ ›
¿ › ¿ ›W¿ ›d¿ ›n¿ ›¿ ›≠¿ ›Õ¿ ›˛¿ ﬁ!¿ ﬁ)¿ ﬁ/¿ ﬁV¿ ﬁ•¿ ﬁ©¿ ﬁ™¿ ﬁ‹¿ ﬁÏ¿ ﬂ'¿ ﬂ^¿ ﬂe¿ ﬂi¿ ﬂj¿ ﬂ±¿ ﬂÒ¿ ‡7¿ ‡8¿ ‡n¿ ‡¨¿ ‡∞¿ ‡±¿ ‡Ù¿ ·¿ ·g¿ ·á¿ ·ï¿ ·õ¿ ·Ô¿ ‚¿ ‚K¿ ‚q¿ ‚x¿ ‚|¿ ‚}¿ ‚¡¿ ‚‡¿ „5¿ „U¿ „c¿ „i¿ „Ω¿ „–¿ ‰¿ ‰?¿ ‰F¿ ‰J¿ ‰K¿ ‰â¿ ‰®¿ ‰˚¿ Â:¿ ÂV¿ Âd¿ Âj¿ Âø¿ Â“¿ ÂÁ¿ Ê¿ Ê-¿ Ê6¿ Ê\¿ Êc¿ Êg¿ Êh¿ Êß¿ Ê∆¿ Á¿ Áf¿ ÁÜ¿ Áî¿ Áö¿ ÁÙ¿ Ë¿ Ë¿ Ë<¿ Ëf¿ Ëo¿ Ëï¿ Ëú¿ Ë†¿ Ë°¿ Ë…¿ Ë‹¿ È6¿ Èg¿ È|¿ ÈÑ¿ È©¿ Èø¿ È«¿ È·¿ ÈÁ¿ ÈÎ¿ ÈÏ¿ Í¿ Í2¿ Íå¿ ÍΩ¿ Í“¿ Í⁄¿ Íˇ¿ Î¿ Î¿ Î=¿ ÎC¿ ÎT¿ ÎX¿ ÎY¿ Î£¿ Î¥¿ Îπ¿ Î˝¿ ÏO¿ Ïë¿ Ïª¿ ÏÔ¿ Ì ¿ ÌW¿ Ìm¿ Ìu¿ Ì{¿ Ìå¿ Ìê¿ Ìë¿ Ìù¿ Ì¬¿ Ì€¿ Ó¿ Ó3¿ Ó4¿ Óf¿ Óâ¿ Ó•¿ Ô¿ Ô-¿ ÔD¿ Ôr¿ Ôv¿ Ôw¿ ÔÉ¿ Ôï¿ Ô©¿ Ô√¿ ÔÔ¿  ¿ 4¿ [¿ Ç¿ Ü¿ á¿ ì¿ Æ¿ Ò¿ Ò4¿ ÒW¿ Ò|¿ ÒÇ¿ Ò•¿ Ò ¿ Ò–¿ ÒÌ¿ ÒÒ¿ ÒÚ¿ Ò˛¿ Ú2¿ Úu¿ Ú∏¿ Ú€¿ Ú˚¿ Û¿ Û$¿ ÛD¿ ÛJ¿ Ûl¿ Ûp¿ Ûq¿ Ûõ¿ Ûú¿ ÛË¿ ÛÈ¿ Ù¿ Ù"¿ Ù>¿ Ùj¿ ÙÑ¿ Ù∞¿ Ù∂¿ Ù∫¿ Ùª¿ Ù⁄¿ ÙÔ¿ ı¿ ı(¿ ıC¿ ı]¿ ıy¿ ı¿ ıÉ¿ ıÑ¿ ıµ¿ ı ¿ ıÁ¿ ˆ¿ ˆA¿ ˆ[¿ ˆõ¿ ˆ°¿ ˆ•¿ ˆ¶¿ ˆ˘¿ ˜H¿ ˜û¿ ˜ü¿ ˜Ï¿ ˜Ú¿ ¯C¿ ¯ì¿ ¯‡¿ ˘,¿ ˘x¿ ˘~¿ ˘é¿ ˘î¿ ˘’¿ ˙¿ ˙]¿ ˙Ä¿ ˙Å¿ ˙Æ¿ ˙Ø¿ ˙Í¿ ˚{¿ ˚î¿ ˚ﬁ¿ ¸B¿ ¸õ¿ ¸ﬂ¿ ¸Ï¿ ˝m¿ ˝Ë¿ ˛¿ ˛E¿ ˛|¿ ˛Ö¿ ˛ã¿ ˛è¿ ˛ê¿ ˛ﬂ¿ ˇ¿ ˇ¿ ˇe¿ ˇs¿ ˇy¿ ˇ ¿ ˇÏ¿  ¿ O¿ b¿ h¿ ã¿ å¿ “¿¿E¿o¿v¿w¿é¿ö¿¿¿#¿$¿l¿r¿Ç¿à¿–¿¿N¿s¿Ø¿“¿˜¿D¿H¿I¿ó¿ß¿≠¿Ω¿√¿
¿U¿ö¿◊¿¿<¿v¿ô¿ ¿(¿o¿À¿Ã¿3¿s¿t¿°¿∆¿Â¿	¿	è¿	–¿
¿
*¿
D¿
n¿
â¿
•¿
∞¿
”¿
ˆ¿¿:¿í¿‰¿'¿J¿d¿ì¿Æ¿≈¿–¿÷¿◊¿¿K¿O¿P¿\¿è¿±¿√¿…¿	¿ ¿è¿ó¿™¿’¿Ÿ¿⁄¿Ê¿¿;¿M¿S¿ì¿™¿Ó¿=¿¨¿¥¿«¿¿¿¿d¿ö¿‡¿·¿ˇ¿N¿\¿Ü¿∫¿Ÿ¿Û¿˘¿¿G¿o¿ä¿¶¿¡¿¿ ¿;¿Q¿Y¿_¿â¿ç¿é¿∏¿·¿¿Z¿[¿w¿õ¿¡¿¿'¿M¿|¿Ñ¿∑¿Ω¿æ¿	¿X¿h¿Å¿–¿¿^¿à¿¨¿Œ¿‘¿Ù¿¿¿4¿q¿¥¿∏¿π¿≈¿¿¿(¿[¿}¿è¿ï¿ˇ¿#¿'¿(¿4¿v¿ô¿‹¿‡¿·¿Ì¿¿¿'¿4¿Ñ¿¬¿¿e¿∂¿¿I¿s¿‚¿P¿^¿u¿ö¿¬¿◊¿Â¿ &¿ ,¿ 0¿ 1¿ S¿ Å¿ Ç¿ é¿ Œ¿ ˙¿!¿!@¿!A¿!]¿!ú¿!º¿!‚¿!Í¿!¿!Ù¿!ı¿"¿">¿"?¿"è¿"€¿"Ë¿"˝¿#J¿#K¿#¿#Ö¿#”¿#ˆ¿$.¿$a¿$ù¿$°¿$¢¿$¿%9¿%I¿%O¿%ö¿%ƒ¿%Û¿&&¿&*¿&Z¿&v¿&í¿&ñ¿&ó¿&Â¿'*¿':¿'@¿'ã¿'∞¿'≈¿'˚¿'ˇ¿(¿(1¿(B¿(F¿(G¿(ï¿(Ê¿(ˆ¿(¸¿)J¿)s¿)é¿)∆¿) ¿)À¿*¿*j¿*z¿*Ä¿*Ã¿*˜¿+¿+J¿+N¿+j¿+Ü¿+ù¿+°¿+¢¿+›¿+„¿,%¿,s¿,¡¿-¿-¿-\¿-£¿-∏¿-˙¿.;¿.?¿.@¿.Ä¿.Ü¿.◊¿/¿/h¿/π¿0&¿0V¿0c¿0∞¿0±¿0·¿1)¿1*¿1`¿1~¿1†¿1«¿1Œ¿1œ¿1˜¿1˚¿1¸¿27¿2y¿2z¿2∏¿2æ¿2˝¿3;¿3~¿3Ç¿3É¿3‡¿3Ê¿4A¿4G¿4ë¿4¡¿4«¿5¿5n¿5ë¿5˛¿6@¿6≈¿7+¿7p¿7q¿7Ñ¿7ô¿7ı¿8O¿8t¿8}¿8ä¿8ë¿8ï¿8ñ¿8“¿8ÿ¿9¿9Y¿9|¿9¶¿: ¿:c¿:à¿:±¿:Û¿; ¿;a¿;g¿;è¿;ì¿;î¿;€¿;Ò¿<¿<?¿<`¿<∞¿<ﬂ¿=¿=X¿=a¿=g¿=∂¿=Õ¿>¿>¿>a¿>Ä¿>°¿>√¿?¿?3¿?W¿?Ç¿?à¿?™¿?´¿?˙¿@H¿@Å¿@à¿@◊¿A(¿A=¿AY¿A≠¿AÒ¿B¿B9¿B_¿B°¿B≈¿C¿C¿C<¿Cg¿Cë¿C†¿C¨¿CÃ¿C¯¿D#¿D0¿DU¿Do¿Dó¿Dª¿DË¿E¿E,¿E:¿E\¿Eä¿E∑¿E∆¿E“¿E˜¿F¿F=¿Fb¿Fs¿F{¿FÅ¿FÇ¿FÃ¿F–¿F—¿G¿G"¿Gq¿G¡¿H¿H?¿H@¿Hì¿H‡¿I,¿IÄ¿I”¿IÏ¿J¿J,¿J3¿J[¿JÉ¿Já¿Jà¿JŸ¿JË¿JÌ¿K>¿Ká¿K—¿L!¿L1¿L6¿Lá¿L—¿M¿MS¿Mç¿Mí¿Mﬁ¿N.¿Nw¿Ní¿Nπ¿O
¿O¿O¿O,¿O-¿Oz¿O¿O…¿P¿P&¿PH¿Pm¿På¿P≠¿Pˇ¿Q"¿QE¿Qf¿Qâ¿R¿R	¿R¿R¿R\¿R{¿R∞¿RÌ¿S'¿S:¿SY¿SØ¿Sº¿S€¿T1¿T>¿TG¿TK¿TL¿T|¿TØ¿TÙ¿U ¿UQ¿Uâ¿U∞¿U⁄¿V
¿V¿V#¿V'¿V(¿VM¿Vπ¿V∫¿V∆¿V”¿W¿W5¿W_¿W±¿Wª¿W”¿WŸ¿XR¿X£¿XÎ¿Y,¿Yâ¿Yç¿Yé¿Yö¿Y≥¿YÏ¿ZT¿Zó¿Z∫¿Z¸¿[¿[h¿[∑¿\ ¿\P¿\á¿\’¿]¿]A¿]u¿]Ω¿]˛¿^I¿^è¿^¿^Ò¿_B¿_C¿_|¿_µ¿_∂¿_Ô¿`#¿`]¿`a¿`b¿`≤¿a¿aH¿ap¿aã¿a≠¿a–¿aÙ¿b¿b;¿bi¿bj¿bæ¿c¿cz¿c£¿cß¿c®¿c˚¿d^¿dÜ¿d¬¿eF¿eÑ¿eÓ¿fJ¿fK¿fp¿fû¿f§¿f•¿fƒ¿g¿g¿g¿g;¿gu¿g{¿g|¿g–¿h¿hM¿h™¿hÃ¿i
¿ih¿iã¿ië¿i∆¿j"¿jC¿jÇ¿j·¿k¿k¿k¿kQ¿kñ¿l¿l¿lE¿lf¿lØ¿l—¿l◊¿m¿m7¿mÅ¿m§¿m™¿m´¿m“¿m”¿mÓ¿mÚ¿mÛ¿n?¿n\¿nÁ¿o¿o<¿oZ¿o{¿oü¿o¿¿o„¿p¿p¿pK¿pÑ¿p°¿p◊¿q ¿q_¿qπ¿q·¿rL¿rY¿rà¿ré¿rﬂ¿r„¿r‰¿sG¿så¿s¿¿t¿tL¿tz¿t·¿tÈ¿tÔ¿uD¿uf¿uç¿uÔ¿uˆ¿u˙¿u˚¿vL¿vÅ¿vá¿vÿ¿vÒ¿v˜¿w@¿wF¿wó¿w€¿w·¿x-¿xu¿xπ¿y¿yY¿yØ¿y÷¿y‚¿yÒ¿z¿z¿z6¿z=¿zA¿zB¿zÇ¿z£¿z›¿zﬁ¿{¿{K¿{Q¿{R¿{í¿{“¿{”¿|¿|e¿|à¿|ª¿|¡¿|¬¿|˚¿}.¿}/¿}R¿}Ö¿}ã¿}è¿}ê¿}„¿}‰¿~L¿~x¿~ë¿~ƒ¿~¯¿~ˇ¿e¿|¿û¿±¿ƒ¿À¿Ï¿Ä¿Ä1¿Äd¿Äò¿Ä°¿Ä∫¿Å¿Å¿Å.¿Å7¿Å=¿ÅA¿ÅB¿ÅN¿Åè¿Åﬂ¿ÅÌ¿ÅÛ¿Ç%¿Ç)¿Ç*¿Ç6¿Çm¿Çê¿ÇÀ¿Ç˛¿É¿É(¿ÉD¿É\¿ÉÄ¿É®¿É±¿Éæ¿É·¿Ñ¿Ñ¿ÑC¿Ñu¿Ñ≈¿ÑÀ¿Ñœ¿Ñ–¿Ö"¿Ö#¿Ö/¿Öj¿ÖÜ¿Öú¿Ö±¿ÖÀ¿ÖÊ¿Ü¿ÜM¿ÜS¿ÜW¿ÜX¿Üd¿Ü©¿Ü‘¿á¿ák¿á¢¿áŸ¿à1¿àv¿àÈ¿â@¿âê¿â€¿âﬂ¿â‡¿âÏ¿ä¿ä<¿äT¿äu¿äç¿äø¿ä ¿ä—¿ä’¿ä◊¿äÿ¿ã¿ã,¿ãP¿ãk¿ã{¿ã|¿ãà¿ã…¿ã ¿ã÷¿ã¸¿ã˝¿å	¿å+¿å,¿å^¿åÅ¿å≤¿å—¿åﬂ¿åÂ¿åÊ¿ç¿ç6¿ç7¿çn¿çÜ¿çå¿çç¿ç°¿ç”¿é ¿é¿é
¿é¿é¿éN¿é~¿éö¿é”¿è ¿è,¿è_¿èe¿èi¿èj¿èv¿èõ¿è¥¿èﬂ¿è„¿è‰¿è¿ê¿ê0¿êD¿êH¿êI¿êU¿êb¿ê∏¿ê∫¿êª¿ë¿ë#¿ë'¿ëv¿ë«¿í¿íg¿í∏¿íﬂ¿í„¿ì%¿ìr¿ì≤¿î¿î&¿î*¿î8¿î<¿îç¿î”¿ï¿ï`¿ï≥¿ïÒ¿ñ?¿ñh¿ñn¿ñ∂¿ó¿óT¿óî¿óö¿óÊ¿ò+¿ò{¿òà¿ò¬¿ò√¿ò˘¿òˇ¿ôO¿ôù¿ôË¿ôÓ¿ö?¿öé¿ö∆¿õ¿õ¿õ¿õL¿õf¿õâ¿õ¶¿õ”¿õ¸¿õ˝¿ú%¿ú&¿úV¿úp¿úò¿úø¿úÕ¿ú”¿úÛ¿ù
¿ù¿ù¿ùG¿ùg¿ùï¿ùæ¿ùÃ¿ù“¿ùÙ¿û¿û¿û¿ûZ¿û`¿ûü¿ûÊ¿ü+¿üa¿üã¿üô¿üü¿ü¬¿üŸ¿ü›¿üﬁ¿†(¿†.¿†l¿†∞¿†Ú¿°&¿°O¿°]¿°c¿°Ö¿°ú¿°†¿°°¿°≠¿°ı¿¢$¿¢M¿¢å¿¢ö¿¢†¿¢°¿¢√¿£¿£F¿£ç¿£π¿£„¿£Í¿£Î¿§¿§)¿§a¿§≥¿§À¿§‘¿§⁄¿§ﬁ¿§ﬂ¿§Î¿•&¿•N¿•b¿•h¿•á¿•»¿•Œ¿•ˇ¿¶7¿¶s¿¶∑¿¶˙¿¶˛¿ß ¿ß¿ß5¿ßH¿ßI¿ßq¿ßç¿ß≠¿ßÕ¿ß€¿ß·¿ß˚¿®¿®¿®¿®V¿®n¿®s¿®æ¿®€¿®¸¿®˝¿©!¿©S¿©T¿©|¿©í¿©≥¿©‡¿©Ó¿©Ù¿©ı¿™¿™%¿™)¿™*¿™W¿™p¿™î¿™∂¿™ƒ¿™ ¿™Â¿™¸¿´ ¿´¿´-¿´S¿´v¿´ò¿´¶¿´¨¿´«¿´ﬁ¿´‚¿´„¿¨!¿¨B¿¨n¿¨¶¿¨¥¿¨∫¿¨ª¿¨ﬂ¿¨˚¿≠¿≠¿≠¿≠¿≠V¿≠s¿≠õ¿≠√¿≠—¿≠◊¿≠¯¿Æ¿Æ¿Æ¿Æã¿Æ‹¿ÆÛ¿Ø¿ØÜ¿Øﬁ¿Ø¿Ø˙¿∞¿∞-¿∞R¿∞n¿∞°¿∞∞¿± ¿±2¿±:¿±@¿±D¿±E¿±Q¿±ô¿±›¿±ﬁ¿≤¿≤¿≤ú¿≤”¿≤·¿≤Á¿≤Ë¿≥&¿≥'¿≥`¿≥x¿≥±¿≥˜¿¥¿¥D¿¥E¿¥c¿¥¥¿¥∫¿¥ª¿µ¿µ¿µs¿µÅ¿µá¿µà¿µû¿µÈ¿∂!¿∂(¿∂,¿∂-¿∂9¿∂t¿∂ú¿∂∞¿∂∂¿∂∑¿∂÷¿∂¿∂ˆ¿∑¿∑Q¿∑ç¿∑Ω¿∑Ò¿∏%¿∏k¿∏¨¿∏∞¿∏≤¿∏≥¿∏˘¿π8¿π9¿πg¿πh¿πt¿π†¿π‹¿∫¿∫¿∫¿∫¿∫¿∫G¿∫É¿∫´¿∫±¿∫µ¿∫∂¿∫¬¿ª
¿ªF¿ªy¿ª¿ªÉ¿ªÑ¿ªê¿ªÀ¿ªÛ¿º¿º¿ºz¿ºç¿ºì¿ºî¿ºÎ¿Ω6¿Ωu¿Ωπ¿ΩŒ¿Ω÷¿Ω‹¿Ω›¿ΩÔ¿ΩÛ¿Ωı    Ä•  ÄøÄ÷ Ä€ÄÄÚÅ@ÅC  Åp  Åö  Å¬  ÅÎ  Ç  Ç'  ÇC  ÇX  Çu  Çã  Ç§    ÜGÑöá	Ä∞/// Represents the coordinates of the point in a selection, and the text
/// direction at that point, relative to top left of the [RenderEditable] that
/// holds the selection. á q ábát9/// Creates a description of a point in a text selection.áu
á{  áÅáá   áïÄùà-ÄÜ/// Coordinates of the lower left or lower right corner of the selection,
/// relative to the top left of the [RenderEditable] object. à7Yàá8/// Direction of the text at this edge of the selection. ä†>ä¥   ä†ä°àïÅ!àØ  à≤à∫  àïàñâ∫Ä‚âÕ   â∫âªÜ¯Ü˘ä„ò)ïâäü/// The consecutive sequence of [TextPosition]s that the caret should move to
/// when the user navigates the paragraph using the upward arrow key or the
/// downward arrow key.
///
/// {@template flutter.rendering.RenderEditable.verticalArrowKeyMovement}
/// When the user presses the upward arrow key or the downward arrow key, on
/// many platforms (macOS for instance), the caret will move to the previous
/// line or the next line, while maintaining its original horizontal location.
/// When it encounters a shorter line, the caret moves to the closest horizontal
/// location within that line, and restores the original horizontal location
/// when a long enough line is encountered.
///
/// Additionally, the caret will move to the beginning of the document if the
/// upward arrow key is pressed and the caret is already on the first line. If
/// the downward arrow key is pressed next, the caret will restore its original
/// horizontal location and move to the second line. Similarly the caret moves
/// to the end of the document if the downward arrow key is pressed when it's
/// already on the last line.
///
/// Consider a left-aligned paragraph:
///   aa|
///   a
///   aaa
/// where the caret was initially placed at the end of the first line. Pressing
/// the downward arrow key once will move the caret to the end of the second
/// line, and twice the arrow key moves to the third line after the second "a"
/// on that line. Pressing the downward arrow key again, the caret will move to
/// the end of the third line (the end of the document). Pressing the upward
/// arrow key in this state will result in the caret moving to the end of the
/// second line.
///
/// Vertical caret runs are typically interrupted when the layout of the text
/// changes (including when the text itself changes), or when the selection is
/// changed by other input events or programmatically (for example, when the
/// user pressed the left arrow key).
/// {@endtemplate}
///
/// The [movePrevious] method moves the caret location (which is
/// [VerticalCaretMovementRun.current]) to the previous line, and in case
/// the caret is already on the first line, the method does nothing and returns
/// false. Similarly the [moveNext] method moves the caret to the next line, and
/// returns false if the caret is already on the last line.
///
/// The [moveByOffset] method takes a pixel offset from the current position to move
/// the caret up or down.
///
/// If the underlying paragraph's layout changes, [isValid] becomes false and
/// the [VerticalCaretMovementRun] must not be used. The [isValid] property must
/// be checked before calling [movePrevious], [moveNext] and [moveByOffset],
/// or accessing [current]. ï»Äöï‡ï·ï‚ ïËïÓ  ï¸ñ  ññ  ñ2ñ8  ñIñO   ñfñm  ññÉ  ñì!ñ†  ñπ'ñ‘  ñ‰ñ˘  óó óôˆgö% 
ö[ö\ö6öZö7ö<öDöYöEöMóÇ”òfÅ//// Whether this [VerticalCaretMovementRun] can still continue.
///
/// A [VerticalCaretMovementRun] run is valid if the underlying text layout
/// hasn't changed.
///
/// The [current] value and the [movePrevious], [moveNext] and [moveByOffset]
/// methods must not be accessed when [isValid] is false.   ù`ù2   ùùöbÇØöÅ  öôöû   ùyÅXùä   ùyùzû’Å°üA`/// Move back to the previous element.
///
/// Returns true and updates [current] if successful.   †zÇê°dÄÿ/// Move forward or backward by a number of elements determined
/// by pixel [offset].
///
/// If [offset] is negative, move backward; otherwise move forward.
///
/// Returns true and updates [current] if successful. °q°y    £¿g»¶‡ÉÀ/// Displays some text in a scrollable container with a potentially blinking
/// cursor and with gesture recognizers.
///
/// This is the renderer for an editable text field. It does not directly
/// provide affordances for editing the text, but it does handle text selection
/// and manipulation of the text cursor.
///
/// The [text] is displayed, scrolled by the given [offset], aligned according
/// to [textAlign]. The [maxLines] property controls whether the text displays
/// on one line or many. The [selection], if it is not collapsed, is painted in
/// the [selectionColor]. If it _is_ collapsed, then it represents the cursor
/// position. The cursor is shown while [showCursor] is true. It is painted in
/// the [cursorColor].
///
/// Keyboard handling, IME handling, scrolling, toggling the [showCursor] value
/// to actually blink the cursor, and other features not mentioned above are the
/// responsibility of higher layers and not handled by this object. ß®ì ©ÿ©ÊÇ/// Creates a render object that implements the visual aspects of a text field.
///
/// The [textAlign] argument defaults to [TextAlign.start].
///
/// If [showCursor] is not specified, then it defaults to hiding the cursor.
///
/// The [maxLines] property can be set to null to remove the restriction on
/// the number of lines. By default, it is 1, meaning this is a single-line
/// text field. If it is not null, it must be greater than zero.
///
/// Use [ViewportOffset.zero] for the [offset] if there is no need for
/// scrolling.+©Ì©˙  ™$™  ™-%™8  ™X™`  ™p™x  ™í™®  ™∑™æ  ™À'™ﬂ  ™¯%´  ´#´)  ´:´@  ´M´S  ´g´t  ´É´ã  ´ûÄˇ¨â  ¨£,¨Ø  ¨’¨Â  ¨Û≠  ≠≠  ≠7≠=  ≠R≠X  ≠m&≠Ç  ≠ô5≠©  ≠‘≠‹  ≠˘≠ˇ  ÆÆ   Æ+Æ3  ÆIÆR  ÆcÆl  Æ}!ÆÉ  Æ§!Æ¨  ÆÀÆ”  ÆÓ@Ø  Ø4=ØF  Øw Ø~  ØùFØ£  ØÈØı  ∞	∞  ∞%!∞+  ∞L#∞[  ∞u∞ç  ∞ô(∞±  ∞«∞Ÿ  Å™C™L™M´3´\´û´ü´©¨{´±´“¨A¨ö¨ª¨≈¨∆≠,≠G≠c≠π≠«≠»≠ÆÆ@ÆôÆ∫Æ¿Æ¡ÆÂØØØØ(Ø)Ø[Ø]Ø^ØkØlØæØƒØŒØœØ◊Ø‚ØÿØ€ØﬁØ·∞9∞=∞>∞È∞Ô±±∞˘∞∞¸±±±±± ±A±2±*±!±-±>±5±@±K±Q±û±€±Ö±o±\±m±f±]±i±r±É±|±s±±à±ù±í±â±ï±©±Â±Î≤(≤v±ˇ±ˆ±˜≤≤'≤≤≤≤≤ ≤≤#≤3≤Ä≤Ü≤÷≥?≤Ω≤ë≤ö≤ª≤õ≤ß≤±≤≤≤–≤¿≤”≤·≥I≥O≥y≥u≥P≥b≥c≥m≥n≥x≥É≥â≥ú≥ñ≥ä≥ô≥¶≥¨≥ÿ≥¬≥∫≥≠≥Ω≥“≥≈≥’≥Ô≥‚≥Ò≥¸µå¥¥¥¥%¥¥'¥H¥;¥J¥l¥b¥ë¥∂¥y¥n¥|¥Ü¥á¥ì¥ù¥û¥§¥¥¥•¥∏¥”¥Õ¥’¥Ó¥Ê¥˛µ¥˘¥¥¸µ µµµµµFµ4µHµsµeµuµ¢µñµØµ§µ≤µøµƒµ¿µ≈µÀµ∆µﬂµ’µ·µ¸µÚµ˛∂∂∂∂5∂*∂7∂Q∂I∂S∂o∂b∂q∂ì∂Ö∂ï∂º∂™∂æ∂˜∂€∂˘∑.∑∑0∑_∑I∑a∑í∑~∑î∑√∑Ø∑≈∑Ì∑‡∑Ô∏∏∏∏+∏ ∏-∏M∏?∏O∏n∏d∏y∏p∏|∏ù∏ä∏™∏ü∏≠>ªúNª”/// Child render objects ªÓ3º
  ¿ C)¿ C  ¿ G∑¿ GŒ  ¿ H«8¿ H‡ ¿ H¿ H˝¿ H˛¿ I"G¿ I> ¿ IR¿ Ig¿ Ih¿ ImR¿ Iâ ¿ I®¿ IΩ¿ Iæ¿ JQA¿ Jr  ¿ KÁ7¿ L  ¿ M<¿ MD  ¿ M_¿ Mg  ¿ OÇ	¿ QÅ‡/// Whether the [handleEvent] will propagate pointer events to selection
/// handlers.
///
/// If this property is true, the [handleEvent] assumes that this renderer
/// will be notified of input gestures via [handleTapDown], [handleTap],
/// [handleDoubleTap], and [handleLongPress].
///
/// If there are any gesture recognizers in the text span, the [handleEvent]
/// will still propagate pointer events to those recognizers.
///
/// The default value of this property is false. ¿ TQ¿ TX  ¿ Uµ¿ Uº  ¿ W
¿ W  ¿ Z{Å3¿ [ôÄ˝/// The object that controls the text selection, used by this render object
/// for implementing cut, copy, and paste keyboard shortcuts.
///
/// It will make cut, copy and paste functionality work with the most recently
/// set [TextSelectionDelegate]. ¿ ^O¿ ^2 ¿ ^N¿ ^[¿ ^`¿ ^\¿ ^a¿ ^f¿ ^b¿ `œM¿ `È ¿ a¿ a¿ a¿ a¿ a¿ a¿ a¿ x›¿ xÔ  ¿ xˇ(¿ y  ¿ y+C¿ yQ  ¿ ÜT¿ ÜY  ¿ Ü»¿ Ü‹  ¿ â#¿ â( ¿ â4¿ äA¿ äF ¿ äS¿ ã5¿ ã: ¿ ãF¿ çﬂ¿ ç‰  ¿ êF¿ êK  ¿ ë¨¿ ë±  ¿ òü¿ òÆ  ¿ ö‚¿ öÒ  ¿ ú]¿ úd ¿ ús¿ ûÏ¿ ûÙ  ¿ †Ó¿ †Û  ¿ ß¿ ß'  ¿ ®˘¿ ©  ¿ ©æÄ„¿ ™àÄ∂/// The padding applied to text field. Used to determine the bounds when
/// moving the floating cursor.
///
/// Defaults to a padding with left, top and right set to 4, bottom to 5. ¿ ™¶¿ ™´ ¿ ™ø¿ ™»-¿ ™⁄  ¿ ≠¬!¿ ≠»  ¿ ∏ö¿ ∏° ¿ ∏¥¿ π{"¿ πÄ ¿ πê¿ πî¿ πï¿ ∫FÄ∞¿ ∫Ëw/// Collected during [describeSemanticsConfiguration], used by
/// [assembleSemanticsNode] and [_combineSemanticsInfo]. ¿ ªˇ4¿ º"  ¿„¿Ë  ¿ 3¿ M  ¿ U*¿ u  ¿!˜¿!ˇ  ¿"%¿"  ¿H
3¿H'  ¿O¿O  ¿V*!¿V0  ¿aJ$¿aQ ¿ac¿ai¿aj¿ar¿az  ¿aç¿aí ¿aß¿aØ¿a¥ ¿a…¿a“ ¿a◊ ¿aÌ¿aˆ¿a˚ ¿b¿b!¿b ¿b4¿b=*¿bE  ¿}íO¿}± ¿}«¿}“¿}ﬁ¿}”¿}ﬂ¿}‡¿Ñ“N¿ÑÛ ¿Ö¿Ö¿Ö¿Ö¿Ö¿Ö]¿ AìÅn¿ BŸÅ/// The [RenderEditablePainter] to use for painting above this
/// [RenderEditable]'s text content.
///
/// The new [RenderEditablePainter] will replace the previously specified
/// foreground painter, and schedule a repaint if the new painter's
/// `shouldRepaint` method returns true.   ¿ C1Ä®¿ C5  ¿ CG!¿ C_   ¿ F^ÅV¿ G†Å/// Sets the [RenderEditablePainter] to use for painting beneath this
/// [RenderEditable]'s text content.
///
/// The new [RenderEditablePainter] will replace the previously specified
/// painter, and schedule a repaint if the new painter's `shouldRepaint`
/// method returns true.   ¿ G⁄Ää¿ Gﬁ  ¿ GÊ!¿ G˛   ¿ IƒÄä¿ IË    ¿ Kxl¿ Kú    ¿ Q!x¿ Qc'/// {@macro dart.ui.textHeightBehavior}   ¿ QúÄ«¿ Q†  ¿ Q≥¿ Q»   ¿ Rg|¿ Rµ8/// {@macro flutter.painting.textPainter.textWidthBasis}   ¿ RÊÄ∂¿ RÍ  ¿ R˘¿ S	   ¿ S†ÄÆ¿ T(v/// The pixel ratio of the current device.
///
/// Should be obtained by querying MediaQuery for the devicePixelRatio.   ¿ TmÄõ¿ Tq  ¿ TÇ¿ Tä   ¿ UÄ¶¿ Uàj/// Character used for obscuring text if [obscureText] is true.
///
/// Must have a length of exactly one.   ¿ U”Ä»¿ U◊  ¿ UÍ¿ UÚ   ¿ Vüh¿ VÎ@/// Whether to hide the text being edited (e.g., for passwords).   ¿ WÄ≥¿ W#  ¿ W/
¿ W5   ¿ W÷Ä‰¿ X{Äà/// Controls how tall the selection highlight boxes are computed to be.
///
/// See [ui.BoxHeightStyle] for details on available styles.   ¿ XΩk¿ X¡  ¿ X÷¿ XÈ   ¿ Y,Ä‡¿ YœÄá/// Controls how wide the selection highlight boxes are computed to be.
///
/// See [ui.BoxWidthStyle] for details on available styles.   ¿ Zh¿ Z  ¿ Z'¿ Z9   ¿ [≥Çb¿ ]ﬂÅ˝/// Track whether position of the start of the selected text is within the viewport.
///
/// For example, if the text contains "Hello World", and the user selects
/// "Hello", then scrolls so only "World" is visible, this will become false.
/// If the user scrolls back so that the "H" is visible again, this will
/// become true.
///
/// This bool indicates whether the text is scrolled so that the handle is
/// inside the text field viewport, as opposed to whether it is actually
/// visible on the screen.   ¿ ^lÇ`¿ `öÅˇ/// Track whether position of the end of the selected text is within the viewport.
///
/// For example, if the text contains "Hello World", and the user selects
/// "World", then scrolls so only "Hello" is visible, this will become
/// 'false'. If the user scrolls back so that the "d" is visible again, this
/// will become 'true'.
///
/// This bool indicates whether the text is scrolled so that the handle is
/// inside the text field viewport, as opposed to whether it is actually
/// visible on the screen.   ¿ vÚÅ.¿ w¸ÄÙ/// Returns a plain text version of the text in [TextPainter].
///
/// If [obscureText] is true, returns the obscured text. See
/// [obscureText] and [obscuringCharacter].
/// In order to get the styled text as an [InlineSpan] tree, use [text].   ¿ x$Ä∂¿ x¿ÄÖ/// The text to paint in the form of a tree of [InlineSpan]s.
///
/// In order to get the plain text representation, use [plainText].   ¿ yrÅL¿ yv  ¿ y{¿ yà   ¿ z¬e¿ {0/// How the text should be aligned horizontally.   ¿ {*Ä¢¿ {.  ¿ {8¿ {C   ¿ {–ÉW¿ ~˙Ç3/// The directionality of the text.
///
/// This decides how the [TextAlign.start], [TextAlign.end], and
/// [TextAlign.justify] values of [textAlign] are interpreted.
///
/// This is also used to disambiguate how to render bidirectional text. For
/// example, if the [text] is an English phrase followed by a Hebrew phrase,
/// in a [TextDirection.ltr] context the English phrase will be on the left
/// and the Hebrew phrase to its right, while in a [TextDirection.rtl]
/// context, the English phrase will be on the right and the Hebrew phrase on
/// its left.   ¿ *Ä“¿ .  ¿ <¿ K   ¿ Ä Ç
¿ ÅÏÅÕ/// Used by this renderer's internal [TextPainter] to select a locale-specific
/// font.
///
/// In some cases the same Unicode character may be rendered differently depending
/// on the locale. For example the 'È™®' character is rendered differently in
/// the Chinese and Japanese locales. In these cases the [locale] may be used
/// to select a locale-specific font.
///
/// If this value is null, a system-dependent algorithm is used to select
/// the font.   ¿ ÇÄó¿ Ç  ¿ Ç¿ Ç!   ¿ Ç®Ä†¿ É"e/// The [StrutStyle] used by the renderer's internal [TextPainter] to
/// determine the strut to use.   ¿ ÉKÄß¿ ÉO  ¿ ÉZ¿ Ég   ¿ Éˆd¿ Ñ2./// The color to use when painting the cursor.   ¿ Ñ]I¿ Ña  ¿ Ñm¿ Ñu   ¿ Ñ™ÅE¿ Ö≤Ä/// The color to use when painting the cursor aligned to the text while
/// rendering the floating cursor.
///
/// Typically this would be set to [CupertinoColors.inactiveGray].
///
/// If this is null, the background cursor is not painted.   ¿ ÖÚ^¿ Öˆ  ¿ Ü¿ Ü   ¿ ÜpU¿ Ü´ /// Whether to paint the cursor.   ¿ ÜÎÅè¿ ÜÔ  ¿ Ü˙¿ á   ¿ à–P¿ â
./// Whether the editable is currently focused.   ¿ â=Äá¿ âA  ¿ âJ
¿ âP   ¿ â»v¿ ä&R/// Whether this rendering object will take a full line regardless the text width.   ¿ ä\ÄÅ¿ ä`  ¿ äj
¿ äp   ¿ ä·Q¿ ã//// Whether this rendering object is read only.   ¿ ãOÄá¿ ãS  ¿ ã\
¿ ãb   ¿ ã⁄Ç¿ ç∆ÅŒ/// The maximum number of lines for the text to span, wrapping if necessary.
///
/// If this is 1 (the default), the text will not wrap, but will extend
/// indefinitely instead.
///
/// If this is null, there is no limit to the number of lines.
///
/// When this is not null, the intrinsic height of the render object is the
/// height of one line of text multiplied by this value. In other words, this
/// also controls the height of the actual editing widget.   ¿ çÒÅ˙¿ éHP/// The value may be null. If it is not null, then it must be greater than zero. ¿ éQ
¿ éW   ¿ èÔT¿ ê-2/// {@macro flutter.widgets.editableText.minLines}   ¿ êXÄ¸¿ êØP/// The value may be null. If it is not null, then it must be greater than zero. ¿ ê∏
¿ êæ   ¿ ëXQ¿ ëï1/// {@macro flutter.widgets.editableText.expands}   ¿ ëΩ~¿ ë¡  ¿ ë…
¿ ëœ   ¿ í?r¿ í~1/// The color to use when painting the selection.   ¿ í¥T¿ í∏  ¿ í«¿ íœ   ¿ ìÇ*¿ ïÅ/// Deprecated. Will be removed in a future version of Flutter. Use
/// [textScaler] instead.
///
/// The number of font pixels for each logical pixel.
///
/// For example, if the text scale factor is 1.5, text will be 50% larger than
/// the specified font size.  ¿ î"¿ î#¿ î-¿ î˜¿ î3¿ îR¿ îø¿ ï9Å+¿ ñ  ¿ ñ&¿ ñ.  ¿ ï9¿ ï:¿ ïD¿ ñ¿ ïJ¿ ïi¿ ï÷¿ ñhl¿ ñÆ4/// {@macro flutter.painting.textPainter.textScaler}   ¿ ñ◊Ä¶¿ ñ€  ¿ ñÊ¿ ñÚ   ¿ óÅÅ¿ òÑÄ„/// The region of text that is selected, if any.
///
/// The caret position is represented by a collapsed selection.
///
/// If [selection] is null, there is no selection and attempts to
/// manipulate the selection will throw.   ¿ òºÄ⁄¿ ò¿  ¿ ò ¿ ò⁄   ¿ ôöÅE¿ öÕÅ/// The offset at which the text should be painted.
///
/// If the text content is larger than the editable line itself, the editable
/// line clips the text. This property controls which part of the text is
/// visible by shifting the text by the given offset before clipping.   ¿ ö¸Å¿ õ   ¿ õ¿ õ   ¿ úK¿ ú>!/// How thick the cursor will be.   ¿ úzÄâ¿ ú~  ¿ úä¿ úí   ¿ ùÅ‚¿ û¥Å)/// How tall the cursor will be.
///
/// This can be null, in which case the getter will actually return [preferredLineHeight].
///
/// Setting this to itself fixes the value to the current [preferredLineHeight]. Setting
/// this to null returns the behavior of deferring to [preferredLineHeight].   ¿ üÄç¿ ü	  ¿ ü¿ ü   ¿ üñÅU¿ †¡Å/// {@template flutter.rendering.RenderEditable.paintCursorAboveText}
/// If the cursor should be painted on top of the text or underneath it.
///
/// By default, the cursor should be painted on top for iOS platforms and
/// underneath for Android platforms.
/// {@endtemplate}   ¿ °Å©¿ °  ¿ °!
¿ °'   ¿ ¢µÇ¿ §èÅæ/// {@template flutter.rendering.RenderEditable.cursorOffset}
/// The offset that is used, in pixels, when painting the cursor on screen.
///
/// By default, the cursor position should be set to an offset of
/// (-[cursorWidth] * 0.5, 0.0) on iOS platforms and (0, 0) on Android
/// platforms. The origin from where the offset is applied to is the arbitrary
/// location where the cursor ends up being rendered from by default.
/// {@endtemplate}   ¿ §ΩL¿ §¡  ¿ §Œ¿ §÷   ¿ •Ä•¿ •ág/// How rounded the corners of the cursor should be.
///
/// A null value is the same as [Radius.zero].   ¿ •µM¿ •π  ¿ •∆¿ •œ   ¿ ¶Å¿ ¶ÏÄœ/// The [LayerLink] of start selection handle.
///
/// [RenderEditable] is responsible for calculating the [Offset] of this
/// [LayerLink], which will be used as [CompositedTransformTarget] of start handle.   ¿ ß@Ä¶¿ ßD  ¿ ßY¿ ßd   ¿ ßÍÅ¿ ®ÃÄÀ/// The [LayerLink] of end selection handle.
///
/// [RenderEditable] is responsible for calculating the [Offset] of this
/// [LayerLink], which will be used as [CompositedTransformTarget] of end handle.   ¿ ©Ä†¿ ©  ¿ ©1¿ ©<   ¿ ™˙Ç≈¿ ≠ÖÇf/// Whether to allow the user to change the selection.
///
/// Since [RenderEditable] does not handle selection manipulation
/// itself, this actually only affects whether the accessibility
/// hints provided to the system (via
/// [describeSemanticsConfiguration]) will enable selection
/// manipulation. It's the responsibility of this object's owner
/// to provide selection manipulation affordances.
///
/// This field is used by [selectionEnabled] (which then controls
/// the accessibility hints mentioned above). When null,
/// [obscureText] is used to determine the value of
/// [selectionEnabled] instead.   ¿ ≠ÁÄŸ¿ ≠Î  ¿ Æ¿ Æ   ¿ ÆƒÑn¿ ≤ÂÉÔ/// Whether interactive selection are enabled based on the values of
/// [enableInteractiveSelection] and [obscureText].
///
/// Since [RenderEditable] does not handle selection manipulation
/// itself, this actually only affects whether the accessibility
/// hints provided to the system (via
/// [describeSemanticsConfiguration]) will enable selection
/// manipulation. It's the responsibility of this object's owner
/// to provide selection manipulation affordances.
///
/// By default, [enableInteractiveSelection] is null, [obscureText] is false,
/// and this getter returns true.
///
/// If [enableInteractiveSelection] is null and [obscureText] is true, then this
/// getter returns false. This is the common case for password fields.
///
/// If [enableInteractiveSelection] is non-null then its value is
/// returned. An application might [enableInteractiveSelection] to
/// true to enable interactive selection for a password field, or to
/// false to unconditionally disable interactive selection.   ¿ ≥6Å¿¿ ¥∑ÄÇ/// The color used to paint the prompt rectangle.
///
/// The prompt rectangle will only be requested on non-web iOS applications.   ¿ ¥˘f¿ ¥˝  ¿ µ¿ µ   ¿ ∑yÅ¿ ∏sÄ‰/// The maximum amount the text is allowed to scroll.
///
/// This value is only valid after layout and can change as additional
/// text is entered or removed in order to accommodate expanding when
/// [expands] is set to true.   ¿ ∏∫4¿ ∏≈    ¿ ∏ÚÄÜ¿ πZX/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.hardEdge].   ¿ π°Ä°¿ π•  ¿ π≤
¿ π∏   ¿ Ûs'¿ Û|    ¿ ÛûI¿ Ûß    ¿ ÛÎÄŒ¿ Ûˆ    ¿ ÙΩÄ≈¿ Ù»    ¿ ˜JS¿ ˜S    ¿Ä◊¿ßÄè/// An estimate of the height of a line in the text. See [TextPainter.preferredLineHeight].
/// This does not require the layout to be updated.   ¿"AÅ¿#Äµ/// {@template flutter.rendering.RenderEditable.lastSecondaryTapDownPosition}
/// The position of the most recent secondary tap down event on this text
/// input.
/// {@endtemplate}   ¿1˛z¿2J8/// {@macro flutter.painting.TextPainter.wordBoundaries}   ¿VOi¿VX    Tº&Ç•º7   º&º'æœÇ¿æ‘  æÌ!ø   ¿ C›Ç}¿ C‚  ¿ CÒ!¿ D	   ¿ JñÄﬁ¿ J∂    ¿ L"Å¿ LB    ¿ MÉÅå¿ M…>/// Assert that the last layout still matches the constraints.   ¿ a!Åç¿ an=/// Returns the TextPosition above or below the given offset. ¿ aá¿ aï  ¿ aû¿ a¶   ¿ b—ÅÎ¿ c-?/// {@macro flutter.services.TextLayoutMetrics.getLineAtOffset} ¿ c=¿ cK  ¿ c¿ c¿ d¿Ä±¿ e9/// {@macro flutter.painting.TextPainter.getWordBoundary} ¿ e"¿ e0  ¿ d¸¿ d˝¿ euÇ+¿ e’D/// {@macro flutter.services.TextLayoutMetrics.getTextPositionAbove} ¿ eÍ¿ e¯  ¿ eº¿ eΩ¿ g§Ç*¿ hD/// {@macro flutter.services.TextLayoutMetrics.getTextPositionBelow} ¿ h¿ h'  ¿ gÎ¿ gÏ¿ iÔÖg¿ iÙ  ¿ j¿ j   ¿ oZÄû¿ o_  ¿ ot¿ oÜ  ¿ oè¿ o¶   ¿ o¸Ñ%¿ p  ¿ p¿ p  ¿ p,¿ pC   ¿ t%ÄÈ¿ t6   ¿ t%¿ t&¿ uÅ¿ uµÄà/// Marks the render object as needing to be laid out again and have its text
/// metrics recomputed.
///
/// Implies [markNeedsLayout].  ¿ u£¿ u§¿ v3Äª¿ vD   ¿ v3¿ v4¿ à~N¿ àÉ    ¿ µcÇ¿ ∑
ÅD/// Dismisses the currently displayed prompt rectangle and displays a new prompt rectangle
/// over [newRange] in the given color [promptRectColor].
///
/// The prompt rectangle will only be requested on non-web iOS applications.
///
/// When set to null, the currently displayed prompt rectangle (if any) will be dismissed. ¿ ∑¿ ∑)   ¿ º8É¿ ΩJÄ˘/// Returns a list of rects that bound the given selection, and the text
/// direction. The text direction is used by the engine to calculate
/// the closest position to a given point.
///
/// See [TextPainter.getBoxesForSelection] for more details. ¿ Ω_¿ Ωn   ¿ ø[ãZ¿ øl  ¿ øã¿ ø£  ¿ ø[¿ ø\¿  πÄˇ¿  æ  ¿  Õ¿  ’   ¿ ÀºíÏ¿ ÀÕ  ¿ À„¿ ÀÚ  ¿ À˜¿ Ã  ¿ Ã ¿ Ã/  ¿ Àº¿ ÀΩ¿ ﬁ¨Äº¿ ﬁ∫  ¿ ﬁ—¿ ﬁ÷   ¿ ‡:u¿ ‡?  ¿ ‡S¿ ‡b   ¿ ‡≥Å»¿ ‡∏  ¿ ‡‹¿ ‡‚   ¿ ‚Å ¿ ‚Ñ  ¿ ‚©¿ ‚Ø   ¿ ‰MÇ¿ ‰R  ¿ ‰q¿ ‰w   ¿ ÊjÇ5¿ Êo  ¿ Êè¿ Êï   ¿ Ë£ÅG¿ ËÆ  ¿ Ëª
¿ Ë¿   ¿ ÈÓÅi¿ È˘  ¿ Í

¿ Í   ¿ ÏìÄ¸¿ Ïò  ¿ Ï®¿ Ï≥   ¿ ÌìÅ‚¿ Ì§  ¿ Ì´¿ Ì∫  ¿ Ìì¿ Ìî¿ ÔyÅ¿ Ôä   ¿ Ôy¿ Ôz¿ âÅg¿ ö   ¿ â¿ ä¿ ÒÙÅ{¿ Ú  ¿ Ú¿ Ú(  ¿ ÒÙ¿ Òı¿ ıÜÅ¿ ıç  ¿ ı°¿ ıß   ¿ ˜°ÜÌ¿ ˙)ÇV/// Returns the local coordinates of the endpoints of the given selection.
///
/// If the selection is collapsed (and therefore occupies a single point), the
/// returned list is of length one. Otherwise, the selection is not collapsed
/// and the returned list is of length two. In this case, however, the two
/// points might actually be co-located (e.g., because of a bidirectional
/// selection that contains some text but whose ends meet in the middle).
///
/// See also:
///
///  * [getLocalRectForCaret], which is the equivalent but for
///    a [TextPosition] rather than a [TextSelection]. ¿ ˙B¿ ˙Q   ¿ ˛íÉê¿ ˇÙÅK/// Returns the smallest [Rect], in the local coordinate system, that covers
/// the text within the [TextRange] specified.
///
/// This method is used to calculate the approximate position of the IME bar
/// on iOS.
///
/// Returns null if [TextRange.isValid] is false for the given `range`, or the
/// given `range` is collapsed. ¿ ¿    ¿&Ç!¿ÇÅ>/// Returns the position in the text for the given global coordinate.
///
/// See also:
///
///  * [getLocalRectForCaret], which is the reverse operation, taking
///    a [TextPosition] and returning a [Rect].
///  * [TextPainter.getPositionForOffset], which is the equivalent method
///    for a [TextPainter] object. ¿ñ¿û   ¿Kâ¿CÅ‹/// Returns the [Rect] in local coordinates for the caret at the given text
/// position.
///
/// See also:
///
///  * [getPositionForPoint], which is the reverse operation, taking
///    an [Offset] in global coordinates and returning a [TextPosition].
///  * [getEndpointsForSelection], which is the equivalent but for
///    a selection rather than a particular text position.
///  * [TextPainter.getOffsetForCaret], the equivalent method for a
///    [TextPainter] object. ¿X¿f   ¿RÅÜ¿e  ¿~¿Ü  ¿R¿S¿‹Ç(¿Ô  ¿¿  ¿‹¿›¿^Ç.¿b  ¿w¿   ¿êÖ'¿ó  ¿®¿∞   ¿ª_¿Œ  ¿Ë¿  ¿ª¿º¿Å¿1  ¿K¿S  ¿¿¿*Äµ¿=  ¿]¿k  ¿*¿+¿„6¿Ù  ¿ ¿  ¿„¿‰¿Ñ¿;  ¿K¿]  ¿f¿w  ¿¿¿)¿*¿ ÑÅo¿ ï  ¿ °¿ Ø  ¿ µ¿ ∆  ¿ Ñ¿ Ö¿#MÅS¿#˝Ä¢/// Tracks the position of a secondary tap event.
///
/// Should be called before attempting to change the selection based on the
/// position of a secondary tap. ¿$¿$$   ¿$§ÅÖ¿%ÀÅ/// If [ignorePointer] is false (the default) then this method is called by
/// the internal gesture recognizer's [TapGestureRecognizer.onTapDown]
/// callback.
///
/// When [ignorePointer] is true, an ancestor widget must respond to tap
/// down events by calling this method. ¿%Ÿ¿%È   ¿&,i¿&1  ¿&@¿&P   ¿&ôÅe¿'∑Å/// If [ignorePointer] is false (the default) then this method is called by
/// the internal gesture recognizer's [TapGestureRecognizer.onTap]
/// callback.
///
/// When [ignorePointer] is true, an ancestor widget must respond to tap
/// events by calling this method.   ¿(D¿(    ¿(IÅÄ¿)zÅ/// If [ignorePointer] is false (the default) then this method is called by
/// the internal gesture recognizer's [DoubleTapGestureRecognizer.onDoubleTap]
/// callback.
///
/// When [ignorePointer] is true, an ancestor widget must respond to double
/// tap events by calling this method.   ¿)ÕÅÄ¿*˛Å/// If [ignorePointer] is false (the default) then this method is called by
/// the internal gesture recognizer's [LongPressGestureRecognizer.onLongPress]
/// callback.
///
/// When [ignorePointer] is true, an ancestor widget must respond to long
/// press events by calling this method.   ¿+PP¿+U    ¿+§Çö¿-øÇ/// Move selection to the location of the last tap down.
///
/// {@template flutter.rendering.RenderEditable.selectPosition}
/// This method is mainly used to translate user inputs in global positions
/// into a [TextSelection]. When used in conjunction with a [EditableText],
/// the selection change is fed back into [TextEditingController.selection].
///
/// If you have a [TextEditingController], it's generally easier to
/// programmatically manipulate its `value` or `selection` directly.
/// {@endtemplate} ¿-–$¿-   ¿.BÉ∏¿/	Äπ/// Select text between the global positions [from] and [to].
///
/// [from] corresponds to the [TextSelection.baseOffset], and [to] corresponds
/// to the [TextSelection.extentOffset]. ¿/¿/-  ¿/2
¿/;  ¿/>$¿/^   ¿2|Å¿3|/// Select a word around the location of the last tap down.
///
/// {@macro flutter.rendering.RenderEditable.selectPosition} ¿3$¿31   ¿3ÖÖ¿5År/// Selects the set words of a paragraph that intersect a given range of global positions.
///
/// The set of words selected are not strictly bounded by the range of global positions.
///
/// The first and last endpoints of the selection will always be at the
/// beginning and end of a word respectively.
///
/// {@macro flutter.rendering.RenderEditable.selectPosition} ¿5"¿53  ¿58
¿5A  ¿5D$¿5d   ¿8òÇ˙¿9z/// Move the selection to the beginning or end of a word.
///
/// {@macro flutter.rendering.RenderEditable.selectPosition} ¿9/$¿9O   ¿;ñã9¿<X/// Returns a [TextSelection] that encompasses the word at the given
/// [TextPosition]. ¿<&¿<4  ¿;Û¿;Ù¿HBÇD¿HG  ¿HU¿H]  ¿Hl!¿Ht  ¿Hg¿H~¿HÑ¿HÖ¿Nîy¿Nô    ¿OÅÇã¿P-Ä†/// On iOS, the cursor is taller than the cursor on Android. The height
/// of the cursor for iOS is approximate and obtained through an eyeball
/// comparison.   ¿R}ÅÕ¿RÑ  ¿Rô¿R°   ¿TNÅÿ¿TS    ¿VºÇ–¿V⁄  ¿VÎ$¿W  ¿Vº¿VΩ¿V»¿V…¿YêÜ–¿Y°   ¿Yê¿Yë¿blÅ:¿bz  ¿bô¿b°  ¿b®¿bÆ   ¿c™äG¿dP/// Returns the position within the text field closest to the raw cursor offset. ¿d)¿d1  ¿dB¿dI   ¿mıÑÌ¿ncd/// Sets the screen position of the floating cursor and the text position
/// closest to the cursor. ¿nu¿né  ¿nî¿nú  ¿n™¿n∏  ¿nÀ¿n‘   ¿rÊÉ¿r¸  ¿s¿s  ¿s'¿s=   ¿u˝ÑC¿x‘Ç°/// Starts a [VerticalCaretMovementRun] at the given location in the text, for
/// handling consecutive vertical caret movements.
///
/// This can be used to handle consecutive upward/downward arrow key movements
/// in an input field.
///
/// {@macro flutter.rendering.RenderEditable.verticalArrowKeyMovement}
///
/// The [VerticalCaretMovementRun.isValid] property indicates whether the text
/// layout has changed and the vertical caret run is invalidated.
///
/// The caller should typically discard a [VerticalCaretMovementRun] when
/// its [VerticalCaretMovementRun.isValid] becomes false, or on other
/// occasions where the vertical caret run should be interrupted. ¿xÔ¿x˝   ¿zDÉJ¿zI  ¿zX¿zi  ¿zq¿zy   ¿}ÊÉZ¿}Î  ¿}˛¿~  ¿~"¿~1  ¿~;¿~C   ¿ÅDÄ‰¿ÅU  ¿Åi¿Åt  ¿Åz¿ÅÉ  ¿ÅD¿ÅE¿Ç,Ç¢¿Ç=  ¿ÇC¿ÇT  ¿Ç\¿Çd  ¿Ç,¿Ç-¿Ö%Å1¿Ö7  ¿ÖT¿Öb  ¿Ö%¿Ö&¿ÜZÉÑ¿Ük  ¿Ü&¿Üú  ¿ÜZ¿Ü[¿â‚ÄÚ¿ä   ¿â‚¿â„ ¿äÿÖ·¿äﬁ  ¿ãk ¿ã¿ã) ¿ã0¿ãH  ¿ã`¿ãW¿ãb¿ãr¿ãw¿ãx¿å`¿åw  ¿ã~J¿ãû   ¿ã~¿ã¿ãÃ/¿ã·   ¿ãÃ¿ãÕ¿ãˇ+¿å   ¿ãˇ¿å ¿å./¿åI    ¿åÉÅÜ¿åá  ¿åè¿åß   ¿éÅ[¿é  ¿é$¿é5  ¿é=¿éE  ¿é¿é¿èlv¿è}  ¿èÑ¿èì  ¿èl¿èm¿èÊa¿è˜   ¿èÊ¿èÁ¿êKl¿êi  ¿êz$¿êî  ¿êK¿êL¿êW¿êX ¿êªäS¿ï¬Ñ˜/// An interface that paints within a [RenderEditable]'s bounds, above or
/// beneath its text content.
///
/// This painter is typically used for painting auxiliary content that depends
/// on text layout metrics (for instance, for painting carets and text highlight
/// blocks). It can paint independently from its [RenderEditable], allowing it
/// to repaint without triggering a repaint on the entire [RenderEditable] stack
/// when only auxiliary content changes (e.g. a blinking cursor) are present. It
/// will be scheduled to repaint when:
///
///  * It's assigned to a new [RenderEditable] (replacing a prior
///    [RenderEditablePainter]) and the [shouldRepaint] method returns true.
///  * Any of the [RenderEditable]s it is attached to repaints.
///  * The [notifyListeners] method is called, which typically happens when the
///    painter's attributes change.
///
/// See also:
///
///  * [RenderEditable.foregroundPainter], which takes a [RenderEditablePainter]
///    and sets it as the foreground painter of the [RenderEditable].
///  * [RenderEditable.painter], which takes a [RenderEditablePainter]
///    and sets it as the background painter of the [RenderEditable].
///  * [CustomPainter], a similar class which paints within a [RenderCustomPaint].    ¿ïÛÇŒ¿òèÇ~/// Determines whether repaint is needed when a new [RenderEditablePainter]
/// is provided to a [RenderEditable].
///
/// If the new instance represents different information than the old
/// instance, then the method should return true, otherwise it should return
/// false. When [oldDelegate] is null, this method should always return true
/// unless the new painter initially does not paint anything.
///
/// If the method returns false, then the [paint] call might be optimized
/// away. However, the [paint] method will get called whenever the
/// [RenderEditable]s it attaches to repaint, even if [shouldRepaint] returns
/// false. ¿òù"¿òµ   ¿ò≈ÇG¿öÕÅ/// Paints within the bounds of a [RenderEditable].
///
/// The given [Canvas] has the same coordinate space as the [RenderEditable],
/// which may be different from the coordinate space the [RenderEditable]'s
/// [TextPainter] uses, when the text moves inside the [RenderEditable].
///
/// Paint operations performed outside of the region defined by the [canvas]'s
/// origin and the [size] parameter may get clipped, when [RenderEditable]'s
/// [RenderEditable.clipBehavior] is not [Clip.none]. ¿ö”¿ö€  ¿ö‚	¿öË  ¿öÌ¿ö˝    ¿õãÔ¿õ  ¿õNÄ≠ ¿õN¿õc ¿õl¿õx  ¿õè¿õó  ¿õø¿õ≠¿õ¡¿õÍ¿õ⁄¿õÏ¿õˇ$¿ú ¿ú¿ú!¿ú"¿úX¿ú_  ¿ùI¿ùT  ¿ûËA¿û˙ ¿ü¿ü¿ü¿ü#¿ü$¿†≤>¿†√ ¿†⁄¿†‹¿†›¿†Í¿†Î¿ú(-¿ú3    ¿úrÄõ¿úv  ¿úÖ¿úç   ¿ù5¿ù     ¿ùiÄ•¿ùm  ¿ù~¿ùä   ¿ûÄ”¿û∑Äà/// Controls how tall the selection highlight boxes are computed to be.
///
/// See [ui.BoxHeightStyle] for details on available styles.   ¿ü-ÄØ¿ü1  ¿üF¿üY   ¿ü‡Äœ¿†ÉÄá/// Controls how wide the selection highlight boxes are computed to be.
///
/// See [ui.BoxWidthStyle] for details on available styles.   ¿†ÙÄ´¿†¯  ¿°¿°   ¿°£É:¿°¥  ¿°∫¿°¬  ¿°…	¿°œ  ¿°‘¿°‰  ¿°£¿°§¿§·Ç¿§Ú  ¿• "¿•  ¿§·¿§‚ ¿ßë∞¿ß  ¿ß7 ¿ß7¿ßD   	¿ßs¿ßx ¿ßá¿®›¿®‚ ¿®ı¿®ˇ ¿© ¿©¿©¿©¿©#.¿©4 ¿©J¿©O¿©P¿©~¿©Ö  ¿™Y¿™a  ¿´/"¿´6 ¿´F¿´L¿´M¿¨#¿¨*  ¿≠X¿≠^  ¿ßK%¿ßT    ¿ßèÄÜ¿ßì  ¿ßü
¿ß•   ¿©V%¿©a    ¿©îÄî¿©ò  ¿©£¿©´   ¿™,*¿™8    ¿™rÄç¿™v  ¿™É¿™å   ¿´)¿´    ¿´UÄå¿´Y  ¿´f¿´n   ¿´Â;¿´    ¿¨DÄŸ¿¨H  ¿¨^¿¨f   ¿≠!4¿≠+    ¿≠uÄù¿≠y  ¿≠å¿≠ì   ¿ÆÉ-¿Æ  ¿Æ.¿Æ6  ¿Æ=¿ÆM  ¿Æ\¿Æc  ¿Æn¿Æ|   ¿±GÑ‰¿±X  ¿±^¿±f  ¿±m	¿±s  ¿±x¿±à  ¿±G¿±H¿∂/ÇÄ¿∂@  ¿∂N"¿∂f  ¿∂/¿∂0 ¿∏≥ÖA¿∏π  ¿∏˚< ¿∏˚¿π ¿π¿π,   ¿π;*¿π]   ¿πjÄ†¿π{  ¿πá¿πï  ¿πj¿πk¿∫Ä¶¿∫  ¿∫.¿∫<  ¿∫¿∫¿∫∏Ä ¿∫…  ¿∫œ¿∫◊  ¿∫ﬁ	¿∫‰  ¿∫È¿∫˘  ¿∫∏¿∫π¿ªÜÇl¿ªó  ¿ª•"¿ªΩ  ¿ªÜ¿ªá          ÇƒÇ— ÇﬁÇÌ&Ç˙ ÉÉ°dÉ≤ É—É€É‹ÉÂÑÉÉÊÉÚÉˇÉ˜ÑÑ?:ÑL ÑeÑkÑlÑtÑxÑuÖÛQÜ  Ü>Ü9Ü@  ã‚ <ÄÜÄ§Ä•ÄøÄ€ÅBÅCÅpÅöÅ¬ÅÎÇÇÇ'ÇCÇXÇuÇãÇ§Ç√ÇƒÇÌÉÉ ÉnÉ°ÑÑÑ?Ñ{Ñ|Ñ€ÖÖjÖ™ÖÛÜFÜGÜêÜﬂÜ¯áááZáíáìáﬂàà4à5àpàíàìàüà¬à‰à˜à˝â)â=âCâjâäâ≥â∑â∏âƒâ⁄âÛää.äLäiäzäìäôäùäûä™äﬂä‡ä‚ä„ã1ã}ãïãôã„å0å}åÃççjçñçöçËé7éáé÷è$èBèFèmèwèèâèŸê&êuê≈ëë`ëqëuë√íí_íÖíòíúí›ì'ìwì»îîî]îwî{î…ïïgïÉï∆ï‰ï¯ññ.ñEñ^ñcñdñ}ñëñ∂ñ∑ñ‚óóóó_óeó≥ó…óœòò[òpòÖòôòüò¸ôLôàôºô‘ô⁄ôÔôÛôÙö_ö`ö´ö¿ö›õ4õVõsõyõ°õ¢õ˝ú^úŒú˘ùùùùù<ùQùrùvùwùÉùóù¨ùﬂùÛù˘ûXûoûíûΩûŒû“û”û¸üü:üRügüÑüòüûü˝††7†b†s†w†x†∫†”†Ÿ°°%°]°Ç°≥°Ã¢
¢%¢6¢@¢H¢U¢ì¢≤¢√¢Õ¢’¢€£££££[£Ñ£à£“§"§K§O§û§Ì•=•ã•⁄•Ò•ı¶E¶ñ¶⁄ß¶ß¯ß˛®<®B®ë®ó®Â©3©v©|©≈©÷©È©ˇ™)™T™l™é™≥™«™Ù´´6´I´c´´ö´´´Ã¨;¨w¨}¨ü¨—¨Ô≠≠3≠N≠i≠ï≠–≠ıÆÆ'ÆEÆ_ÆyÆ†Æ«ÆÍØ0ØsØôØÂ∞∞!∞H∞q∞ï∞√∞‚±±D±S±†±‘±ﬁ±Ì≤*≤o≤y≤à≤ÿ≥8≥B≥|≥ü≥€≥˛¥¥2¥Y¥ƒ¥›µ
µ+µ\µÖµèµŒµÎ∂∂#∂B∂[∂~∂£∂‘∑∑B∑w∑®∑Ÿ∑¸∏∏8∏]∏É∏¥∏Î∏Ïπ#πWπöπ€π‹∫∫d∫e∫ë∫¿∫Ôª0ª1ªbªªïªôªöªµªÏº#º$º0ºCºiºëºµº›ΩΩ"ΩSΩzΩ£Ω Ωˆææ4æPænæãæ≠æ≥æ»æÃæÕøøbøÖø–øı¿ @
¿ @¿ @¿ @@¿ @∑¿ @·¿ A¿ A&¿ Aa¿ Ag¿ Aå¿ Aê¿ Aë¿ A“¿ A˘¿ Aˇ¿ BK¿ Bë¿ Bº¿ C¿ C/¿ Cl¿ Cò¿ C¶¿ C¨¿ C÷¿ C⁄¿ C€¿ D¿ Df¿ D¿ DÈ¿ DÍ¿ E¿ Eå¿ E∂¿ EÓ¿ E˚¿ F6¿ F<¿ FW¿ F[¿ F\¿ F§¿ FÀ¿ F—¿ G¿ Gh¿ GÉ¿ Gµ¿ Gÿ¿ H¿ H-¿ H;¿ HA¿ Ha¿ He¿ Hf¿ H{¿ H≈¿ I¿ I¿ I ¿ Ik¿ I¡¿ I¬¿ JO¿ Jî¿ J€¿ K¿ K0¿ Ka¿ Kj¿ Kq¿ Ku¿ Kv¿ KÂ¿ L ¿ L]¿ Lâ¿ L≤¿ Lÿ¿ LÛ¿ M%¿ M.¿ M5¿ M9¿ M:¿ M]¿ MÄ¿ MÅ¿ M¬¿ MÁ¿ MÛ¿ N,¿ Nc¿ O¿ O¿ O¿ O¿ O\¿ Ol¿ Or¿ Oø¿ P
¿ P:¿ P@¿ Pè¿ Pœ¿ P’¿ Q¿ Q¿ Q¿ QI¿ Qö¿ Q–¿ R¿ R¿ R¿ RE¿ R`¿ Rd¿ Re¿ R†¿ R‰¿ S¿ SA¿ SO¿ SU¿ S~¿ Sô¿ Sù¿ Sû¿ SÀ¿ S—¿ T¿ TO¿ Tk¿ Tí¿ T∑¿ T≈¿ TÀ¿ TÍ¿ U¿ U	¿ U
¿ UL¿ UR¿ U{¿ U≥¿ U—¿ U˙¿ V"¿ V0¿ V6¿ V`¿ VÅ¿ Vò¿ Vú¿ Vù¿ V‡¿ W¿ W¿ W=¿ W^¿ Wl¿ Wr¿ Wå¿ WØ¿ Wœ¿ W”¿ W‘¿ X¿ X$¿ Xc¿ Xª¿ XÒ¿ Y%¿ Y)¿ Y*¿ Yt¿ Yz¿ Y∏¿ Z¿ ZA¿ Zt¿ Zx¿ Zy¿ Z«¿ [¿ [¿ [^¿ [Å¿ [∞¿ [±¿ \¿ \¿ \Z¿ \™¿ \ı¿ ]¿ ]¿ ][¿ ]¶¿ ]√¿ ^¿ ^i¿ ^j¿ ^ø¿ ^≈¿ _¿ _Z¿ _©¿ _√¿ _…¿ `¿ `a¿ `~¿ `Õ¿ a¿ a¿ a_¿ a∑¿ b¿ bf¿ b´¿ bØ¿ b∞¿ bŒ¿ bœ¿ c¿ c¿ cV¿ cw¿ c∫¿ d¿ d¿ di¿ do¿ dπ¿ dΩ¿ dæ¿ d˙¿ e¿ e;¿ en¿ er¿ es¿ e∫¿ e∆¿ f¿ fM¿ fò¿ f◊¿ g ¿ g^¿ gù¿ g°¿ g¢¿ gÈ¿ gı¿ h2¿ h|¿ h«¿ i¿ iO¿ iå¿ iÀ¿ iœ¿ i–¿ iÏ¿ iÌ¿ j0¿ jO¿ jn¿ jù¿ j ¿ jÿ¿ jﬁ¿ k¿ k¿ kQ¿ kû¿ kµ¿ kº¿ l¿ lS¿ l°¿ l€¿ m,¿ my¿ m£¿ m◊¿ m˘¿ n)¿ n*¿ nh¿ n≥¿ n ¿ n—¿ o¿ o%¿ oS¿ oW¿ oX¿ oÆ¿ oı¿ o˘¿ o˙¿ pK¿ pl¿ p∫¿ q	¿ qV¿ q¢¿ qÛ¿ r+¿ r4¿ rÖ¿ r÷¿ s¿ sH¿ sê¿ sô¿ sü¿ sπ¿ t
¿ t¿ t¿ t"¿ t#¿ t/¿ tI¿ te¿ t≠¿ t‹¿ u¿ u¿ u¿ u`¿ uz¿ uÄ¿ u°¿ uÆ¿ uÕ¿ uÒ¿ v¿ v,¿ v0¿ v1¿ v=¿ v]¿ v¿ v£¿ v«¿ vÎ¿ vÔ¿ v¿ w1¿ w7¿ wv¿ w§¿ wÔ¿ x!¿ x"¿ xb¿ xh¿ xÆ¿ x€¿ x˝¿ y)¿ yp¿ yê¿ y∂¿ yƒ¿ y ¿ yÏ¿ z¿ z.¿ zX¿ zÄ¿ zõ¿ zª¿ zø¿ z¿¿ zÛ¿ {(¿ {K¿ {v¿ {Ñ¿ {ä¿ {Æ¿ {…¿ {Õ¿ {Œ¿ {Ù¿ {˙¿ |=¿ |~¿ |Ñ¿ |“¿ }!¿ }o¿ }∏¿ ~¿ ~¿ ~W¿ ~û¿ ~Ê¿ (¿ S¿ Ç¿ ê¿ ñ¿ æ¿ Ÿ¿ ˘¿ ˝¿ ˛¿ ÄO¿ Ä[¿ Äa¿ Ä∂¿ Å¿ ÅT¿ Å|¿ ÅÇ¿ ÅŒ¿ Åﬁ¿ Ç¿ Ç)¿ ÇQ¿ Ç_¿ Çe¿ ÇÜ¿ Ç°¿ Ç•¿ Ç¶¿ ÇÓ¿ É¿ ÉI¿ Éo¿ Éõ¿ É©¿ ÉØ¿ É‘¿ ÉÔ¿ ÉÛ¿ ÉÙ¿ Ñ%¿ Ñ[¿ Ñ}¿ Ñ£¿ Ñß¿ Ñ®¿ ÑÚ¿ Ö¿ Ö¿ Öb¿ Öh¿ Ö•¿ Ö¿ Ü¿ ÜM¿ ÜQ¿ ÜR¿ Üm¿ Ün¿ Üë¿ Ü∆¿ ÜÈ¿ á¿ á7¿ áE¿ áK¿ á_¿ áí¿ áò¿ á∂¿ á”¿ áı¿ á˚¿ à¿ à(¿ àA¿ àq¿ àw¿ à{¿ à|¿ àó¿ à…¿ àÕ¿ àŒ¿ àˇ¿ â!¿ â;¿ âX¿ âv¿ âÑ¿ âä¿ â°¿ â¡¿ â≈¿ â∆¿ ä¿ ä?¿ äZ¿ äx¿ äó¿ ä•¿ ä´¿ ä√¿ ä⁄¿ äﬁ¿ äﬂ¿ ã¿ ã3¿ ãM¿ ãj¿ ãà¿ ãñ¿ ãú¿ ã≥¿ ã”¿ ã◊¿ ãÿ¿ å'¿ å-¿ åw¿ åì¿ åô¿ å⁄¿ å‡¿ ç.¿ ç~¿ çª¿ ç›¿ çÔ¿ éB¿ é_¿ éá¿ é§¿ é≤¿ é∏¿ éœ¿ é–¿ è ¿ èp¿ èö¿ èÕ¿ èË¿ èÏ¿ èÌ¿ ê"¿ êD¿ êV¿ ê©¿ ê∆¿ êÓ¿ ë¿ ë¿ ë¿ ë6¿ ëQ¿ ëU¿ ëV¿ ëä¿ ë™¿ ëª¿ ë◊¿ ëÛ¿ í¿ í¿ í¿ í8¿ í<¿ í=¿ íq¿ í≤¿ í◊¿ ì¿ ì	¿ ì
¿ ìP¿ ìl¿ ìr¿ ì™¿ ì∞¿ î¿ î ¿ î/¿ îN¿ îª¿ îı¿ î˘¿ ï7¿ ïF¿ ïe¿ ï“¿ ñ¿ ñ¿ ñ6¿ ña¿ ñe¿ ñf¿ ñù¿ ñ’¿ ñ˙¿ ó&¿ ó4¿ ó:¿ ó_¿ óz¿ ó~¿ ó¿ ó≤¿ ó∏¿ ó˙¿ ò ¿ òD¿ òo¿ òù¿ ò∫¿ ò‚¿ ô¿ ô¿ ô¿ ô-¿ ô]¿ ôs¿ ôì¿ ôó¿ ôò¿ ôŒ¿ ô‘¿ ö$¿ öp¿ ö∏¿ ö‡¿ ö˙¿ õ¿ õ;¿ õI¿ õO¿ õc¿ õë¿ õó¿ õ¨¿ õ¿¿ õÎ¿ õÒ¿ ú¿ ú¿ ú¿ ú1¿ ú[¿ úx¿ úö¿ úª¿ ú…¿ úœ¿ úÈ¿ ù ¿ ù¿ ù¿ ù(¿ ù.¿ ùã¿ ùë¿ ùÏ¿ û;¿ ûß¿ ûÍ¿ ü¿ ü'¿ üI¿ üW¿ ü]¿ üx¿ üè¿ üì¿ üî¿ ü‹¿ †'¿ †-¿ †y¿ †°¿ †∂¿ †Ï¿ °¿ °/¿ °U¿ °c¿ °i¿ °à¿ °»¿ °ı¿ ¢¿ ¢^¿ ¢ê¿ ¢Æ¿ ¢≤¿ ¢≥¿ ¢Û¿ £A¿ £G¿ £ã¿ £‘¿ §%¿ §m¿ §Ç¿ §ª¿ §ﬁ¿ •¿ •
¿ •¿ •B¿ •H¿ •y¿ •≥¿ •◊¿ •ˇ¿ ¶¿ ¶¿ ¶5¿ ¶;¿ ¶Ü¿ ¶‹¿ ß¿ ß>¿ ßl¿ ßñ¿ ß§¿ ß™¿ ßÕ¿ ß„¿ ßÁ¿ ßË¿ ®¿ ®¿ ®h¿ ®º¿ ®˜¿ ©¿ ©D¿ ©l¿ ©z¿ ©Ä¿ ©°¿ ©∑¿ ©ª¿ ©º¿ ™¿ ™)¿ ™/¿ ™{¿ ™£¿ ™§¿ ™∆¿ ™˜¿ ™¯¿ ´1¿ ´7¿ ´{¿ ´æ¿ ´Ê¿ ¨$¿ ¨g¿ ¨ú¿ ¨¢¿ ¨Ê¿ ≠!¿ ≠W¿ ≠y¿ ≠¿¿ ≠Â¿ Æ¿ ÆE¿ ÆS¿ ÆY¿ ÆÇ¿ Æù¿ ÆΩ¿ Æ¡¿ Æ¬¿ Ø	¿ Ø?¿ ØE¿ Øâ¿ ØÃ¿ ØÙ¿ ∞2¿ ∞u¿ ∞™¿ ∞∞¿ ± ¿ ±$¿ ±*¿ ±}¿ ±∆¿ ±Ã¿ ≤¿ ≤U¿ ≤ú¿ ≤⁄¿ ≤¯¿ ≥/¿ ≥3¿ ≥4¿ ≥h¿ ≥n¿ ≥Ω¿ ¥¿ ¥g¿ ¥™¿ ¥˜¿ µ ¿ µ\¿ µ`¿ µa¿ µæ¿ µ˙¿ ∂ ¿ ∂O¿ ∂U¿ ∂≤¿ ∑¿ ∑4¿ ∑r¿ ∑v¿ ∑w¿ ∑Ø¿ ∑µ¿ ∑˛¿ ∏F¿ ∏f¿ ∏ò¿ ∏∑¿ ∏∏¿ ∏Ô¿ ∏¿ π&¿ π,¿ πO¿ πy¿ πü¿ π¿¿ π‚¿ πˇ¿ ∫¿ ∫9¿ ∫?¿ ∫C¿ ∫D¿ ∫Ö¿ ∫¿¿ ∫¯¿ ∫˘¿ ªE¿ ªî¿ ª”¿ ª˝¿ º5¿ º6¿ ºÅ¿ º»¿ ºı¿ º˚¿ Ω:¿ Ωz¿ Ωù¿ Ω’¿ æ¿ æS¿ æå¿ æ«¿ ø¿ ø/¿ øT¿ øX¿ øY¿ øe¿ ø¨¿ øﬁ¿ ¿!¿ ¿p¿ ¿æ¿ ¿›¿ ¡¿ ¡u¿ ¡Æ¿ ¡÷¿ ¬'¿ ¬M¿ ¬Z¿ ¬~¿ ¬£¿ ¬±¿ ¬∑¿ ¬·¿ ¬˙¿ √T¿ √c¿ √ó¿ √Ø¿ √ı¿ ƒB¿ ƒÉ¿ ƒ“¿ ≈¿ ≈/¿ ≈Q¿ ≈π¿ ≈ ¿ ≈Ÿ¿ ≈Â¿ ∆¿ ∆&¿ ∆0¿ ∆é¿ ∆ñ¿ ∆ú¿ ∆ß¿ ∆Ÿ¿ ∆˙¿ «¿ «C¿ «`¿ «{¿ «ö¿ «õ¿ «√¿ «ˆ¿ «¸¿ «˝¿ »¿ »G¿ »M¿ »N¿ »ã¿ »≥¿ »˛¿ …¿ …V¿ …™¿ …≤¿ …¸¿  ¿  R¿  §¿  ¨¿  ≤¿  ∂¿  ∑¿  ‹¿ À¿ À*¿ À>¿ À¿ Àà¿ ÀÆ¿ Àµ¿ Àπ¿ À∫¿ À∆¿ Ã:¿ Ã|¿ Ãª¿ ÃÔ¿ Õ¿ Õ¿ Õ2¿ ÕP¿ Õh¿ Õã¿ ÕÏ¿ Œ9¿ Œë¿ Œ∆¿ Œ·¿ œ¿ œ¿ œ;¿ œ<¿ œ\¿ œ™¿ œÒ¿ – ¿ –é¿ –ÿ¿ —*¿ —W¿ —}¿ —ò¿ —¢¿ —∆¿ —Â¿ —Ù¿ “5¿ “ä¿ “ß¿ “ª¿ “≈¿ “Ô¿ ”!¿ ”[¿ ”î¿ ”ƒ¿ ”Œ¿ ‘¿ ‘U¿ ‘s¿ ‘ó¿ ‘∫¿ ‘¿ ’(¿ ’3¿ ’Å¿ ’“¿ ’˜¿ ÷"¿ ÷L¿ ÷w¿ ÷£¿ ÷Æ¿ ÷¸¿ ◊,¿ ◊Y¿ ◊Œ¿ ÿ¿ ÿ/¿ ÿc¿ ÿè¿ ÿ≈¿ ÿ¿ ÿ˛¿ Ÿ?¿ Ÿq¿ Ÿ≠¿ Ÿÿ¿ ŸÊ¿ ⁄'¿ ⁄Y¿ ⁄õ¿ ⁄©¿ ⁄º¿ €¿ €¿ €¿ €L¿ €ü¿ €Ì¿ €˜¿ ‹"¿ ‹X¿ ‹®¿ ‹π¿ ‹Ê¿ ›
¿ › ¿ ›W¿ ›d¿ ›n¿ ›¿ ›≠¿ ›Õ¿ ›˛¿ ﬁ!¿ ﬁ)¿ ﬁ/¿ ﬁV¿ ﬁ•¿ ﬁ©¿ ﬁ™¿ ﬁ‹¿ ﬁÏ¿ ﬂ'¿ ﬂ^¿ ﬂe¿ ﬂi¿ ﬂj¿ ﬂ±¿ ﬂÒ¿ ‡7¿ ‡8¿ ‡n¿ ‡¨¿ ‡∞¿ ‡±¿ ‡Ù¿ ·¿ ·g¿ ·á¿ ·ï¿ ·õ¿ ·Ô¿ ‚¿ ‚K¿ ‚q¿ ‚x¿ ‚|¿ ‚}¿ ‚¡¿ ‚‡¿ „5¿ „U¿ „c¿ „i¿ „Ω¿ „–¿ ‰¿ ‰?¿ ‰F¿ ‰J¿ ‰K¿ ‰â¿ ‰®¿ ‰˚¿ Â:¿ ÂV¿ Âd¿ Âj¿ Âø¿ Â“¿ ÂÁ¿ Ê¿ Ê-¿ Ê6¿ Ê\¿ Êc¿ Êg¿ Êh¿ Êß¿ Ê∆¿ Á¿ Áf¿ ÁÜ¿ Áî¿ Áö¿ ÁÙ¿ Ë¿ Ë¿ Ë<¿ Ëf¿ Ëo¿ Ëï¿ Ëú¿ Ë†¿ Ë°¿ Ë…¿ Ë‹¿ È6¿ Èg¿ È|¿ ÈÑ¿ È©¿ Èø¿ È«¿ È·¿ ÈÁ¿ ÈÎ¿ ÈÏ¿ Í¿ Í2¿ Íå¿ ÍΩ¿ Í“¿ Í⁄¿ Íˇ¿ Î¿ Î¿ Î=¿ ÎC¿ ÎT¿ ÎX¿ ÎY¿ Î£¿ Î¥¿ Îπ¿ Î˝¿ ÏO¿ Ïë¿ Ïª¿ ÏÔ¿ Ì ¿ ÌW¿ Ìm¿ Ìu¿ Ì{¿ Ìå¿ Ìê¿ Ìë¿ Ìù¿ Ì¬¿ Ì€¿ Ó¿ Ó3¿ Ó4¿ Óf¿ Óâ¿ Ó•¿ Ô¿ Ô-¿ ÔD¿ Ôr¿ Ôv¿ Ôw¿ ÔÉ¿ Ôï¿ Ô©¿ Ô√¿ ÔÔ¿  ¿ 4¿ [¿ Ç¿ Ü¿ á¿ ì¿ Æ¿ Ò¿ Ò4¿ ÒW¿ Ò|¿ ÒÇ¿ Ò•¿ Ò ¿ Ò–¿ ÒÌ¿ ÒÒ¿ ÒÚ¿ Ò˛¿ Ú2¿ Úu¿ Ú∏¿ Ú€¿ Ú˚¿ Û¿ Û$¿ ÛD¿ ÛJ¿ Ûl¿ Ûp¿ Ûq¿ Ûõ¿ Ûú¿ ÛË¿ ÛÈ¿ Ù¿ Ù"¿ Ù>¿ Ùj¿ ÙÑ¿ Ù∞¿ Ù∂¿ Ù∫¿ Ùª¿ Ù⁄¿ ÙÔ¿ ı¿ ı(¿ ıC¿ ı]¿ ıy¿ ı¿ ıÉ¿ ıÑ¿ ıµ¿ ı ¿ ıÁ¿ ˆ¿ ˆA¿ ˆ[¿ ˆõ¿ ˆ°¿ ˆ•¿ ˆ¶¿ ˆ˘¿ ˜H¿ ˜û¿ ˜ü¿ ˜Ï¿ ˜Ú¿ ¯C¿ ¯ì¿ ¯‡¿ ˘,¿ ˘x¿ ˘~¿ ˘é¿ ˘î¿ ˘’¿ ˙¿ ˙]¿ ˙Ä¿ ˙Å¿ ˙Æ¿ ˙Ø¿ ˙Í¿ ˚{¿ ˚î¿ ˚ﬁ¿ ¸B¿ ¸õ¿ ¸ﬂ¿ ¸Ï¿ ˝m¿ ˝Ë¿ ˛¿ ˛E¿ ˛|¿ ˛Ö¿ ˛ã¿ ˛è¿ ˛ê¿ ˛ﬂ¿ ˇ¿ ˇ¿ ˇe¿ ˇs¿ ˇy¿ ˇ ¿ ˇÏ¿  ¿ O¿ b¿ h¿ ã¿ å¿ “¿¿E¿o¿v¿w¿é¿ö¿¿¿#¿$¿l¿r¿Ç¿à¿–¿¿N¿s¿Ø¿“¿˜¿D¿H¿I¿ó¿ß¿≠¿Ω¿√¿
¿U¿ö¿◊¿¿<¿v¿ô¿ ¿(¿o¿À¿Ã¿3¿s¿t¿°¿∆¿Â¿	¿	è¿	–¿
¿
*¿
D¿
n¿
â¿
•¿
∞¿
”¿
ˆ¿¿:¿í¿‰¿'¿J¿d¿ì¿Æ¿≈¿–¿÷¿◊¿¿K¿O¿P¿\¿è¿±¿√¿…¿	¿ ¿è¿ó¿™¿’¿Ÿ¿⁄¿Ê¿¿;¿M¿S¿ì¿™¿Ó¿=¿¨¿¥¿«¿¿¿¿d¿ö¿‡¿·¿ˇ¿N¿\¿Ü¿∫¿Ÿ¿Û¿˘¿¿G¿o¿ä¿¶¿¡¿¿ ¿;¿Q¿Y¿_¿â¿ç¿é¿∏¿·¿¿Z¿[¿w¿õ¿¡¿¿'¿M¿|¿Ñ¿∑¿Ω¿æ¿	¿X¿h¿Å¿–¿¿^¿à¿¨¿Œ¿‘¿Ù¿¿¿4¿q¿¥¿∏¿π¿≈¿¿¿(¿[¿}¿è¿ï¿ˇ¿#¿'¿(¿4¿v¿ô¿‹¿‡¿·¿Ì¿¿¿'¿4¿Ñ¿¬¿¿e¿∂¿¿I¿s¿‚¿P¿^¿u¿ö¿¬¿◊¿Â¿ &¿ ,¿ 0¿ 1¿ S¿ Å¿ Ç¿ é¿ Œ¿ ˙¿!¿!@¿!A¿!]¿!ú¿!º¿!‚¿!Í¿!¿!Ù¿!ı¿"¿">¿"?¿"è¿"€¿"Ë¿"˝¿#J¿#K¿#¿#Ö¿#”¿#ˆ¿$.¿$a¿$ù¿$°¿$¢¿$¿%9¿%I¿%O¿%ö¿%ƒ¿%Û¿&&¿&*¿&Z¿&v¿&í¿&ñ¿&ó¿&Â¿'*¿':¿'@¿'ã¿'∞¿'≈¿'˚¿'ˇ¿(¿(1¿(B¿(F¿(G¿(ï¿(Ê¿(ˆ¿(¸¿)J¿)s¿)é¿)∆¿) ¿)À¿*¿*j¿*z¿*Ä¿*Ã¿*˜¿+¿+J¿+N¿+j¿+Ü¿+ù¿+°¿+¢¿+›¿+„¿,%¿,s¿,¡¿-¿-¿-\¿-£¿-∏¿-˙¿.;¿.?¿.@¿.Ä¿.Ü¿.◊¿/¿/h¿/π¿0&¿0V¿0c¿0∞¿0±¿0·¿1)¿1*¿1`¿1~¿1†¿1«¿1Œ¿1œ¿1˜¿1˚¿1¸¿27¿2y¿2z¿2∏¿2æ¿2˝¿3;¿3~¿3Ç¿3É¿3‡¿3Ê¿4A¿4G¿4ë¿4¡¿4«¿5¿5n¿5ë¿5˛¿6@¿6≈¿7+¿7p¿7q¿7Ñ¿7ô¿7ı¿8O¿8t¿8}¿8ä¿8ë¿8ï¿8ñ¿8“¿8ÿ¿9¿9Y¿9|¿9¶¿: ¿:c¿:à¿:±¿:Û¿; ¿;a¿;g¿;è¿;ì¿;î¿;€¿;Ò¿<¿<?¿<`¿<∞¿<ﬂ¿=¿=X¿=a¿=g¿=∂¿=Õ¿>¿>¿>a¿>Ä¿>°¿>√¿?¿?3¿?W¿?Ç¿?à¿?™¿?´¿?˙¿@H¿@Å¿@à¿@◊¿A(¿A=¿AY¿A≠¿AÒ¿B¿B9¿B_¿B°¿B≈¿C¿C¿C<¿Cg¿Cë¿C†¿C¨¿CÃ¿C¯¿D#¿D0¿DU¿Do¿Dó¿Dª¿DË¿E¿E,¿E:¿E\¿Eä¿E∑¿E∆¿E“¿E˜¿F¿F=¿Fb¿Fs¿F{¿FÅ¿FÇ¿FÃ¿F–¿F—¿G¿G"¿Gq¿G¡¿H¿H?¿H@¿Hì¿H‡¿I,¿IÄ¿I”¿IÏ¿J¿J,¿J3¿J[¿JÉ¿Já¿Jà¿JŸ¿JË¿JÌ¿K>¿Ká¿K—¿L!¿L1¿L6¿Lá¿L—¿M¿MS¿Mç¿Mí¿Mﬁ¿N.¿Nw¿Ní¿Nπ¿O
¿O¿O¿O,¿O-¿Oz¿O¿O…¿P¿P&¿PH¿Pm¿På¿P≠¿Pˇ¿Q"¿QE¿Qf¿Qâ¿R¿R	¿R¿R¿R\¿R{¿R∞¿RÌ¿S'¿S:¿SY¿SØ¿Sº¿S€¿T1¿T>¿TG¿TK¿TL¿T|¿TØ¿TÙ¿U ¿UQ¿Uâ¿U∞¿U⁄¿V
¿V¿V#¿V'¿V(¿VM¿Vπ¿V∫¿V∆¿V”¿W¿W5¿W_¿W±¿Wª¿W”¿WŸ¿XR¿X£¿XÎ¿Y,¿Yâ¿Yç¿Yé¿Yö¿Y≥¿YÏ¿ZT¿Zó¿Z∫¿Z¸¿[¿[h¿[∑¿\ ¿\P¿\á¿\’¿]¿]A¿]u¿]Ω¿]˛¿^I¿^è¿^¿^Ò¿_B¿_C¿_|¿_µ¿_∂¿_Ô¿`#¿`]¿`a¿`b¿`≤¿a¿aH¿ap¿aã¿a≠¿a–¿aÙ¿b¿b;¿bi¿bj¿bæ¿c¿cz¿c£¿cß¿c®¿c˚¿d^¿dÜ¿d¬¿eF¿eÑ¿eÓ¿fJ¿fK¿fp¿fû¿f§¿f•¿fƒ¿g¿g¿g¿g;¿gu¿g{¿g|¿g–¿h¿hM¿h™¿hÃ¿i
¿ih¿iã¿ië¿i∆¿j"¿jC¿jÇ¿j·¿k¿k¿k¿kQ¿kñ¿l¿l¿lE¿lf¿lØ¿l—¿l◊¿m¿m7¿mÅ¿m§¿m™¿m´¿m“¿m”¿mÓ¿mÚ¿mÛ¿n?¿n\¿nÁ¿o¿o<¿oZ¿o{¿oü¿o¿¿o„¿p¿p¿pK¿pÑ¿p°¿p◊¿q ¿q_¿qπ¿q·¿rL¿rY¿rà¿ré¿rﬂ¿r„¿r‰¿sG¿så¿s¿¿t¿tL¿tz¿t·¿tÈ¿tÔ¿uD¿uf¿uç¿uÔ¿uˆ¿u˙¿u˚¿vL¿vÅ¿vá¿vÿ¿vÒ¿v˜¿w@¿wF¿wó¿w€¿w·¿x-¿xu¿xπ¿y¿yY¿yØ¿y÷¿y‚¿yÒ¿z¿z¿z6¿z=¿zA¿zB¿zÇ¿z£¿z›¿zﬁ¿{¿{K¿{Q¿{R¿{í¿{“¿{”¿|¿|e¿|à¿|ª¿|¡¿|¬¿|˚¿}.¿}/¿}R¿}Ö¿}ã¿}è¿}ê¿}„¿}‰¿~L¿~x¿~ë¿~ƒ¿~¯¿~ˇ¿e¿|¿û¿±¿ƒ¿À¿Ï¿Ä¿Ä1¿Äd¿Äò¿Ä°¿Ä∫¿Å¿Å¿Å.¿Å7¿Å=¿ÅA¿ÅB¿ÅN¿Åè¿Åﬂ¿ÅÌ¿ÅÛ¿Ç%¿Ç)¿Ç*¿Ç6¿Çm¿Çê¿ÇÀ¿Ç˛¿É¿É(¿ÉD¿É\¿ÉÄ¿É®¿É±¿Éæ¿É·¿Ñ¿Ñ¿ÑC¿Ñu¿Ñ≈¿ÑÀ¿Ñœ¿Ñ–¿Ö"¿Ö#¿Ö/¿Öj¿ÖÜ¿Öú¿Ö±¿ÖÀ¿ÖÊ¿Ü¿ÜM¿ÜS¿ÜW¿ÜX¿Üd¿Ü©¿Ü‘¿á¿ák¿á¢¿áŸ¿à1¿àv¿àÈ¿â@¿âê¿â€¿âﬂ¿â‡¿âÏ¿ä¿ä<¿äT¿äu¿äç¿äø¿ä ¿ä—¿ä’¿ä◊¿äÿ¿ã¿ã,¿ãP¿ãk¿ã{¿ã|¿ãà¿ã…¿ã ¿ã÷¿ã¸¿ã˝¿å	¿å+¿å,¿å^¿åÅ¿å≤¿å—¿åﬂ¿åÂ¿åÊ¿ç¿ç6¿ç7¿çn¿çÜ¿çå¿çç¿ç°¿ç”¿é ¿é¿é
¿é¿é¿éN¿é~¿éö¿é”¿è ¿è,¿è_¿èe¿èi¿èj¿èv¿èõ¿è¥¿èﬂ¿è„¿è‰¿è¿ê¿ê0¿êD¿êH¿êI¿êU¿êb¿ê∏¿ê∫¿êª¿ë¿ë#¿ë'¿ëv¿ë«¿í¿íg¿í∏¿íﬂ¿í„¿ì%¿ìr¿ì≤¿î¿î&¿î*¿î8¿î<¿îç¿î”¿ï¿ï`¿ï≥¿ïÒ¿ñ?¿ñh¿ñn¿ñ∂¿ó¿óT¿óî¿óö¿óÊ¿ò+¿ò{¿òà¿ò¬¿ò√¿ò˘¿òˇ¿ôO¿ôù¿ôË¿ôÓ¿ö?¿öé¿ö∆¿õ¿õ¿õ¿õL¿õf¿õâ¿õ¶¿õ”¿õ¸¿õ˝¿ú%¿ú&¿úV¿úp¿úò¿úø¿úÕ¿ú”¿úÛ¿ù
¿ù¿ù¿ùG¿ùg¿ùï¿ùæ¿ùÃ¿ù“¿ùÙ¿û¿û¿û¿ûZ¿û`¿ûü¿ûÊ¿ü+¿üa¿üã¿üô¿üü¿ü¬¿üŸ¿ü›¿üﬁ¿†(¿†.¿†l¿†∞¿†Ú¿°&¿°O¿°]¿°c¿°Ö¿°ú¿°†¿°°¿°≠¿°ı¿¢$¿¢M¿¢å¿¢ö¿¢†¿¢°¿¢√¿£¿£F¿£ç¿£π¿£„¿£Í¿£Î¿§¿§)¿§a¿§≥¿§À¿§‘¿§⁄¿§ﬁ¿§ﬂ¿§Î¿•&¿•N¿•b¿•h¿•á¿•»¿•Œ¿•ˇ¿¶7¿¶s¿¶∑¿¶˙¿¶˛¿ß ¿ß¿ß5¿ßH¿ßI¿ßq¿ßç¿ß≠¿ßÕ¿ß€¿ß·¿ß˚¿®¿®¿®¿®V¿®n¿®s¿®æ¿®€¿®¸¿®˝¿©!¿©S¿©T¿©|¿©í¿©≥¿©‡¿©Ó¿©Ù¿©ı¿™¿™%¿™)¿™*¿™W¿™p¿™î¿™∂¿™ƒ¿™ ¿™Â¿™¸¿´ ¿´¿´-¿´S¿´v¿´ò¿´¶¿´¨¿´«¿´ﬁ¿´‚¿´„¿¨!¿¨B¿¨n¿¨¶¿¨¥¿¨∫¿¨ª¿¨ﬂ¿¨˚¿≠¿≠¿≠¿≠¿≠V¿≠s¿≠õ¿≠√¿≠—¿≠◊¿≠¯¿Æ¿Æ¿Æ¿Æã¿Æ‹¿ÆÛ¿Ø¿ØÜ¿Øﬁ¿Ø¿Ø˙¿∞¿∞-¿∞R¿∞n¿∞°¿∞∞¿± ¿±2¿±:¿±@¿±D¿±E¿±Q¿±ô¿±›¿±ﬁ¿≤¿≤¿≤ú¿≤”¿≤·¿≤Á¿≤Ë¿≥&¿≥'¿≥`¿≥x¿≥±¿≥˜¿¥¿¥D¿¥E¿¥c¿¥¥¿¥∫¿¥ª¿µ¿µ¿µs¿µÅ¿µá¿µà¿µû¿µÈ¿∂!¿∂(¿∂,¿∂-¿∂9¿∂t¿∂ú¿∂∞¿∂∂¿∂∑¿∂÷¿∂¿∂ˆ¿∑¿∑Q¿∑ç¿∑Ω¿∑Ò¿∏%¿∏k¿∏¨¿∏∞¿∏≤¿∏≥¿∏˘¿π8¿π9¿πg¿πh¿πt¿π†¿π‹¿∫¿∫¿∫¿∫¿∫¿∫G¿∫É¿∫´¿∫±¿∫µ¿∫∂¿∫¬¿ª
¿ªF¿ªy¿ª¿ªÉ¿ªÑ¿ªê¿ªÀ¿ªÛ¿º¿º¿ºz¿ºç¿ºì¿ºî¿ºÎ¿Ω6¿Ωu¿Ωπ¿ΩŒ¿Ω÷¿Ω‹¿Ω›¿ΩÔ¿ΩÛ¿Ωı    
_kCaretGap_kCaretHeightOffset_kFloatingCursorSizeIncrease_kFloatingCursorRadius6_kShortestDistanceSquaredWithFloatingAndRegularCursorsTextSelectionPointVerticalCaretMovementRunRenderEditable_RenderEditableCustomPaintRenderEditablePainter_TextHighlightPainter_CaretPainter_CompositeRenderEditablePainter Aò